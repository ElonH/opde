<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Opde Issues Tracker</title>
    <link>https://elonh.github.io/opde/</link>
    <description>Recent content in Home on Opde Issues Tracker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Jan 2021 15:26:15 +0000</lastBuildDate>
    
	<atom:link href="https://elonh.github.io/opde/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:34:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.143&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:34:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.143&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:34:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.143&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:32:49 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:32:49 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:32:49 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/05-use-spandsp3.patch using plaintext: patching file daemon/Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/rtpengine-no-transcode/rtpengine-mr9.5.1.3/kernel-module&amp;#39; make -C /openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.143 M=/openwrt/build_dir/target-x86_64_musl/rtpengine-no-transcode/rtpengine-mr9.5.1.3/kernel-module O=/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.143 modules make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:32:49 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/05-use-spandsp3.patch using plaintext: patching file daemon/Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/rtpengine-transcode/rtpengine-mr9.5.1.3/kernel-module&amp;#39; make -C /openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.143 M=/openwrt/build_dir/target-x86_64_musl/rtpengine-transcode/rtpengine-mr9.5.1.3/kernel-module O=/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.143 modules make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:31:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:31:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:31:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:31:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:31:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/090-app_dial-expanded-A-option-to-add-caller-announcement.patch using plaintext: patching file apps/app_dial.c patching file doc/CHANGES-staging/app_dial_announcement.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:31:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:31:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c Applying ./patches/030-cdefs.patch using plaintext: patching file xpp/hexfile.h autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:31:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:31:02 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_mdio-netlink/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:30:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_mdio-netlink/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mdio-netlink/compile -j$(nproc) || make package/feeds/packages/mdio-netlink/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.143&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/mdio-netlink-2021-07-19-65f6898f/kernel/mdio-netlink.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/mdio-netlink-2021-07-19-65f6898f/kernel/mdio-netlink.mod.o LD [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/mdio-netlink-2021-07-19-65f6898f/kernel/mdio-netlink.ko make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.143&amp;#39; grep: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/mdio-netlink-2021-07-19-65f6898f/./Module.symvers: No such file or directory Package kmod-mdio-netlink is missing dependencies for the following libraries: libphy.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_qemu/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:29:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_qemu/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qemu/compile -j$(nproc) || make package/feeds/packages/qemu/compile V=s Compile.txt Applying ./patches/0001-configure-allow-disable-fortify_source.patch using plaintext: patching file configure Applying ./patches/0002-configure-allow-enabling-disabling-libudev-from-comm.patch using plaintext: patching file configure Applying ./patches/0003-configure-enable-guest_agent-no-matter-whether-softm.patch using plaintext: patching file configure Applying ./patches/0004-disas-fix-compilation-failure-when-isnan-is-a-macro.patch using plaintext: patching file disas/libvixl/vixl/utils.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:25:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_glib2/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:25:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_glib2/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/glib2/compile -j$(nproc) || make package/feeds/packages/glib2/compile V=s Compile.txt Applying ./patches/003-valgrind.h-mips16-fix.patch using plaintext: patching file glib/valgrind.h Applying ./patches/004-no-distutils.patch using plaintext: patching file meson.build Applying ./patches/005-uclibc.patch using plaintext: patching file meson.build Applying ./patches/006-c99.patch using plaintext: patching file meson.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_irssi/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:25:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_irssi/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/irssi/compile -j$(nproc) || make package/feeds/packages/irssi/compile V=s Compile.txt Applying ./patches/010-Fix-finding-OpenSSL-when-1.1-with-deprecated-APIs-di.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_quassel-irssi/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:25:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_quassel-irssi/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/quassel-irssi/compile -j$(nproc) || make package/feeds/packages/quassel-irssi/compile V=s Compile.txt Applying ./patches/001-respect-cflags.patch using plaintext: patching file core/Makefile Applying ./patches/002-use-cc-var.patch using plaintext: patching file core/Makefile Applying ./patches/003-use-pkgconfig-ldflags-quasselc.patch using plaintext: patching file core/Makefile Applying ./patches/010-Get-compatible-with-potential-irssi-abi-8-and-drop-p.patch using plaintext: patching file core/Makefile patching file core/quassel-net.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_quasselc/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:25:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_quasselc/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/quasselc/compile -j$(nproc) || make package/feeds/packages/quasselc/compile V=s Compile.txt Applying ./patches/001-respect-cflags-ldflags.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/QuasselC-a0a1e6bd87d3eac68b5369972d1c2035cfe47e94&amp;#39; Package glib-2.0 was not found in the pkg-config search path. Perhaps you should add the directory containing `glib-2.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_spice/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:25:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_spice/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/spice/compile -j$(nproc) || make package/feeds/packages/spice/compile V=s Compile.txt Applying ./patches/010-doxy.patch using plaintext: patching file meson.build Applying ./patches/030-include-generated-code.patch using plaintext: patching file subprojects/spice-common/common/meson.build Applying ./patches/040-only-server.patch using plaintext: patching file meson.build Applying ./patches/050-no-mkenums.patch using plaintext: patching file server/meson.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:23:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:23:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:23:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:23:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 191 (offset 31 lines). Hunk #2 succeeded at 254 (offset 31 lines). Hunk #3 succeeded at 389 (offset 31 lines).</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:23:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:23:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:23:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:23:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:23:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:23:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:23:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:23:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:22:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h Applying ./patches/010-no-acl.patch using plaintext: patching file Kconfig patching file smb2pdu.c patching file smbacl.c patching file vfs.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:22:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/120-increase-sip-message-size.patch using plaintext: patching file conf.d/ysipchan.conf.sample Applying ./patches/130-fix-ilbc-flags.patch using plaintext: patching file libs/ilbc/Makefile.in Applying ./patches/140-warning-unknown-architecture.patch using plaintext: patching file libs/miniwebrtc/typedefs.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:21:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:21:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/040-gcc11.patch using plaintext: patching file src/include/switch_core_media.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ustream-ssl/mbedtls/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:20:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ustream-ssl/mbedtls/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ustream-ssl/compile -j$(nproc) || make package/feeds/base/ustream-ssl/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:20:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_libuhttpd/mbedtls/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:20:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_libuhttpd/mbedtls/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libuhttpd/compile -j$(nproc) || make package/feeds/packages/libuhttpd/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_libuwsc/mbedtls/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:20:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_libuwsc/mbedtls/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libuwsc/compile -j$(nproc) || make package/feeds/packages/libuwsc/compile V=s Compile.txt Applying ./patches/001-fix_find_lua.patch using plaintext: patching file cmake/Modules/FindLua.cmake CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvpn/mbedtls/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:20:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvpn/mbedtls/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvpn/compile -j$(nproc) || make package/feeds/packages/openvpn/compile V=s Compile.txt Applying ./patches/001-reproducible-remove_DATE.patch using plaintext: patching file src/openvpn/options.c Applying ./patches/002-add-wolfssl-support.patch using plaintext: patching file configure.ac patching file src/openvpn/syshead.h Applying ./patches/100-mbedtls-disable-runtime-version-check.patch using plaintext: patching file src/openvpn/ssl_mbedtls.c Applying ./patches/210-build_always_use_internal_lz4.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:20:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:20:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pianod/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:20:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pianod/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pianod/compile -j$(nproc) || make package/feeds/packages/pianod/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.45</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_rtty/mbedtls/compile.45/</link>
      <pubDate>Wed, 01 Sep 2021 09:20:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_rtty/mbedtls/compile.45/</guid>
      <description>build number: 45
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/rtty/compile -j$(nproc) || make package/feeds/packages/rtty/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:58:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.134&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_gsmlib/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:57:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_gsmlib/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:56:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:56:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:56:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c Applying ./patches/030-cdefs.patch using plaintext: patching file xpp/hexfile.h autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:56:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:56:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-upstream-crash-fix-r6470.patch using plaintext: patching file modules/ysipchan.cpp Applying ./patches/120-increase-sip-message-size.patch using plaintext: patching file conf.d/ysipchan.conf.sample Applying ./patches/130-fix-ilbc-flags.patch using plaintext: patching file libs/ilbc/Makefile.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:55:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:52:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:51:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:49:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:49:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openblas/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:47:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openblas/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openblas/compile -j$(nproc) || make package/feeds/packages/openblas/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/OpenBLAS-0.3.15&amp;#39; /openwrt/staging_dir/host/bin/ccache: invalid option -- &amp;#39;D&amp;#39; Usage: ccache [options] ccache compiler [compiler options] compiler [compiler options] (via symbolic link) Common options: -c, --cleanup delete old files and recalculate size counters (normally not needed as this is done automatically) -C, --clear clear the cache completely (except configuration) --config-path PATH operate on configuration file PATH instead of the default -d, --directory PATH operate on cache directory PATH instead of the default --evict-older-than AGE remove files older than AGE (unsigned integer with a d (days) or s (seconds) suffix) -F, --max-files NUM set maximum number of files in cache to NUM (use 0 for no limit) -M, --max-size SIZE set maximum size of cache to SIZE (use 0 for no limit); available suffixes: k, M, G, T (decimal) and Ki, Mi, Gi, Ti (binary); default suffix: G -X, --recompress LEVEL recompress the cache to level LEVEL (integer or &amp;#34;uncompressed&amp;#34;) using the Zstandard algorithm; see &amp;#34;Cache compression&amp;#34; in the manual for details -o, --set-config KEY=VAL set configuration item KEY to value VAL -x, --show-compression show compression statistics -p, --show-config show current configuration options in human-readable format -s, --show-stats show summary of configuration and statistics counters in human-readable format -z, --zero-stats zero statistics counters -h, --help print this help text -V, --version print version and copyright information Options for scripting or debugging: --checksum-file PATH print the checksum (64 bit XXH3) of the file at PATH --dump-manifest PATH dump manifest file at PATH in text format --dump-result PATH dump result file at PATH in text format --extract-result PATH extract data stored in result file at PATH to the current working directory -k, --get-config KEY print the value of configuration key KEY --hash-file PATH print the hash (160 bit BLAKE3) of the file at PATH --print-stats print statistics counter IDs and corresponding values in machine-parsable format See also the manual on &amp;lt;https://ccache.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:47:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:47:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:47:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:47:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:47:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/090-app_dial-expanded-A-option-to-add-caller-announcement.patch using plaintext: patching file apps/app_dial.c patching file doc/CHANGES-staging/app_dial_announcement.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:45:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:45:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:45:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:45:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 191 (offset 31 lines). Hunk #2 succeeded at 254 (offset 31 lines). Hunk #3 succeeded at 389 (offset 31 lines).</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:45:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:45:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:45:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:45:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:45:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:45:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:45:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:45:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:43:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:43:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:42:28 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:42:28 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:38:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.134&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:37:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.134&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:37:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.134&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.44</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.44/</link>
      <pubDate>Sun, 01 Aug 2021 09:37:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.44/</guid>
      <description>build number: 44
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:17:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.128&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:17:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:17:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:17:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:16:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:16:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:15:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl-authen-sasl-xs/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:14:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl-authen-sasl-xs/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-authen-sasl-xs/compile -j$(nproc) || make package/feeds/packages/perl-authen-sasl-xs/compile V=s Compile.txt Applying ./patches/100-remove-devel-checklib-checks.patch using plaintext: patching file Makefile.PL Warning: prerequisite Authen::SASL 2.08 not found. Checking if your kit is complete... Looks good Generating a Unix-style Makefile Writing Makefile for Authen::SASL::XS Writing MYMETA.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl-dbi/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:14:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl-dbi/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-dbi/compile -j$(nproc) || make package/feeds/packages/perl-dbi/compile V=s Compile.txt Your perl was compiled with gcc (version 9.3.0), okay. Creating test wrappers for DBD::Gofer: t/zvg_01basics.t t/zvg_02dbidrv.t t/zvg_03handle.t t/zvg_04mods.t t/zvg_05concathash.t t/zvg_06attrs.t t/zvg_07kids.t t/zvg_08keeperr.t t/zvg_09trace.t t/zvg_10examp.t t/zvg_11fetch.t t/zvg_12quote.t t/zvg_13taint.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl-html-parser/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:14:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl-html-parser/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-html-parser/compile -j$(nproc) || make package/feeds/packages/perl-html-parser/compile V=s Compile.txt Warning: prerequisite HTML::Tagset 0 not found. Warning: prerequisite HTTP::Headers 0 not found. Warning: prerequisite URI 0 not found. Warning: prerequisite URI::URL 0 not found. Checking if your kit is complete.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:14:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl/compile -j$(nproc) || make package/feeds/packages/perl/compile V=s Compile.txt Applying ./patches/001-macos_11_support.patch using plaintext: File hints/darwin.sh is read-only; trying to patch anyway patching file hints/darwin.sh Applying ./patches/002-add-Internals-getcwd.patch using plaintext: File MANIFEST is read-only; trying to patch anyway patching file MANIFEST patching file t/io/getcwd.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:14:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:14:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-upstream-crash-fix-r6470.patch using plaintext: patching file modules/ysipchan.cpp Applying ./patches/120-increase-sip-message-size.patch using plaintext: patching file conf.d/ysipchan.conf.sample Applying ./patches/130-fix-ilbc-flags.patch using plaintext: patching file libs/ilbc/Makefile.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_idevicerestore/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:10:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_idevicerestore/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/idevicerestore/compile -j$(nproc) || make package/feeds/packages/idevicerestore/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking build system type... x86_64-pc-linux-gnu checking host system type... x86_64-openwrt-linux-gnu checking target system type... x86_64-openwrt-linux-gnu checking for a BSD-compatible install.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:10:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.128&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:09:02 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:08:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:08:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.128&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.128&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:04:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_seafile-seahub/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:02:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_seafile-seahub/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-seahub/compile -j$(nproc) || make package/feeds/packages/seafile-seahub/compile V=s Compile.txt Applying ./patches/020-Makefile-fixes.patch using plaintext: patching file Makefile Applying ./patches/030-uci-conf.patch using plaintext: patching file seahub/settings.py Applying ./patches/040-manage-shebang.patch using plaintext: patching file manage.py Collecting Django==2.2.24 Downloading Django-2.2.24.tar.gz (9.2 MB) Collecting pytz==2021.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:02:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:02:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:00:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:00:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:00:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:00:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:00:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:00:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.43</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.43/</link>
      <pubDate>Thu, 01 Jul 2021 09:00:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.43/</guid>
      <description>build number: 43
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/regular/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/regular/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fullconenat/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fullconenat/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_domoticz/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_domoticz/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/domoticz/compile -j$(nproc) || make package/feeds/packages/domoticz/compile V=s Compile.txt Applying ./patches/012-minizip-overflow.patch using plaintext: patching file main/unzip_stream.h -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-aarch64_cortex-a72_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_freetype/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_freetype/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/freetype/compile -j$(nproc) || make package/feeds/packages/freetype/compile V=s Compile.txt Applying ./patches/010-meson.patch using plaintext: patching file meson.build Applying ./patches/020-distutils.patch using plaintext: patching file meson.build Applying ./patches/030-meson-pkgconfig.patch using plaintext: patching file meson.build The Meson build system Version: 0.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_glib2/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_glib2/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/glib2/compile -j$(nproc) || make package/feeds/packages/glib2/compile V=s Compile.txt Applying ./patches/003-valgrind.h-mips16-fix.patch using plaintext: patching file glib/valgrind.h Applying ./patches/004-no-distutils.patch using plaintext: patching file meson.build Applying ./patches/005-uclibc.patch using plaintext: patching file meson.build Applying ./patches/006-c99.patch using plaintext: patching file meson.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gst1-plugins-base/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gst1-plugins-base/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gst1-plugins-base/compile -j$(nproc) || make package/feeds/packages/gst1-plugins-base/compile V=s Compile.txt Applying ./patches/010-distutils.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/gst-plugins-base-1.18.4 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/gst-plugins-base-1.18.4/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gst1-plugins-ugly/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gst1-plugins-ugly/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gst1-plugins-ugly/compile -j$(nproc) || make package/feeds/packages/gst1-plugins-ugly/compile V=s Compile.txt Makefile:162: WARNING: skipping gstreamer1-plugins-ugly -- package has no install section Applying ./patches/010-distutils.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/gst-plugins-ugly-1.18.4 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/gst-plugins-ugly-1.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gstreamer1/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gstreamer1/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gstreamer1/compile -j$(nproc) || make package/feeds/packages/gstreamer1/compile V=s Compile.txt Applying ./patches/010-gstplugin-use-lazy-symbol-binding.patch using plaintext: patching file gst/gstplugin.c Applying ./patches/020-distutils.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/gstreamer-1.18.4 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/gstreamer-1.18.4/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jsoncpp/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jsoncpp/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jsoncpp/compile -j$(nproc) || make package/feeds/packages/jsoncpp/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/jsoncpp-1.9.4 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/jsoncpp-1.9.4/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libgd/full/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libgd/full/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libgd/compile -j$(nproc) || make package/feeds/packages/libgd/compile V=s Compile.txt Applying ./patches/010-webp.patch using plaintext: patching file CMakeLists.txt Applying ./patches/100-no-cxx.patch using plaintext: patching file src/CMakeLists.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_zstd/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_zstd/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/zstd/compile -j$(nproc) || make package/feeds/packages/zstd/compile V=s Compile.txt Applying ./patches/001-fix-meson.patch using plaintext: patching file build/meson/lib/meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/zstd-1.4.9/build/meson Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/zstd-1.4.9/build/meson/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;bin_control, build.</description>
    </item>
    
    <item>
      <title>host-compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_glib2/host-compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_glib2/host-compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/glib2/host-compile -j$(nproc) || make package/feeds/packages/glib2/host-compile V=s Compile.txt Applying ./patches/003-valgrind.h-mips16-fix.patch using plaintext: patching file glib/valgrind.h Applying ./patches/004-no-distutils.patch using plaintext: patching file meson.build Applying ./patches/005-uclibc.patch using plaintext: patching file meson.build Applying ./patches/006-c99.patch using plaintext: patching file meson.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libevdev/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:39:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libevdev/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libevdev/compile -j$(nproc) || make package/feeds/packages/libevdev/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/libevdev-1.11.0 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/libevdev-1.11.0/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_naiveproxy/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_naiveproxy/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/naiveproxy/compile -j$(nproc) || make package/feeds/packages/naiveproxy/compile V=s Compile.txt Applying ./patches/001-Remove-concurrency-limit.patch using plaintext: patching file src/net/tools/naive/naive_proxy.cc patching file src/net/tools/naive/naive_proxy_bin.cc Hunk #1 succeeded at 296 (offset -3 lines). Archive: /openwrt/dl/gn-git_revision-dba01723a441c358d843a575cb7720d54ddcdf92.zip inflating: gn/out/gn inflating: gn/out/.cipdpkg/manifest.json Done. Made 366 targets from 133 files in 548ms bash: C: command not found install: cannot stat &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/naiveproxy-91.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_bitlbee/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_bitlbee/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/bitlbee/compile -j$(nproc) || make package/feeds/packages/bitlbee/compile V=s Compile.txt BitlBee configure Cannot find glib2 development libraries, aborting. (Install libglib2-dev?) make[3]: *** [Makefile:73: /openwrt/build_dir/target-aarch64_cortex-a72_musl/bitlbee-3.6/.configured_a17fb5ef857664f03cd0ce37cc5ea591] Error 1 </description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_fakepop/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_fakepop/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/fakepop/compile -j$(nproc) || make package/feeds/packages/fakepop/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/fakepop-10&amp;#39; Package glib-2.0 was not found in the pkg-config search path. Perhaps you should add the directory containing `glib-2.0.pc&amp;#39; to the PKG_CONFIG_PATH environment variable Package &amp;#39;glib-2.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_fastd/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_fastd/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/fastd/compile -j$(nproc) || make package/feeds/packages/fastd/compile V=s Compile.txt Applying ./patches/0001-config-allow-disabling-L2TP-offload-when-fastd-doesn.patch using plaintext: patching file src/config.y The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/fastd-22 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/fastd-22/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_flashrom/full/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_flashrom/full/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/flashrom/compile -j$(nproc) || make package/feeds/packages/flashrom/compile V=s Compile.txt Applying ./patches/010-bitbang.patch using plaintext: patching file meson.build patching file meson_options.txt Applying ./patches/020-raw-access.patch using plaintext: patching file meson.build Applying ./patches/030-ppc.patch using plaintext: patching file hwaccess.c Applying ./patches/040-uclibc.patch using plaintext: patching file meson.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_flashrom/pci/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_flashrom/pci/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/flashrom/compile -j$(nproc) || make package/feeds/packages/flashrom/compile V=s Compile.txt Applying ./patches/010-bitbang.patch using plaintext: patching file meson.build patching file meson_options.txt Applying ./patches/020-raw-access.patch using plaintext: patching file meson.build Applying ./patches/030-ppc.patch using plaintext: patching file hwaccess.c Applying ./patches/040-uclibc.patch using plaintext: patching file meson.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_flashrom/spi/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_flashrom/spi/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/flashrom/compile -j$(nproc) || make package/feeds/packages/flashrom/compile V=s Compile.txt Applying ./patches/010-bitbang.patch using plaintext: patching file meson.build patching file meson_options.txt Applying ./patches/020-raw-access.patch using plaintext: patching file meson.build Applying ./patches/030-ppc.patch using plaintext: patching file hwaccess.c Applying ./patches/040-uclibc.patch using plaintext: patching file meson.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_flashrom/usb/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_flashrom/usb/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/flashrom/compile -j$(nproc) || make package/feeds/packages/flashrom/compile V=s Compile.txt Applying ./patches/010-bitbang.patch using plaintext: patching file meson.build patching file meson_options.txt Applying ./patches/020-raw-access.patch using plaintext: patching file meson.build Applying ./patches/030-ppc.patch using plaintext: patching file hwaccess.c Applying ./patches/040-uclibc.patch using plaintext: patching file meson.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_fontconfig/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_fontconfig/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/fontconfig/compile -j$(nproc) || make package/feeds/packages/fontconfig/compile V=s Compile.txt Applying ./patches/010-Handle-absolute-sysconfdir-when-installing-symlinks.patch using plaintext: patching file conf.d/link_confs.py Applying ./patches/020-distutils.patch using plaintext: patching file meson.build Cloning into &amp;#39;freetype2&amp;#39;... Already on &amp;#39;meson&amp;#39; Your branch is up to date with &amp;#39;origin/meson&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_fuse3/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_fuse3/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/fuse3/compile -j$(nproc) || make package/feeds/packages/fuse3/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/fuse-3.10.1 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/fuse-3.10.1/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gkrellmd/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gkrellmd/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gkrellmd/compile -j$(nproc) || make package/feeds/packages/gkrellmd/compile V=s Compile.txt Applying ./patches/100-conf.patch using plaintext: patching file server/gkrellmd.conf make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/gkrellm-2.3.11/server&amp;#39; Package glib-2.0 was not found in the pkg-config search path. Perhaps you should add the directory containing `glib-2.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_iputils/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_iputils/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/iputils/compile -j$(nproc) || make package/feeds/packages/iputils/compile V=s Compile.txt Applying ./patches/001_version_fix.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/iputils-20210202 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/iputils-20210202/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_irqbalance/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_irqbalance/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/irqbalance/compile -j$(nproc) || make package/feeds/packages/irqbalance/compile V=s Compile.txt Applying ./patches/100-remove-libncursesw-dependency.patch using plaintext: patching file configure.ac Applying ./patches/110-fix-runtime-socket-directory.patch using plaintext: patching file irqbalance.h patching file ui/irqbalance-ui.h autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jose/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jose/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jose/compile -j$(nproc) || make package/feeds/packages/jose/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/jose-11 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/jose-11/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libdrm/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libdrm/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libdrm/compile -j$(nproc) || make package/feeds/packages/libdrm/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/libdrm-2.4.104 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/libdrm-2.4.104/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libinput/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libinput/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libinput/compile -j$(nproc) || make package/feeds/packages/libinput/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/libinput-1.17.1 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/libinput-1.17.1/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libmbim/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libmbim/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libmbim/compile -j$(nproc) || make package/feeds/packages/libmbim/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls, --enable-more-warnings configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libmpdclient/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libmpdclient/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libmpdclient/compile -j$(nproc) || make package/feeds/packages/libmpdclient/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/libmpdclient-2.19 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/libmpdclient-2.19/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libqrtr-glib/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libqrtr-glib/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libqrtr-glib/compile -j$(nproc) || make package/feeds/packages/libqrtr-glib/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_mbtools/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_mbtools/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mbtools/compile -j$(nproc) || make package/feeds/packages/mbtools/compile V=s Compile.txt Applying ./patches/010-glib.patch using plaintext: patching file configure.ac Applying ./patches/100-fix-unit-test-server-return-value.patch using plaintext: patching file tests/unit-test-server.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_mpc/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_mpc/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mpc/compile -j$(nproc) || make package/feeds/packages/mpc/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/mpc-0.33 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/mpc-0.33/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_nbd/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_nbd/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nbd/compile -j$(nproc) || make package/feeds/packages/nbd/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls, --disable-glibtest, --with-syslog configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_nlohmannjson/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_nlohmannjson/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nlohmannjson/compile -j$(nproc) || make package/feeds/packages/nlohmannjson/compile V=s Compile.txt + curl -f --connect-timeout 20 --retry 5 --location --insecure https://codeload.github.com/nlohmann/json/zip/v3.9.1?/nlohmannjson-3.9.1.zip % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 7032k 0 7032k 0 0 13.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_openvswitch/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_openvswitch/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ovn/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ovn/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pixman/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pixman/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pixman/compile -j$(nproc) || make package/feeds/packages/pixman/compile V=s Compile.txt Applying ./patches/0004-pixman-fix-detection-of-mips-dspr2.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pkg-config/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pkg-config/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pkg-config/compile -j$(nproc) || make package/feeds/packages/pkg-config/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip... aarch64-openwrt-linux-musl-strip checking for a thread-safe mkdir -p.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pkgconf/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pkgconf/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pkgconf/compile -j$(nproc) || make package/feeds/packages/pkgconf/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/pkgconf-1.7.4 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/pkgconf-1.7.4/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_sshfs/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_sshfs/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/sshfs/compile -j$(nproc) || make package/feeds/packages/sshfs/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/sshfs-3.7.1 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/sshfs-3.7.1/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_tang/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:38:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_tang/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tang/compile -j$(nproc) || make package/feeds/packages/tang/compile V=s Compile.txt Applying ./patches/010-http.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/tang-10 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/tang-10/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_bluez/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:35:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_bluez/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/bluez/compile -j$(nproc) || make package/feeds/packages/bluez/compile V=s Compile.txt Applying ./patches/001-bcm43xx-Add-bcm43xx-3wire-variant.patch using plaintext: patching file tools/hciattach.c Applying ./patches/002-bcm43xx-The-UART-speed-must-be-reset-after-the-firmw.patch using plaintext: patching file tools/hciattach_bcm43xx.c Applying ./patches/003-Increase-firmware-load-timeout-to-30s.patch using plaintext: patching file tools/hciattach.c Applying ./patches/004-Move-the-43xx-firmware-into-lib-firmware.patch using plaintext: patching file tools/hciattach_bcm43xx.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libesmtp/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:35:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libesmtp/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libesmtp/compile -j$(nproc) || make package/feeds/packages/libesmtp/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/libESMTP-1.1.0 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/libESMTP-1.1.0/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_lighttpd/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:35:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_lighttpd/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/lighttpd/compile -j$(nproc) || make package/feeds/packages/lighttpd/compile V=s Compile.txt Applying ./patches/010-meson-lua.patch using plaintext: patching file src/meson.build Applying ./patches/020-meson-zstd.patch using plaintext: patching file meson_options.txt Applying ./patches/030-101-upgrade-w-content-length.patch using plaintext: patching file src/http-header-glue.c Applying ./patches/040-mod_auth-close-http2-after-bad-pass.patch using plaintext: patching file src/connections.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_quassel-irssi/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:35:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_quassel-irssi/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/quassel-irssi/compile -j$(nproc) || make package/feeds/packages/quassel-irssi/compile V=s Compile.txt Applying ./patches/001-respect-cflags.patch using plaintext: patching file core/Makefile Applying ./patches/002-use-cc-var.patch using plaintext: patching file core/Makefile Applying ./patches/003-use-pkgconfig-ldflags-quasselc.patch using plaintext: patching file core/Makefile Applying ./patches/010-Get-compatible-with-potential-irssi-abi-8-and-drop-p.patch using plaintext: patching file core/Makefile patching file core/quassel-net.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_quasselc/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:35:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_quasselc/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/quasselc/compile -j$(nproc) || make package/feeds/packages/quasselc/compile V=s Compile.txt Applying ./patches/001-respect-cflags-ldflags.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/QuasselC-a0a1e6bd87d3eac68b5369972d1c2035cfe47e94&amp;#39; Package glib-2.0 was not found in the pkg-config search path. Perhaps you should add the directory containing `glib-2.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_spice-protocol/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:35:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_spice-protocol/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/spice-protocol/compile -j$(nproc) || make package/feeds/packages/spice-protocol/compile V=s Compile.txt + curl -f --connect-timeout 20 --retry 5 --location --insecure https://www.spice-space.org/download/releases/spice-protocol-0.14.3.tar.xz % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 22224 100 22224 0 0 116k 0 --:--:-- --:--:-- --:--:-- 116k The Meson build system Version: 0.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_gsmlib/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:35:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_gsmlib/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_bluelog/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:35:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_bluelog/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/bluelog/compile -j$(nproc) || make package/feeds/packages/bluelog/compile V=s Compile.txt Applying ./patches/100-gen-oui-fix-tempfile-use-mirror.patch using plaintext: patching file gen_oui.sh make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/Bluelog-1.1.2&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-aarch64_cortex-a72_musl/Bluelog-1.1.2=Bluelog-1.1.2 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DOPENWRT -I/openwrt/staging_dir/toolchain-aarch64_cortex-a72_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_irssi/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:35:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_irssi/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/irssi/compile -j$(nproc) || make package/feeds/packages/irssi/compile V=s Compile.txt Applying ./patches/010-Fix-finding-OpenSSL-when-1.1-with-deprecated-APIs-di.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_spice/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:35:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_spice/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/spice/compile -j$(nproc) || make package/feeds/packages/spice/compile V=s Compile.txt Applying ./patches/010-doxy.patch using plaintext: patching file meson.build Applying ./patches/030-include-generated-code.patch using plaintext: patching file subprojects/spice-common/common/meson.build Applying ./patches/040-only-server.patch using plaintext: patching file meson.build Applying ./patches/050-no-mkenums.patch using plaintext: patching file server/meson.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fast-classifier/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:34:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fast-classifier/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_shortcut-fe/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:34:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_shortcut-fe/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gst1-libav/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:34:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gst1-libav/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gst1-libav/compile -j$(nproc) || make package/feeds/packages/gst1-libav/compile V=s Compile.txt Applying ./patches/010-distutils.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/gst-libav-1.18.4 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/gst-libav-1.18.4/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jool/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:34:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jool/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php8/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:34:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php8/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php8/compile -j$(nproc) || make package/feeds/packages/php8/compile V=s Compile.txt Applying ./patches/0007-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0022-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0025-php-5.4.9-fixheader.patch using plaintext: patching file configure.ac Applying ./patches/0030-Remove-W3C-validation-icon-to-not-expose-the-reader-.patch using plaintext: patching file sapi/fpm/status.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_bonnie&#43;&#43;/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:33:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_bonnie&#43;&#43;/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/bonnie++/compile -j$(nproc) || make package/feeds/packages/bonnie++/compile V=s Compile.txt Applying ./patches/002-add-verbose-error-messages.patch using plaintext: patching file bon_file.cpp Applying ./patches/010-meson.patch using plaintext: patching file conf.h.meson patching file meson.build Applying ./patches/100-remove-using-namespace-std.patch using plaintext: patching file bon_time.cpp patching file bonnie++.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libqmi/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:33:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libqmi/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libqmi/compile -j$(nproc) || make package/feeds/packages/libqmi/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls, --enable-more-warnings configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_modemmanager/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:33:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_modemmanager/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/modemmanager/compile -j$(nproc) || make package/feeds/packages/modemmanager/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip... aarch64-openwrt-linux-musl-strip checking for a race-free mkdir -p.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-mcrypt/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:33:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-mcrypt/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-mcrypt/compile -j$(nproc) || make package/feeds/packages/php7-pecl-mcrypt/compile V=s Compile.txt bash: /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:44: /openwrt/build_dir/target-aarch64_cortex-a72_musl/pecl-php7/mcrypt-1.0.4/.prepared_a7f7fcebdaf1091f848dee280de2ebbe_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pulseaudio/avahi/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:33:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pulseaudio/avahi/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pulseaudio/compile -j$(nproc) || make package/feeds/packages/pulseaudio/compile V=s Compile.txt Applying ./patches/001-no_default_64mb_alloc.patch using plaintext: patching file src/pulsecore/memblock.c Applying ./patches/010-iconv.patch using plaintext: patching file meson.build Applying ./patches/020-doxygen.patch using plaintext: patching file meson.build The Meson build system Version: 0.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pulseaudio/noavahi/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:33:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pulseaudio/noavahi/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pulseaudio/compile -j$(nproc) || make package/feeds/packages/pulseaudio/compile V=s Compile.txt Applying ./patches/001-no_default_64mb_alloc.patch using plaintext: patching file src/pulsecore/memblock.c Applying ./patches/010-iconv.patch using plaintext: patching file meson.build Applying ./patches/020-doxygen.patch using plaintext: patching file meson.build The Meson build system Version: 0.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mac80211/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:32:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mac80211/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_conmon/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:32:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_conmon/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/conmon/compile -j$(nproc) || make package/feeds/packages/conmon/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/conmon-2.0.29 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/conmon-2.0.29/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gst1-plugins-bad/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:32:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gst1-plugins-bad/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gst1-plugins-bad/compile -j$(nproc) || make package/feeds/packages/gst1-plugins-bad/compile V=s Compile.txt Makefile:425: WARNING: skipping gstreamer1-plugins-bad -- package has no install section Applying ./patches/010-distutils.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/gst-plugins-bad-1.18.4 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/gst-plugins-bad-1.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gst1-plugins-good/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:32:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gst1-plugins-good/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gst1-plugins-good/compile -j$(nproc) || make package/feeds/packages/gst1-plugins-good/compile V=s Compile.txt Makefile:291: WARNING: skipping gstreamer1-plugins-good -- package has no install section Applying ./patches/010-distutils.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/gst-plugins-good-1.18.4 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/gst-plugins-good-1.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libpsl/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:32:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libpsl/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libpsl/compile -j$(nproc) || make package/feeds/packages/libpsl/compile V=s Compile.txt Applying ./patches/010-python.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/libpsl-0.21.1 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/libpsl-0.21.1/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libsoup/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:32:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libsoup/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libsoup/compile -j$(nproc) || make package/feeds/packages/libsoup/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/libsoup-2.72.0 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/libsoup-2.72.0/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-http/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:32:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-http/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-http/compile -j$(nproc) || make package/feeds/packages/php7-pecl-http/compile V=s Compile.txt bash: /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:67: /openwrt/build_dir/target-aarch64_cortex-a72_musl/pecl-php7/pecl_http-3.2.3/.prepared_20dfe5d6f40565268898b3ab5f71b82d_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-propro/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:32:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-propro/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-propro/compile -j$(nproc) || make package/feeds/packages/php7-pecl-propro/compile V=s Compile.txt bash: /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:50: /openwrt/build_dir/target-aarch64_cortex-a72_musl/pecl-php7/propro-2.1.0/.prepared_9e51009fe7eeb6e9f54468f3f00927b4_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-raphf/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:32:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-raphf/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-raphf/compile -j$(nproc) || make package/feeds/packages/php7-pecl-raphf/compile V=s Compile.txt bash: /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:50: /openwrt/build_dir/target-aarch64_cortex-a72_musl/pecl-php7/raphf-2.0.1/.prepared_313f1c9cfc1414c94c37cf7bc6cfe67a_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_elektra/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:31:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_elektra/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-aarch64_cortex-a72_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ffmpeg/custom/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:31:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ffmpeg/custom/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/aarch64_cortex-a72/packages/ffmpeg-custom_4.3.2-1_aarch64_cortex-a72.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_grilo-plugins/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:31:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_grilo-plugins/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/grilo-plugins/compile -j$(nproc) || make package/feeds/packages/grilo-plugins/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/grilo-plugins-0.3.13 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/grilo-plugins-0.3.13/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir, enable-vimeo, enable_gravatar, enable_opensubtitles&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_grilo/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:31:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_grilo/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/grilo/compile -j$(nproc) || make package/feeds/packages/grilo/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/grilo-0.3.13 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/grilo-0.3.13/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_json-glib/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:31:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_json-glib/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/json-glib/compile -j$(nproc) || make package/feeds/packages/json-glib/compile V=s Compile.txt Applying ./patches/01-remove-python-check.patch using plaintext: patching file meson.build Cloning into &amp;#39;glib&amp;#39;... Switched to a new branch &amp;#39;master&amp;#39; Branch &amp;#39;master&amp;#39; set up to track remote branch &amp;#39;master&amp;#39; from &amp;#39;origin&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_lcdgrilo/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:31:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_lcdgrilo/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/lcdgrilo/compile -j$(nproc) || make package/feeds/packages/lcdgrilo/compile V=s Compile.txt Applying ./patches/010-remove-check-dependency.patch using plaintext: patching file configure.ac Applying ./patches/020-vala.patch using plaintext: patching file src/lcdgrilo.vala autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libdmapsharing/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:31:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libdmapsharing/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libdmapsharing/compile -j$(nproc) || make package/feeds/packages/libdmapsharing/compile V=s Compile.txt Applying ./patches/001-disable_pixbuf.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libgee/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:31:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libgee/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libgee/compile -j$(nproc) || make package/feeds/packages/libgee/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_mpd/full/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:31:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_mpd/full/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mpd/compile -j$(nproc) || make package/feeds/packages/mpd/compile V=s Compile.txt Applying ./patches/010-iconv.patch using plaintext: patching file src/lib/icu/meson.build Applying ./patches/020-string-view.patch using plaintext: patching file src/tag/GenParseName.cxx Applying ./patches/030-no-avfilter.patch using plaintext: patching file src/lib/ffmpeg/meson.build The Meson build system Version: 0.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_mpd/mini/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:31:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_mpd/mini/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mpd/compile -j$(nproc) || make package/feeds/packages/mpd/compile V=s Compile.txt Applying ./patches/010-iconv.patch using plaintext: patching file src/lib/icu/meson.build Applying ./patches/020-string-view.patch using plaintext: patching file src/tag/GenParseName.cxx Applying ./patches/030-no-avfilter.patch using plaintext: patching file src/lib/ffmpeg/meson.build The Meson build system Version: 0.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_freeswitch-mod-bcg729/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:31:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_freeswitch-mod-bcg729/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-aarch64_cortex-a72_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_freeswitch/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:31:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_freeswitch/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>host-compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_vala/host-compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:31:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_vala/host-compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/vala/host-compile -j$(nproc) || make package/feeds/packages/vala/host-compile V=s Compile.txt + curl -f --connect-timeout 20 --retry 5 --location --insecure https://download.gnome.org/sources/vala/0.52/vala-0.52.3.tar.xz % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 3492k 100 3492k 0 0 8476k 0 --:--:-- --:--:-- --:--:-- 8476k checking for a BSD-compatible install.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gnunet-fuse/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:30:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gnunet-fuse/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gnunet-fuse/compile -j$(nproc) || make package/feeds/packages/gnunet-fuse/compile V=s Compile.txt Applying ./patches/001-musl-compat.patch using plaintext: patching file src/fuse/mutex.c Copying file ABOUT-NLS Copying file config.rpath Copying file m4/gettext.m4 Copying file m4/host-cpu-c-abi.m4 Copying file m4/iconv.m4 Copying file m4/intlmacosx.m4 Copying file m4/lib-ld.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gnunet/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:30:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gnunet/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gnunet/compile -j$(nproc) || make package/feeds/packages/gnunet/compile V=s Compile.txt Applying ./patches/100-fix-opus-and-pulse-library-detection.patch using plaintext: patching file configure.ac Hunk #1 succeeded at 837 (offset 24 lines). Hunk #2 succeeded at 882 (offset 24 lines). Copying file ABOUT-NLS Copying file build-aux/config.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libextractor/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:30:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libextractor/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libextractor/compile -j$(nproc) || make package/feeds/packages/libextractor/compile V=s Compile.txt Applying ./patches/010-musl.patch using plaintext: patching file src/common/le_architecture.h Applying ./patches/020-jpeg.patch using plaintext: patching file src/plugins/jpeg_extractor.c configure: loading site script /openwrt/include/site/aarch64 checking build system type... x86_64-pc-linux-gnu checking host system type.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libgabe/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:30:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libgabe/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libgabe/compile -j$(nproc) || make package/feeds/packages/libgabe/compile V=s Compile.txt Applying ./patches/010-shared-library.patch using plaintext: patching file Makefile.in autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_coova-chilli/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:30:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_coova-chilli/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ejdb2_node/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:30:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ejdb2_node/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_xtables-addons/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:30:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_xtables-addons/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_syslog-ng/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:29:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_syslog-ng/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/syslog-ng/compile -j$(nproc) || make package/feeds/packages/syslog-ng/compile V=s Compile.txt configure: WARNING: you should use --build, --host, --target configure: loading site script /openwrt/include/site/aarch64 checking whether make supports nested variables... yes checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ninja/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:29:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ninja/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ninja/compile -j$(nproc) || make package/feeds/packages/ninja/compile V=s Compile.txt warning: A compatible version of re2c (&amp;gt;= 0.11.3) was not found; changes to src/*.in.cc will not affect your build. wrote build.ninja. bash: C: command not found install: cannot stat &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/ninja-1.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ffi-napi/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:29:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ffi-napi/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_idevicerestore/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:28:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_idevicerestore/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/idevicerestore/compile -j$(nproc) || make package/feeds/packages/idevicerestore/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking build system type... x86_64-pc-linux-gnu checking host system type... aarch64-openwrt-linux-gnu checking target system type... aarch64-openwrt-linux-gnu checking for a BSD-compatible install.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_mc/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:28:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_mc/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mc/compile -j$(nproc) || make package/feeds/packages/mc/compile V=s Compile.txt Applying ./patches/010-subshell.patch using plaintext: patching file src/subshell/common.c Applying ./patches/020-fix-mouse-handling-newer-terminfo.patch using plaintext: patching file lib/tty/tty.c Applying ./patches/030-fix-cchat_t.patch using plaintext: patching file lib/tty/tty-ncurses.h Copying file ABOUT-NLS Copying file config/config.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_perl-dbi/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:28:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_perl-dbi/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-dbi/compile -j$(nproc) || make package/feeds/packages/perl-dbi/compile V=s Compile.txt Your perl was compiled with gcc (version 9.3.0), okay. Creating test wrappers for DBD::Gofer: t/zvg_01basics.t t/zvg_02dbidrv.t t/zvg_03handle.t t/zvg_04mods.t t/zvg_05concathash.t t/zvg_06attrs.t t/zvg_07kids.t t/zvg_08keeperr.t t/zvg_09trace.t t/zvg_10examp.t t/zvg_11fetch.t t/zvg_12quote.t t/zvg_13taint.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_perl-html-parser/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:28:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_perl-html-parser/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-html-parser/compile -j$(nproc) || make package/feeds/packages/perl-html-parser/compile V=s Compile.txt Warning: prerequisite HTML::Tagset 0 not found. Warning: prerequisite HTTP::Headers 0 not found. Warning: prerequisite URI 0 not found. Warning: prerequisite URI::URL 0 not found. Checking if your kit is complete.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_perl-mail-spamassassin/nossl/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:28:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_perl-mail-spamassassin/nossl/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-mail-spamassassin/compile -j$(nproc) || make package/feeds/packages/perl-mail-spamassassin/compile V=s Compile.txt Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file spamc/libspamc.c not installing man pages in man1; no man1 dir found at - line 275. What email address or URL should be used in the suspected-spam report text for users who want more information on your filter installation?</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_perl-mail-spamassassin/ssl/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:28:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_perl-mail-spamassassin/ssl/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-mail-spamassassin/compile -j$(nproc) || make package/feeds/packages/perl-mail-spamassassin/compile V=s Compile.txt not installing man pages in man1; no man1 dir found at - line 275. What email address or URL should be used in the suspected-spam report text for users who want more information on your filter installation?</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_perl/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:28:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_perl/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl/compile -j$(nproc) || make package/feeds/packages/perl/compile V=s Compile.txt Applying ./patches/001-macos_11_support.patch using plaintext: File hints/darwin.sh is read-only; trying to patch anyway patching file hints/darwin.sh Applying ./patches/002-add-Internals-getcwd.patch using plaintext: File MANIFEST is read-only; trying to patch anyway patching file MANIFEST patching file t/io/getcwd.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/no-transcode/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:28:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/no-transcode/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/transcode/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:28:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/transcode/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>host-compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_perl-net-dns/host-compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:28:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_perl-net-dns/host-compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-net-dns/host-compile -j$(nproc) || make package/feeds/packages/perl-net-dns/host-compile V=s Compile.txt Warning: prerequisite Digest::HMAC 1.03 not found. Activating Non Fatal Online Tests... Activating IPv6 Tests... Warning! ======== Online tests depend on conditions beyond the control of Net::DNS. The tests check for the expected results when both Net::DNS and the outside world are functioning properly.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libsearpc/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:27:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_libsearpc/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libsearpc/compile -j$(nproc) || make package/feeds/packages/libsearpc/compile V=s Compile.txt Applying ./patches/001-no-python-compile.patch using plaintext: patching file pysearpc/Makefile.am Applying ./patches/002-no-future-import.patch using plaintext: patching file pysearpc/named_pipe.py autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_p11-kit/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:27:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_p11-kit/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/p11-kit/compile -j$(nproc) || make package/feeds/packages/p11-kit/compile V=s Compile.txt Applying ./patches/010-stdint.patch using plaintext: patching file p11-kit/lists.c The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/p11-kit-0.23.22 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/p11-kit-0.23.22/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pdns/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:27:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pdns/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pdns/compile -j$(nproc) || make package/feeds/packages/pdns/compile V=s Compile.txt Applying ./patches/100-pdns-disable-pdns.conf-dist.patch using plaintext: patching file pdns/Makefile.am autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pillow/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:27:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pillow/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pillow/compile -j$(nproc) || make package/feeds/packages/pillow/compile V=s Compile.txt running build_ext The headers or library files could not be found for freetype, which was requested by the option flag --enable-freetype Traceback (most recent call last): File &amp;#34;/openwrt/build_dir/target-aarch64_cortex-a72_musl/pypi/Pillow-8.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_seafile-ccnet/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:27:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_seafile-ccnet/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-ccnet/compile -j$(nproc) || make package/feeds/packages/seafile-ccnet/compile V=s Compile.txt Applying ./patches/010-Makefile.patch using plaintext: patching file lib/Makefile.am Applying ./patches/011-no-python-compile.patch using plaintext: patching file python/ccnet/Makefile.am Applying ./patches/020-Remove-API-deprecated-in-openssl-1.1.patch using plaintext: patching file lib/rsa.c patching file net/common/processors/keepalive-proc.c patching file net/common/processors/keepalive2-proc.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_seafile-seahub/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:27:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_seafile-seahub/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-seahub/compile -j$(nproc) || make package/feeds/packages/seafile-seahub/compile V=s Compile.txt Applying ./patches/020-Makefile-fixes.patch using plaintext: patching file Makefile Applying ./patches/030-uci-conf.patch using plaintext: patching file seahub/settings.py Applying ./patches/040-manage-shebang.patch using plaintext: patching file manage.py Collecting Django==2.2.24 Downloading Django-2.2.24.tar.gz (9.2 MB) Collecting pytz==2021.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_seafile-server/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:27:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_seafile-server/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-server/compile -j$(nproc) || make package/feeds/packages/seafile-server/compile V=s Compile.txt Applying ./patches/010-configure-libevent_openssl.patch using plaintext: patching file configure.ac Applying ./patches/011-configure-liconv.patch using plaintext: patching file configure.ac Applying ./patches/012-automake-no-python-compile.patch using plaintext: patching file python/seafile/Makefile.am patching file python/seaserv/Makefile.am Applying ./patches/020-installpath.patch using plaintext: patching file controller/seafile-controller.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gmediarender/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:26:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_gmediarender/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gmediarender/compile -j$(nproc) || make package/feeds/packages/gmediarender/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_knot-resolver/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:26:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_knot-resolver/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/knot-resolver/compile -j$(nproc) || make package/feeds/packages/knot-resolver/compile V=s Compile.txt Applying ./patches/010-fix-lmdb.patch using plaintext: patching file meson.build Applying ./patches/030-fix-policy-hack.patch using plaintext: patching file modules/policy/policy.lua The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/knot-resolver-5.3.2 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/knot-resolver-5.3.2/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd-tools/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:26:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd-tools/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd-tools/compile -j$(nproc) || make package/feeds/packages/ksmbd-tools/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:26:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_liblz4/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:26:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_liblz4/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/liblz4/compile -j$(nproc) || make package/feeds/packages/liblz4/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/lz4-1.9.3/contrib/meson Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/lz4-1.9.3/contrib/meson/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-redis/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:26:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-redis/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-redis/compile -j$(nproc) || make package/feeds/packages/php7-pecl-redis/compile V=s Compile.txt bash: /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:48: /openwrt/build_dir/target-aarch64_cortex-a72_musl/pecl-php7/redis-5.3.2/.prepared_0b9293a4f264c0e10f697158f74081c9_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pcap-dnsproxy/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:25:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pcap-dnsproxy/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-imagick/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:25:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-imagick/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-imagick/compile -j$(nproc) || make package/feeds/packages/php7-pecl-imagick/compile V=s Compile.txt bash: /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:44: /openwrt/build_dir/target-aarch64_cortex-a72_musl/pecl-php7/imagick-3.4.4/.prepared_22cf5c3c9801b3e8fc6a30a7076cfcb5_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-krb5/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:25:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-krb5/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-krb5/compile -j$(nproc) || make package/feeds/packages/php7-pecl-krb5/compile V=s Compile.txt bash: /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:46: /openwrt/build_dir/target-aarch64_cortex-a72_musl/pecl-php7/krb5-1.1.4/.prepared_e29bf127ce1261634ab710319d46824a_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-libevent/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:25:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7-pecl-libevent/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-libevent/compile -j$(nproc) || make package/feeds/packages/php7-pecl-libevent/compile V=s Compile.txt Applying ./patches/010-libevent2.patch using plaintext: patching file libevent.c bash: /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:46: /openwrt/build_dir/target-aarch64_cortex-a72_musl/pecl-php7/libevent-ce255e7e1e293030951fd68d5df06b2a4c077a89/.prepared_ff1215360c5be5e59742d6b9c79e7ad6_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_upmpdcli/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:25:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_upmpdcli/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/upmpdcli/compile -j$(nproc) || make package/feeds/packages/upmpdcli/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_asterisk-chan-dongle/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:25:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_asterisk-chan-dongle/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_asterisk-chan-sccp/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:25:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_asterisk-chan-sccp/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_asterisk-g72x/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:25:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_asterisk-g72x/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_asterisk-opus/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:25:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_asterisk-opus/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-aarch64_cortex-a72_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fPIC -I/openwrt/staging_dir/toolchain-aarch64_cortex-a72_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_asterisk/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:25:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_asterisk/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/smallbuffers/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:24:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/smallbuffers/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mt76/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:24:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mt76/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8188eu/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:24:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8188eu/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8192du/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:24:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8192du/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ac/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:24:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ac/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ct/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:24:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ct/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8821cu/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:24:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8821cu/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl88x2bu/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:24:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl88x2bu/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_lcdringer/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:24:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_lcdringer/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/lcdringer/compile -j$(nproc) || make package/feeds/packages/lcdringer/compile V=s Compile.txt Applying ./patches/010-disable-check.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_loudmouth/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:24:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_loudmouth/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/loudmouth/compile -j$(nproc) || make package/feeds/packages/loudmouth/compile V=s Compile.txt Applying ./patches/900-disable-docs-examples-tests.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_routing_batman-adv/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:24:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_routing_batman-adv/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-linux/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:24:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-linux/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-tools/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:24:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-tools/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_libpri/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:24:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_libpri/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_dmapd/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:23:42 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_dmapd/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/dmapd/compile -j$(nproc) || make package/feeds/packages/dmapd/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.42</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_vips/compile.42/</link>
      <pubDate>Tue, 29 Jun 2021 09:23:42 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_vips/compile.42/</guid>
      <description>build number: 42
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/vips/compile -j$(nproc) || make package/feeds/packages/vips/compile V=s Compile.txt Applying ./patches/001-no_introspection.patch using plaintext: patching file configure.ac patching file libvips/Makefile.am Applying ./patches/010-reproducible-build.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:25:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:25:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:25:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_gerbera/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:25:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_gerbera/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gerbera/compile -j$(nproc) || make package/feeds/packages/gerbera/compile V=s Compile.txt -- The CXX compiler identification is GNU 8.4.0 -- The C compiler identification is GNU 8.4.0 -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_spdlog/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:25:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_spdlog/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/spdlog/compile -j$(nproc) || make package/feeds/packages/spdlog/compile V=s Compile.txt + curl -f --connect-timeout 20 --retry 5 --location --insecure https://codeload.github.com/gabime/spdlog/tar.gz/v1.8.5?/spdlog-1.8.5.tar.gz % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 313k 0 313k 0 0 2323k 0 --:--:-- --:--:-- --:--:-- 2323k -- The CXX compiler identification is GNU 8.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:24:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_gnunet/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:22:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_gnunet/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gnunet/compile -j$(nproc) || make package/feeds/packages/gnunet/compile V=s Compile.txt Applying ./patches/100-fix-opus-and-pulse-library-detection.patch using plaintext: patching file configure.ac Hunk #1 succeeded at 837 (offset 24 lines). Hunk #2 succeeded at 882 (offset 24 lines). Copying file ABOUT-NLS Copying file build-aux/config.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_libmariadb/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:22:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_libmariadb/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libmariadb/compile -j$(nproc) || make package/feeds/packages/libmariadb/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:5 (CMAKE_MINIMUM_REQUIRED): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:22:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:22:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_freeradius3/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:22:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_freeradius3/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/freeradius3/compile -j$(nproc) || make package/feeds/packages/freeradius3/compile V=s Compile.txt Applying ./patches/001-fix-cert-expiry.patch using plaintext: patching file raddb/certs/ca.cnf patching file raddb/certs/client.cnf patching file raddb/certs/server.cnf Applying ./patches/002-disable-session-cache-CVE-2017-9148.patch using plaintext: patching file src/main/tls.c Applying ./patches/003-freeradius-fix-error-for-expansion-of-macro.patch using plaintext: patching file src/include/threads.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:22:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:22:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_apr-util/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:20:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_apr-util/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/apr-util/compile -j$(nproc) || make package/feeds/packages/apr-util/compile V=s Compile.txt Applying ./patches/002-fix-gdbm-error-handling.patch using plaintext: patching file dbm/apr_dbm_gdbm.c Applying ./patches/003-support_mariadb.patch using plaintext: patching file build/dbd.m4 patching file dbd/apr_dbd_mysql.c Applying ./patches/004-avoid_ldap_by_defaut.patch using plaintext: patching file apu-config.in Applying ./patches/005-apu_config_dont_list_indep_libs.patch using plaintext: patching file apr-util.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_libdbi-drivers/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:20:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_libdbi-drivers/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libdbi-drivers/compile -j$(nproc) || make package/feeds/packages/libdbi-drivers/compile V=s Compile.txt Applying ./patches/001_libsqlite3_fix.patch using plaintext: patching file acinclude.m4 Applying ./patches/100-remove-date-to-fix-reproducible-builds.patch using plaintext: patching file drivers/db2/dbd_db2.c patching file drivers/firebird/dbd_firebird.c patching file drivers/freetds/dbd_freetds.c patching file drivers/ingres/dbd_ingres.c patching file drivers/msql/dbd_msql.c patching file drivers/mysql/dbd_mysql.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_strongswan/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:20:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_strongswan/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/strongswan/compile -j$(nproc) || make package/feeds/packages/strongswan/compile V=s Compile.txt Applying ./patches/101-musl-fixes.patch using plaintext: patching file src/libstrongswan/library.h patching file src/libstrongswan/musl.h patching file src/libcharon/plugins/kernel_netlink/kernel_netlink_ipsec.c patching file src/libcharon/plugins/kernel_netlink/kernel_netlink_net.c patching file src/libcharon/plugins/kernel_netlink/kernel_netlink_shared.c patching file src/libstrongswan/plugins/bliss/bliss_huffman.c Applying ./patches/203-uci.patch using plaintext: patching file src/libcharon/plugins/uci/uci_parser.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/mbedtls/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:19:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/mbedtls/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/mini/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:19:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/mini/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/openssl/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:19:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/openssl/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_luasql/mysql/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:18:49 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_luasql/mysql/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/luasql/compile -j$(nproc) || make package/feeds/packages/luasql/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/luasql-mysql/luasql-2.4.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/luasql-mysql/luasql-2.4.0=luasql-2.4.0 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DPIC -fpic -std=gnu99 -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.4.0_musl/usr/include -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.4.0_musl/include/fortify -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.4.0_musl/include -DLUA_USE_LINUX -c src/luasql.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ootoc/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:18:49 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ootoc/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ootoc/compile -j$(nproc) || make package/feeds/packages/ootoc/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_px5g-mbedtls/mbedtls/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:17:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_px5g-mbedtls/mbedtls/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/px5g-mbedtls/compile -j$(nproc) || make package/feeds/base/px5g-mbedtls/compile V=s Compile.txt Package px5g-mbedtls is missing dependencies for the following libraries: libmbedtls.so.9 make[3]: *** [Makefile:77: /openwrt/bin/packages/x86_64/base/px5g-mbedtls_9_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ustream-ssl/mbedtls/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:17:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ustream-ssl/mbedtls/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ustream-ssl/compile -j$(nproc) || make package/feeds/base/ustream-ssl/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_libuhttpd/mbedtls/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:17:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_libuhttpd/mbedtls/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libuhttpd/compile -j$(nproc) || make package/feeds/packages/libuhttpd/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_libuwsc/mbedtls/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:17:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_libuwsc/mbedtls/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libuwsc/compile -j$(nproc) || make package/feeds/packages/libuwsc/compile V=s Compile.txt Applying ./patches/001-fix_find_lua.patch using plaintext: patching file cmake/Modules/FindLua.cmake CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:17:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:17:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_rtty/mbedtls/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:17:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_rtty/mbedtls/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/rtty/compile -j$(nproc) || make package/feeds/packages/rtty/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_restund/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:17:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_restund/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/restund/compile -j$(nproc) || make package/feeds/telephony/restund/compile V=s Compile.txt Applying ./patches/100-reproducible-builds.patch using plaintext: patching file modules/status/status.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/restund-0.4.12&amp;#39; CC [M] build-x86_64/modules/binding/binding.o CC [M] build-x86_64/modules/auth/auth.o CC [M] build-x86_64/modules/turn/alloc.o CC [M] build-x86_64/modules/turn/chan.o CC [M] build-x86_64/modules/turn/perm.o CC [M] build-x86_64/modules/turn/turn.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:15:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_kamailio/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:14:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_kamailio/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/kamailio/compile -j$(nproc) || make package/feeds/telephony/kamailio/compile V=s Compile.txt Applying ./patches/050-fix-kamailio-utils.patch using plaintext: patching file utils/kamctl/kamctlrc Applying ./patches/120-libevent-libs.patch using plaintext: patching file src/modules/janssonrpcc/netstring.h Applying ./patches/130-change-snmp-mibs-path.patch using plaintext: patching file src/modules/snmpstats/Makefile Applying ./patches/140-redis_use_pkg-config.patch using plaintext: patching file src/modules/cnxcc/Makefile patching file src/modules/db_redis/Makefile patching file src/modules/ndb_redis/Makefile patching file src/modules/topos_redis/Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:13:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:13:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_mariadb/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:13:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_mariadb/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mariadb/compile -j$(nproc) || make package/feeds/packages/mariadb/compile V=s Compile.txt Applying ./patches/100-fix_hostname.patch using plaintext: patching file scripts/mysql_install_db.sh Applying ./patches/110-pcre.cmake.patch using plaintext: patching file cmake/pcre.cmake Applying ./patches/130-c11_atomics.patch using plaintext: patching file configure.cmake patching file mysys/CMakeLists.txt patching file sql/CMakeLists.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pdns/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:13:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pdns/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pdns/compile -j$(nproc) || make package/feeds/packages/pdns/compile V=s Compile.txt Applying ./patches/100-pdns-disable-pdns.conf-dist.patch using plaintext: patching file pdns/Makefile.am autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_seafile-ccnet/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:13:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_seafile-ccnet/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-ccnet/compile -j$(nproc) || make package/feeds/packages/seafile-ccnet/compile V=s Compile.txt Applying ./patches/010-Makefile.patch using plaintext: patching file lib/Makefile.am Applying ./patches/011-no-python-compile.patch using plaintext: patching file python/ccnet/Makefile.am Applying ./patches/020-Remove-API-deprecated-in-openssl-1.1.patch using plaintext: patching file lib/rsa.c patching file net/common/processors/keepalive-proc.c patching file net/common/processors/keepalive2-proc.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_seafile-seahub/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:13:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_seafile-seahub/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-seahub/compile -j$(nproc) || make package/feeds/packages/seafile-seahub/compile V=s Compile.txt Applying ./patches/020-Makefile-fixes.patch using plaintext: patching file Makefile Applying ./patches/030-uci-conf.patch using plaintext: patching file seahub/settings.py Applying ./patches/040-manage-shebang.patch using plaintext: patching file manage.py Collecting Django==2.2.24 Downloading Django-2.2.24.tar.gz (9.2 MB) Collecting pytz==2021.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_seafile-server/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:13:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_seafile-server/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-server/compile -j$(nproc) || make package/feeds/packages/seafile-server/compile V=s Compile.txt Applying ./patches/010-configure-libevent_openssl.patch using plaintext: patching file configure.ac Applying ./patches/011-configure-liconv.patch using plaintext: patching file configure.ac Applying ./patches/012-automake-no-python-compile.patch using plaintext: patching file python/seafile/Makefile.am patching file python/seaserv/Makefile.am Applying ./patches/020-installpath.patch using plaintext: patching file controller/seafile-controller.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:13:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:13:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:13:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:13:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:13:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>host-compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_mariadb/host-compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:13:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_mariadb/host-compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mariadb/host-compile -j$(nproc) || make package/feeds/packages/mariadb/host-compile V=s Compile.txt Applying ./patches/100-fix_hostname.patch using plaintext: patching file scripts/mysql_install_db.sh Applying ./patches/110-pcre.cmake.patch using plaintext: patching file cmake/pcre.cmake Applying ./patches/130-c11_atomics.patch using plaintext: patching file configure.cmake patching file mysys/CMakeLists.txt patching file sql/CMakeLists.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_apache/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:11:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_apache/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/apache/compile -j$(nproc) || make package/feeds/packages/apache/compile V=s Compile.txt Applying ./patches/001-cross-compile.patch using plaintext: patching file server/Makefile.in patching file configure.in patching file acinclude.m4 Applying ./patches/004-fix-scoreboard-location.patch using plaintext: patching file include/scoreboard.h Applying ./patches/005-httpd_conf.patch using plaintext: patching file docs/conf/httpd.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_collectd/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:11:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_collectd/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/collectd/compile -j$(nproc) || make package/feeds/packages/collectd/compile V=s Compile.txt Applying ./patches/001-undefined-AM_PATH_LIBGCRYPT.patch using plaintext: patching file fake-am_path_libgcrypt.m4 Applying ./patches/100-rrdtool-add-rrasingle-option.patch using plaintext: patching file src/rrdtool.c patching file src/utils/rrdcreate/rrdcreate.c patching file src/utils/rrdcreate/rrdcreate.h Applying ./patches/140-fix-fqdnlookup.patch using plaintext: patching file src/daemon/configfile.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_exim/gnutls/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:11:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_exim/gnutls/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/exim/compile -j$(nproc) || make package/feeds/packages/exim/compile V=s Compile.txt Applying ./patches/010-allow-json-dynamic-lookup.patch using plaintext: patching file src/drtables.c Applying ./patches/030-openssl-deprecated.patch using plaintext: patching file src/dane-openssl.c patching file src/pdkim/signing.c patching file src/tls-openssl.c patching file src/tlscert-openssl.c Applying ./patches/100-localscan_dlopen.patch using plaintext: patching file src/config.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_exim/ldap/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:11:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_exim/ldap/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/exim/compile -j$(nproc) || make package/feeds/packages/exim/compile V=s Compile.txt Applying ./patches/010-allow-json-dynamic-lookup.patch using plaintext: patching file src/drtables.c Applying ./patches/030-openssl-deprecated.patch using plaintext: patching file src/dane-openssl.c patching file src/pdkim/signing.c patching file src/tls-openssl.c patching file src/tlscert-openssl.c Applying ./patches/100-localscan_dlopen.patch using plaintext: patching file src/config.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_exim/nossl/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:11:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_exim/nossl/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/exim/compile -j$(nproc) || make package/feeds/packages/exim/compile V=s Compile.txt Applying ./patches/010-allow-json-dynamic-lookup.patch using plaintext: patching file src/drtables.c Applying ./patches/030-openssl-deprecated.patch using plaintext: patching file src/dane-openssl.c patching file src/pdkim/signing.c patching file src/tls-openssl.c patching file src/tlscert-openssl.c Applying ./patches/100-localscan_dlopen.patch using plaintext: patching file src/config.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_exim/openssl/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:11:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_exim/openssl/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/exim/compile -j$(nproc) || make package/feeds/packages/exim/compile V=s Compile.txt Applying ./patches/010-allow-json-dynamic-lookup.patch using plaintext: patching file src/drtables.c Applying ./patches/030-openssl-deprecated.patch using plaintext: patching file src/dane-openssl.c patching file src/pdkim/signing.c patching file src/tls-openssl.c patching file src/tlscert-openssl.c Applying ./patches/100-localscan_dlopen.patch using plaintext: patching file src/config.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:11:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl-device-usb/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:11:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl-device-usb/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-device-usb/compile -j$(nproc) || make package/feeds/packages/perl-device-usb/compile V=s Compile.txt Applying ./patches/100-fix_buildsystem.patch using plaintext: patching file Makefile.PL Applying ./patches/110-just_assume_libusb_is_there.patch using plaintext: patching file Makefile.PL Applying ./patches/120-use_libusb_0_1.patch using plaintext: patching file lib/Device/USB.pm Applying ./patches/130-provide-proper-library-paths.patch using plaintext: patching file lib/Device/USB.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:11:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl/compile -j$(nproc) || make package/feeds/packages/perl/compile V=s Compile.txt Applying ./patches/001-macos_11_support.patch using plaintext: File hints/darwin.sh is read-only; trying to patch anyway patching file hints/darwin.sh Applying ./patches/002-add-Internals-getcwd.patch using plaintext: File MANIFEST is read-only; trying to patch anyway patching file MANIFEST patching file t/io/getcwd.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:10:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:10:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:10:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:10:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:09:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:09:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:09:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:09:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:09:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:09:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:09:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:09:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:09:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:08:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:08:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:08:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:08:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:08:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:08:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-upstream-crash-fix-r6470.patch using plaintext: patching file modules/ysipchan.cpp Applying ./patches/120-increase-sip-message-size.patch using plaintext: patching file conf.d/ysipchan.conf.sample Applying ./patches/130-fix-ilbc-flags.patch using plaintext: patching file libs/ilbc/Makefile.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_lighttpd/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:08:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_lighttpd/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/lighttpd/compile -j$(nproc) || make package/feeds/packages/lighttpd/compile V=s Compile.txt Applying ./patches/010-meson-lua.patch using plaintext: patching file src/meson.build Applying ./patches/020-meson-zstd.patch using plaintext: patching file meson_options.txt Applying ./patches/030-101-upgrade-w-content-length.patch using plaintext: patching file src/http-header-glue.c Applying ./patches/040-mod_auth-close-http2-after-bad-pass.patch using plaintext: patching file src/connections.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ulogd/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:08:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ulogd/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ulogd/compile -j$(nproc) || make package/feeds/packages/ulogd/compile V=s Compile.txt Applying ./patches/010-json-remote.patch using plaintext: patching file output/ulogd_output_JSON.c patching file ulogd.conf.in Applying ./patches/020-fix-musl.patch using plaintext: patching file src/ulogd.c Applying ./patches/030-ipfix-add.patch using plaintext: patching file configure.ac patching file include/ulogd/ulogd.</description>
    </item>
    
    <item>
      <title>compile.41</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_gsmlib/compile.41/</link>
      <pubDate>Wed, 23 Jun 2021 23:08:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_gsmlib/compile.41/</guid>
      <description>build number: 41
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_ath10k-ct/regular/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_ath10k-ct/regular/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_cryptodev-linux/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_cryptodev-linux/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/cryptodev-linux/compile -j$(nproc) || make package/feeds/base/cryptodev-linux/compile V=s Compile.txt Applying ./patches/010-fix-build-for-kernel-v5.9-rc1.patch using plaintext: patching file zc.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/cryptodev-linux-cryptodev-linux-1.11&amp;#39; make -C /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124 M=/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/cryptodev-linux-cryptodev-linux-1.11 ARCH=mips CROSS_COMPILE=mips-openwrt-linux-musl- modules make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/cryptodev-linux-cryptodev-linux-1.11/ioctl.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/cryptodev-linux-cryptodev-linux-1.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_fullconenat/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_fullconenat/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_mac80211/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_mac80211/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/openssl/compile -j$(nproc) || make package/feeds/base/openssl/compile V=s Compile.txt Applying ./patches/100-Configure-afalg-support.patch using plaintext: patching file Configure Applying ./patches/110-openwrt_targets.patch using plaintext: patching file Configurations/25-openwrt.conf Applying ./patches/120-strip-cflags-from-binary.patch using plaintext: patching file crypto/build.info Applying ./patches/130-dont-build-tests-fuzz.patch using plaintext: patching file Configure Applying .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_boost/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_boost/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/boost/compile -j$(nproc) || make package/feeds/packages/boost/compile V=s Compile.txt Selected Boost API o32 for architecture mips and cpu type &amp;#34;24kc&amp;#34; Applying ./patches/010-mips64-fiber.patch using plaintext: patching file boost/fiber/detail/cpu_relax.hpp Applying ./patches/020-regex.patch using plaintext: patching file boost/regex/v5/mem_block_cache.hpp Performing configuration checks - default address-model : 32-bit [1] - default architecture : mips1 [1] - C++11 mutex : yes [2] - lockfree boost::atomic_flag : yes [2] - has stat::st_mtim : yes [2] - has stat::st_mtimensec : no [2] - has stat::st_mtimespec : no [2] - has stat::st_birthtim : no [2] - has stat::st_birthtimensec : no [2] - has stat::st_birthtimespec : no [2] - has statx : no [2] - has statx syscall : yes [2] - cxx11_auto_declarations : yes [2] - cxx11_constexpr : yes [2] - cxx11_defaulted_functions : yes [2] - cxx11_final : yes [2] - cxx11_hdr_mutex : yes [2] - cxx11_hdr_tuple : yes [2] - cxx11_lambdas : yes [2] - cxx11_noexcept : yes [2] - cxx11_nullptr : yes [2] - cxx11_rvalue_references : yes [2] - cxx11_template_aliases : yes [2] - cxx11_thread_local : yes [2] - cxx11_variadic_templates : yes [2] - cxx11_auto_declarations : yes [3] - cxx11_constexpr : yes [3] - cxx11_defaulted_functions : yes [3] - cxx11_final : yes [3] - cxx11_hdr_mutex : yes [3] - cxx11_hdr_tuple : yes [3] - cxx11_lambdas : yes [3] - cxx11_noexcept : yes [3] - cxx11_nullptr : yes [3] - cxx11_rvalue_references : yes [3] - cxx11_template_aliases : yes [3] - cxx11_thread_local : yes [3] - cxx11_variadic_templates : yes [3] - has_icu builds : yes [2] - zlib : yes [4] - lzma : yes [4] - zstd : yes [4] - has_lzma_cputhreads builds : no [2] - cxx11_decltype : yes [2] - cxx11_basic_alignas : yes [2] - iconv (libc) : yes [2] - icu : yes [2] - native atomic int32 supported : yes [2] - native syslog supported : yes [2] - pthread supports robust mutexes : yes [2] - gcc visibility : yes [2] - sfinae_expr : yes [2] - cxx11_unified_initialization_syntax : yes [2] - cxx11_hdr_initializer_list : yes [2] - cxx11_hdr_chrono : yes [2] - cxx11_numeric_limits : yes [2] - cxx11_hdr_array : yes [2] - cxx11_hdr_atomic : yes [2] - cxx11_hdr_type_traits : yes [2] - cxx11_allocator : yes [2] - cxx11_explicit_conversion_operators : yes [2] - long double support : yes [2] - cxx11_static_assert : yes [2] - std::fstream is moveable and swappable : yes [2] - Has Large File Support : yes [2] - libbacktrace builds : no [2] - libbacktrace builds : no [3] - addr2line builds : no [2] - addr2line builds : no [3] - WinDbg builds : no [2] - WinDbg builds : no [3] - WinDbgCached builds : no [2] - WinDbgCached builds : no [3] - C++11 mutex : yes [5] - lockfree boost::atomic_flag : yes [5] - has stat::st_mtim : yes [5] - has stat::st_mtimensec : no [5] - has stat::st_mtimespec : no [5] - has stat::st_birthtim : no [5] - has stat::st_birthtimensec : no [5] - has stat::st_birthtimespec : no [5] - has statx : no [5] - has statx syscall : yes [5] - cxx11_auto_declarations : yes [5] - cxx11_constexpr : yes [5] - cxx11_defaulted_functions : yes [5] - cxx11_final : yes [5] - cxx11_hdr_mutex : yes [5] - cxx11_hdr_tuple : yes [5] - cxx11_lambdas : yes [5] - cxx11_noexcept : yes [5] - cxx11_nullptr : yes [5] - cxx11_rvalue_references : yes [5] - cxx11_template_aliases : yes [5] - cxx11_thread_local : yes [5] - cxx11_variadic_templates : yes [5] - cxx11_auto_declarations : yes [6] - cxx11_constexpr : yes [6] - cxx11_defaulted_functions : yes [6] - cxx11_final : yes [6] - cxx11_hdr_mutex : yes [6] - cxx11_hdr_tuple : yes [6] - cxx11_lambdas : yes [6] - cxx11_noexcept : yes [6] - cxx11_nullptr : yes [6] - cxx11_rvalue_references : yes [6] - cxx11_template_aliases : yes [6] - cxx11_thread_local : yes [6] - cxx11_variadic_templates : yes [6] - has_icu builds : yes [5] - zlib : yes - lzma : yes - zstd : yes - has_lzma_cputhreads builds : yes [5] - cxx11_decltype : yes [5] - cxx11_basic_alignas : yes [5] - iconv (libc) : yes [5] - icu : yes [5] - native atomic int32 supported : yes [5] - native syslog supported : yes [5] - pthread supports robust mutexes : yes [5] - gcc visibility : yes [5] - sfinae_expr : yes [5] - cxx11_unified_initialization_syntax : yes [5] - cxx11_hdr_initializer_list : yes [5] - cxx11_hdr_chrono : yes [5] - cxx11_numeric_limits : yes [5] - cxx11_hdr_array : yes [5] - cxx11_hdr_atomic : yes [5] - cxx11_hdr_type_traits : yes [5] - cxx11_allocator : yes [5] - cxx11_explicit_conversion_operators : yes [5] - long double support : yes [5] - cxx11_static_assert : yes [5] - std::fstream is moveable and swappable : yes [5] - Has Large File Support : yes [5] - libbacktrace builds : no [5] - libbacktrace builds : no [6] - addr2line builds : no [5] - addr2line builds : no [6] - WinDbg builds : no [5] - WinDbg builds : no [6] - WinDbgCached builds : no [5] - WinDbgCached builds : no [6] [1] gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_curl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_curl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/curl/compile -j$(nproc) || make package/feeds/packages/curl/compile V=s Compile.txt Applying ./patches/200-no_docs_tests.patch using plaintext: patching file Makefile.am autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_elektra/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_elektra/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gnutls/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gnutls/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gnutls/compile -j$(nproc) || make package/feeds/packages/gnutls/compile V=s Compile.txt Applying ./patches/010-m4.patch using plaintext: patching file m4/stdint.m4 patching file m4/vasnprintf.m4 patching file m4/wchar_t.m4 patching file m4/wint_t.m4 patching file src/gl/m4/gnulib-comp.m4 autopoint: using AM_GNU_GETTEXT_REQUIRE_VERSION instead of AM_GNU_GETTEXT_VERSION Copying file build-aux/config.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_i2pd/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_i2pd/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/i2pd/compile -j$(nproc) || make package/feeds/packages/i2pd/compile V=s Compile.txt Applying ./patches/010-config.patch using plaintext: patching file contrib/i2pd.conf make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/i2pd-2.38.0&amp;#39; make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/i2pd-2.38.0&amp;#39; make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/i2pd-2.38.0&amp;#39; ccache_cxx -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/i2pd-2.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libfido2/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libfido2/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libfido2/compile -j$(nproc) || make package/feeds/packages/libfido2/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libmicrohttpd/ssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libmicrohttpd/ssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libmicrohttpd/compile -j$(nproc) || make package/feeds/packages/libmicrohttpd/compile V=s Compile.txt configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip... mips-openwrt-linux-musl-strip checking for a race-free mkdir -p.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_lua-openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_lua-openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/lua-openssl/compile -j$(nproc) || make package/feeds/packages/lua-openssl/compile V=s Compile.txt Applying ./patches/010-cmake.patch using plaintext: patching file CMakeLists.txt Applying ./patches/020-no-luajit.patch using plaintext: patching file CMakeLists.txt Applying ./patches/020-openssl-deprecated.patch using plaintext: patching file src/cipher.c patching file src/openssl.c patching file src/th-lock.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openssh/without-pam/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openssh/without-pam/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openssh/compile -j$(nproc) || make package/feeds/packages/openssh/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for mips-openwrt-linux-cc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openvpn/openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openvpn/openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvpn/compile -j$(nproc) || make package/feeds/packages/openvpn/compile V=s Compile.txt Applying ./patches/001-reproducible-remove_DATE.patch using plaintext: patching file src/openvpn/options.c Applying ./patches/002-add-wolfssl-support.patch using plaintext: patching file configure.ac patching file src/openvpn/syshead.h Applying ./patches/100-mbedtls-disable-runtime-version-check.patch using plaintext: patching file src/openvpn/ssl_mbedtls.c Applying ./patches/115-fix-mbedtls-without-renegotiation.patch using plaintext: patching file src/openvpn/ssl_mbedtls.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-imagick/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-imagick/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-imagick/compile -j$(nproc) || make package/feeds/packages/php7-pecl-imagick/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:44: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/imagick-3.4.4/.prepared_92f34ff1f35e9b527acae28e67a3fdeb_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_poco/all/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_poco/all/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/poco/compile -j$(nproc) || make package/feeds/packages/poco/compile V=s Compile.txt Applying ./patches/100-configure.patch using plaintext: patching file configure Applying ./patches/200-strerror.patch using plaintext: patching file Foundation/src/Error.cpp Configured for Linux make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/poco-all/poco-1.10.1-all&amp;#39; make -C /openwrt/build_dir/target-mips_24kc_musl/poco-all/poco-1.10.1-all/Foundation make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/poco-all/poco-1.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python3/compile -j$(nproc) || make package/feeds/packages/python3/compile V=s Compile.txt Applying ./patches/001-enable-zlib.patch using plaintext: patching file Modules/Setup Applying ./patches/003-do-not-run-distutils-tests.patch using plaintext: patching file Makefile.pre.in Applying ./patches/004-do-not-write-bytes-codes.patch using plaintext: patching file Python/initconfig.c Applying ./patches/006-do-not-add-multiarch-paths-when-cross-compiling.patch using plaintext: patching file setup.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_samba4/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_samba4/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/samba4/compile -j$(nproc) || make package/feeds/packages/samba4/compile V=s Compile.txt Applying ./patches/001-samba-4.4.0-pam.patch using plaintext: patching file source3/wscript Applying ./patches/002-dnsserver-4.7.0.patch using plaintext: patching file source4/dns_server/wscript_build Applying ./patches/003-getpwent_r.patch using plaintext: patching file source4/torture/local/nss_tests.c Applying ./patches/004-missing-headers.patch using plaintext: patching file lib/param/loadparm.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_schroot/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_schroot/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/schroot/compile -j$(nproc) || make package/feeds/packages/schroot/compile V=s Compile.txt Applying ./patches/01-openwrt.patch using plaintext: patching file configure.ac patching file bin/schroot-base/schroot-base-run.h patching file sbuild/sbuild-feature.h patching file etc/setup.d/20copyfiles patching file etc/setup.d/20nssdatabases patching file etc/profile-templates/all/all/nssdatabases patching file etc/profile-templates/buildd/all/nssdatabases patching file etc/profile-templates/default/all/nssdatabases patching file etc/profile-templates/desktop/all/nssdatabases patching file etc/profile-templates/default/linux/fstab patching file etc/profile-templates/desktop/linux/fstab autoreconf: Entering directory `.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_trojan-plus/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_trojan-plus/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/trojan-plus/compile -j$(nproc) || make package/feeds/packages/trojan-plus/compile V=s Compile.txt -- The CXX compiler identification is GNU 8.4.0 -- The C compiler identification is GNU 8.4.0 -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_unbound/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_unbound/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/unbound/compile -j$(nproc) || make package/feeds/packages/unbound/compile V=s Compile.txt Applying ./patches/010-configure_uname.patch using plaintext: patching file configure.ac Applying ./patches/100-example-conf-in.patch using plaintext: patching file doc/example.conf.in autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uw-imap/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uw-imap/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/uw-imap/compile -j$(nproc) || make package/feeds/packages/uw-imap/compile V=s Compile.txt Applying ./patches/001-fix_Makefiles_and_shlib.patch using plaintext: patching file Makefile patching file src/osdep/unix/Makefile Applying ./patches/002-imap-2004a-doc.patch using plaintext: patching file src/imapd/imapd.8 patching file src/ipopd/ipopd.8 Applying ./patches/003-imap-2007e-overflow.patch using plaintext: patching file src/c-client/rfc822.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_wget/ssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_wget/ssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/wget/compile -j$(nproc) || make package/feeds/packages/wget/compile V=s Compile.txt configure: loading site script /openwrt/include/site/mips configure: configuring for GNU Wget 1.21.1 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_xtables-addons/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_xtables-addons/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_xupnpd/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_xupnpd/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xupnpd/compile -j$(nproc) || make package/feeds/packages/xupnpd/compile V=s Compile.txt Applying ./patches/100-default_config.patch using plaintext: patching file src/xupnpd.lua Applying ./patches/101-root_dir_param.patch using plaintext: patching file src/main.cpp Reading specs from /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.4.0_musl/lib/gcc/mips-openwrt-linux-musl/8.4.0/specs COLLECT_GCC=/openwrt/staging_dir/toolchain-mips_24kc_gcc-8.4.0_musl/bin/mips-openwrt-linux-musl-gcc COLLECT_LTO_WRAPPER=/openwrt/staging_dir/toolchain-mips_24kc_gcc-8.4.0_musl/libexec/gcc/mips-openwrt-linux-musl/8.4.0/lto-wrapper Target: mips-openwrt-linux-musl Configured with: /openwrt/build_dir/toolchain-mips_24kc_gcc-8.4.0_musl/gcc-8.4.0/configure --with-bugurl=http://bugs.openwrt.org/ --with-pkgversion=&amp;#39;OpenWrt GCC 8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ffmpeg/full/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ffmpeg/full/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt ERROR: openssl not found If you think configure made a mistake, make sure you are using the latest version from Git. If the latest version fails, report the problem to the ffmpeg-user@ffmpeg.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ipfs-http-client/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ipfs-http-client/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ipfs-http-client/compile -j$(nproc) || make package/feeds/packages/ipfs-http-client/compile V=s Compile.txt Applying ./patches/001-add-srv-addr.patch using plaintext: patching file test/test_block.cc patching file test/test_config.cc patching file test/test_dht.cc patching file test/test_error.cc patching file test/test_files.cc patching file test/test_generic.cc patching file test/test_key.cc patching file test/test_name.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libmariadb/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libmariadb/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libmariadb/compile -j$(nproc) || make package/feeds/packages/libmariadb/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:5 (CMAKE_MINIMUM_REQUIRED): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_radsecproxy/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_radsecproxy/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/radsecproxy/compile -j$(nproc) || make package/feeds/packages/radsecproxy/compile V=s Compile.txt Applying ./patches/200-logdest-on-foreground.patch using plaintext: patching file radsecproxy.c Applying ./patches/300-gcc10.patch using plaintext: patching file radsecproxy.c patching file radsecproxy.h autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_stunnel/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_stunnel/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/stunnel/compile -j$(nproc) || make package/feeds/packages/stunnel/compile V=s Compile.txt autotools.mk: Found libtool v2.4 - applying patch to ./auto/ltmain.sh bash: /openwrt/tools/libtool/files/libtool-v2.4.patch: No such file or directory configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips configure: **************************************** initialization checking for a BSD-compatible install.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_taskwarrior/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_taskwarrior/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/taskwarrior/compile -j$(nproc) || make package/feeds/packages/taskwarrior/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tvheadend/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tvheadend/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tvheadend/compile -j$(nproc) || make package/feeds/packages/tvheadend/compile V=s Compile.txt Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file src/main.c Applying ./patches/020-strncpy-issue.patch using plaintext: patching file Makefile Applying ./patches/030-gcc10.patch using plaintext: patching file src/input.h patching file src/input/mpegts.h Checking support/features checking for cc execinfo.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uacme/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uacme/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/uacme/compile -j$(nproc) || make package/feeds/packages/uacme/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_znc/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_znc/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/znc/compile -j$(nproc) || make package/feeds/packages/znc/compile V=s Compile.txt Applying ./patches/101-Reduce_rebuild_time.patch using plaintext: patching file Makefile.in patching file modules/Makefile.in Applying ./patches/104-disable-empty-modules-check.patch using plaintext: patching file src/main.cpp Applying ./patches/110-add-playback-module.patch using plaintext: patching file modules/playback.cpp Applying ./patches/120-openssl-deprecated.patch using plaintext: patching file third_party/Csocket/Csocket.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_dahdi-linux/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_dahdi-linux/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_yate/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:51:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_yate/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-upstream-crash-fix-r6470.patch using plaintext: patching file modules/ysipchan.cpp Applying ./patches/120-increase-sip-message-size.patch using plaintext: patching file conf.d/ysipchan.conf.sample Applying ./patches/130-fix-ilbc-flags.patch using plaintext: patching file libs/ilbc/Makefile.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apk/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apk/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/apk/compile -j$(nproc) || make package/feeds/packages/apk/compile V=s Compile.txt Applying ./patches/0001-remove-doc-generation.patch using plaintext: patching file Makefile Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file libfetch/common.c patching file src/apk.c patching file src/apk_openssl.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/apk-tools-v2.12.4&amp;#39; GENERR libfetch/ftperr.h GENERR libfetch/httperr.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bcrypt/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bcrypt/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/bcrypt/compile -j$(nproc) || make package/feeds/packages/bcrypt/compile V=s Compile.txt Requirement already satisfied: cffi==1.14.5 in /openwrt/staging_dir/hostpkg/lib/python3.9/site-packages (from -r ../host-pip-requirements/cffi.txt (line 1)) (1.14.5) Requirement already satisfied: pycparser==2.20 in /openwrt/staging_dir/hostpkg/lib/python3.9/site-packages (from -r ../host-pip-requirements/cffi.txt (line 2)) (2.20) running install running build running build_py creating build creating build/lib.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_boinc/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_boinc/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/boinc/compile -j$(nproc) || make package/feeds/packages/boinc/compile V=s Compile.txt Applying ./patches/001-avoidExtraDependencies using plaintext: patching file configure.ac Applying ./patches/002-hosttypeRespected using plaintext: patching file client/cs_platforms.cpp autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_emailrelay/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_emailrelay/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/emailrelay/compile -j$(nproc) || make package/feeds/packages/emailrelay/compile V=s Compile.txt configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip... mips-openwrt-linux-musl-strip checking for a thread-safe mkdir -p.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_esniper/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_esniper/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/esniper/compile -j$(nproc) || make package/feeds/packages/esniper/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gost_engine/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gost_engine/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gost_engine/compile -j$(nproc) || make package/feeds/packages/gost_engine/compile V=s Compile.txt Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file gost_pmeth.c CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hcxdumptool/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hcxdumptool/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/hcxdumptool/compile -j$(nproc) || make package/feeds/packages/hcxdumptool/compile V=s Compile.txt Applying ./patches/010-openssl.patch using plaintext: patching file hcxdumptool.c Applying ./patches/020-stdout.patch using plaintext: patching file hcxdumptool.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/hcxdumptool-6.1.6&amp;#39; mkdir -p .deps Package openssl was not found in the pkg-config search path.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hcxtools/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hcxtools/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/hcxtools/compile -j$(nproc) || make package/feeds/packages/hcxtools/compile V=s Compile.txt Applying ./patches/010-openssl.patch using plaintext: patching file hcxhashtool.c patching file hcxpcapngtool.c patching file hcxpmktool.c patching file hcxpsktool.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/hcxtools-6.1.6&amp;#39; mkdir -p .deps Package openssl was not found in the pkg-config search path.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hfsprogs/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hfsprogs/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/hfsprogs/compile -j$(nproc) || make package/feeds/packages/hfsprogs/compile V=s Compile.txt Applying ./patches/0001-Create-short-Makefiles-for-Debian.patch using plaintext: patching file Makefile.lnx patching file fsck_hfs.tproj/Makefile.lnx patching file fsck_hfs.tproj/dfalib/Makefile.lnx patching file newfs_hfs.tproj/Makefile.lnx Applying ./patches/0002-Add-exclude-Darwin-specific-code.patch using plaintext: patching file fsck_hfs.tproj/cache.c patching file fsck_hfs.tproj/dfalib/BTree.c patching file fsck_hfs.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_i2c-tools/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_i2c-tools/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/i2c-tools/compile -j$(nproc) || make package/feeds/packages/i2c-tools/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/i2c-tools-4.2&amp;#39; ccache_cc -fpic -D_REENTRANT -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/i2c-tools-4.2=i2c-tools-4.2 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -Wstrict-prototypes -Wshadow -Wpointer-arith -Wcast-qual -Wcast-align -Wwrite-strings -Wnested-externs -Winline -W -Wundef -Wmissing-prototypes -Iinclude -c lib/smbus.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libnopoll/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libnopoll/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libnopoll/compile -j$(nproc) || make package/feeds/packages/libnopoll/compile V=s Compile.txt Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file src/nopoll.c patching file src/nopoll_conn.c patching file src/nopoll_decl.h autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libp11/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libp11/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libp11/compile -j$(nproc) || make package/feeds/packages/libp11/compile V=s Compile.txt Applying ./patches/001-fix-install.patch using plaintext: patching file src/Makefile.am patching file src/Makefile.in autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libstrophe/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libstrophe/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libstrophe/compile -j$(nproc) || make package/feeds/packages/libstrophe/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mutt/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mutt/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mutt/compile -j$(nproc) || make package/feeds/packages/mutt/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_njitclient/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_njitclient/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/njitclient/compile -j$(nproc) || make package/feeds/packages/njitclient/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_postfix/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_postfix/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/postfix/compile -j$(nproc) || make package/feeds/packages/postfix/compile V=s Compile.txt Applying ./patches/200-manpages.patch using plaintext: patching file conf/post-install patching file postfix-install Applying ./patches/300-bdb_hash_segfault.patch using plaintext: patching file src/util/dict_db.c Applying ./patches/400-cdb.patch using plaintext: patching file src/util/sys_defs.h Applying ./patches/500-crosscompile.patch using plaintext: patching file makedefs Applying .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-augeas/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-augeas/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-augeas/compile -j$(nproc) || make package/feeds/packages/python-augeas/compile V=s Compile.txt Applying ./patches/001-backport-ffi-fix.patch using plaintext: patching file augeas/__init__.py patching file augeas/ffi.py patching file setup.py Collecting cffi==1.14.5 Downloading cffi-1.14.5.tar.gz (475 kB) Collecting pycparser==2.20 Downloading pycparser-2.20.tar.gz (161 kB) Skipping wheel build for cffi, due to binaries being disabled for it.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cffi/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cffi/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-cffi/compile -j$(nproc) || make package/feeds/packages/python-cffi/compile V=s Compile.txt running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/cffi copying cffi/backend_ctypes.py -&amp;gt; build/lib.-3.9/cffi copying cffi/commontypes.py -&amp;gt; build/lib.-3.9/cffi copying cffi/verifier.py -&amp;gt; build/lib.-3.9/cffi copying cffi/error.py -&amp;gt; build/lib.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-ciso8601/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-ciso8601/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-ciso8601/compile -j$(nproc) || make package/feeds/packages/python-ciso8601/compile V=s Compile.txt running install running build running build_py package init file &amp;#39;ciso8601/__init__.py&amp;#39; not found (or not a regular file) creating build creating build/lib.-3.9 creating build/lib.-3.9/ciso8601 copying ciso8601/__init__.pyi -&amp;gt; build/lib.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cryptodome/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cryptodome/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-cryptodome/compile -j$(nproc) || make package/feeds/packages/python-cryptodome/compile V=s Compile.txt Applying ./patches/001-fix-libgmp-loading.patch using plaintext: patching file lib/Crypto/Math/_IntegerGMP.py Applying ./patches/002-omit-tests.patch using plaintext: patching file setup.py Testing support for clang Target does not support clang Testing support for gcc Target does support gcc Testing support for stdint.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cryptodomex/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cryptodomex/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-cryptodomex/compile -j$(nproc) || make package/feeds/packages/python-cryptodomex/compile V=s Compile.txt Applying ./patches/001-fix-libgmp-loading.patch using plaintext: patching file lib/Cryptodome/Math/_IntegerGMP.py Applying ./patches/002-omit-tests.patch using plaintext: patching file setup.py Testing support for clang Target does not support clang Testing support for gcc Target does support gcc Testing support for stdint.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cryptography/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cryptography/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-cryptography/compile -j$(nproc) || make package/feeds/packages/python-cryptography/compile V=s Compile.txt Applying ./patches/0001-Add-new-ASN1_STRING_get0_data-API.patch using plaintext: patching file src/_cffi_src/openssl/asn1.py Applying ./patches/0002-Add-compatibility-for-X509_STORE_set_get_issuer.patch using plaintext: patching file src/_cffi_src/openssl/x509_vfy.py patching file src/cryptography/hazmat/bindings/openssl/_conditional.py Applying ./patches/0003-Add-compatibility-for-deprecated-TLS-methods.patch using plaintext: patching file src/_cffi_src/openssl/ssl.py patching file src/cryptography/hazmat/bindings/openssl/_conditional.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-curl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-curl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-curl/compile -j$(nproc) || make package/feeds/packages/python-curl/compile V=s Compile.txt Traceback (most recent call last): File &amp;#34;/openwrt/build_dir/target-mips_24kc_musl/pypi/pycurl-7.43.0.6/setup.py&amp;#34;, line 236, in configure_unix p = subprocess.Popen((self.curl_config(), &amp;#39;--version&amp;#39;), File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.9/subprocess.py&amp;#34;, line 951, in __init__ self._execute_child(args, executable, preexec_fn, close_fds, File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-dateutil/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-dateutil/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-dateutil/compile -j$(nproc) || make package/feeds/packages/python-dateutil/compile V=s Compile.txt WARNING: The wheel package is not available. ERROR: Exception: Traceback (most recent call last): File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.9/site-packages/pip/_internal/cli/base_command.py&amp;#34;, line 180, in _main status = self.run(options, args) File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.9/site-packages/pip/_internal/cli/req_command.py&amp;#34;, line 204, in wrapper return func(self, options, args) File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-evdev/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-evdev/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-evdev/compile -j$(nproc) || make package/feeds/packages/python-evdev/compile V=s Compile.txt running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/evdev copying evdev/ecodes.py -&amp;gt; build/lib.-3.9/evdev copying evdev/device.py -&amp;gt; build/lib.-3.9/evdev copying evdev/events.py -&amp;gt; build/lib.-3.9/evdev copying evdev/__init__.py -&amp;gt; build/lib.-3.9/evdev copying evdev/uinput.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-gmpy2/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-gmpy2/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-gmpy2/compile -j$(nproc) || make package/feeds/packages/python-gmpy2/compile V=s Compile.txt running install running build running build_ext building &amp;#39;gmpy2&amp;#39; extension creating build creating build/temp.-3.9 creating build/temp.-3.9/src ccache_cc -Wno-unused-result -Wsign-compare -DNDEBUG -g -O3 -Wall -O2 -I/openwrt/staging_dir/host/include -I/openwrt/staging_dir/hostpkg/include -I/openwrt/staging_dir/target-mips_24kc_musl/host/include -O2 -I/openwrt/staging_dir/host/include -I/openwrt/staging_dir/hostpkg/include -I/openwrt/staging_dir/target-mips_24kc_musl/host/include -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/pypi/gmpy2-2.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-uci/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-uci/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-uci/compile -j$(nproc) || make package/feeds/packages/python-uci/compile V=s Compile.txt running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/euci copying euci/__init__.py -&amp;gt; build/lib.-3.9/euci copying euci/boolean.py -&amp;gt; build/lib.-3.9/euci warning: build_py: byte-compiling is disabled, skipping. running build_ext building &amp;#39;uci&amp;#39; extension creating build/temp.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-yaml/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-yaml/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-yaml/compile -j$(nproc) || make package/feeds/packages/python-yaml/compile V=s Compile.txt /openwrt/staging_dir/hostpkg/lib/python3.9/distutils/dist.py:274: UserWarning: Unknown distribution option: &amp;#39;python_requires&amp;#39; warnings.warn(msg) running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/yaml copying lib3/yaml/tokens.py -&amp;gt; build/lib.-3.9/yaml copying lib3/yaml/constructor.py -&amp;gt; build/lib.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3-netifaces/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3-netifaces/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python3-netifaces/compile -j$(nproc) || make package/feeds/packages/python3-netifaces/compile V=s Compile.txt running install running build running build_ext checking for getifaddrs...found. checking for getnameinfo...found. checking for IPv6 socket IOCTLs...not found. checking for optional header files...netpacket/packet.h linux/atm.h linux/llc.h linux/tipc.h linux/dn.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_quickjspp/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_quickjspp/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/quickjspp/compile -j$(nproc) || make package/feeds/packages/quickjspp/compile V=s Compile.txt Makefile:46: WARNING: skipping quickjspp -- package has no install section -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ratched/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ratched/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ratched/compile -j$(nproc) || make package/feeds/packages/ratched/compile V=s Compile.txt Applying ./patches/0001-Disable-non-IANA-TLS-extensions.patch using plaintext: patching file openssl_clienthello.c Applying ./patches/0002-openssl-fix-compilation-without-deprecated-APIs.patch using plaintext: patching file openssl.c patching file openssl_certs.c patching file openssl_tls.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/ratched-1.0.0&amp;#39; fatal: not a git repository (or any parent up to mount point /) Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rpi.gpio/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rpi.gpio/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/RPi.GPIO/compile -j$(nproc) || make package/feeds/packages/RPi.GPIO/compile V=s Compile.txt running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/RPi copying RPi/__init__.py -&amp;gt; build/lib.-3.9/RPi creating build/lib.-3.9/RPi/GPIO copying RPi/GPIO/__init__.py -&amp;gt; build/lib.-3.9/RPi/GPIO warning: build_py: byte-compiling is disabled, skipping.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_libks/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_libks/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libks/compile -j$(nproc) || make package/feeds/telephony/libks/compile V=s Compile.txt Applying ./patches/01-find-libm.patch using plaintext: patching file cmake/FindLibM.cmake Applying ./patches/02-correct-signal_h-include.patch using plaintext: patching file src/include/libks/ks_platform.h Applying ./patches/03-fix-flags.patch using plaintext: patching file CMakeLists.txt Applying ./patches/04-don_t-override-optimization.patch using plaintext: patching file cmake/ksutil.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_signalwire-client-c/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_signalwire-client-c/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/signalwire-client-c/compile -j$(nproc) || make package/feeds/telephony/signalwire-client-c/compile V=s Compile.txt Applying ./patches/01-set-libks-cmake-dir.patch using plaintext: patching file cmake/FindLibKS.cmake -- cotire 1.7.10 loaded. -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_libevent2/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_libevent2/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/libevent2/compile -j$(nproc) || make package/feeds/base/libevent2/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_uclient/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_uclient/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/uclient/compile -j$(nproc) || make package/feeds/base/uclient/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_uhttpd/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_uhttpd/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/uhttpd/compile -j$(nproc) || make package/feeds/base/uhttpd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_ustream-ssl/openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_ustream-ssl/openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ustream-ssl/compile -j$(nproc) || make package/feeds/base/ustream-ssl/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bind/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bind/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/bind/compile -j$(nproc) || make package/feeds/packages/bind/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force fatal: not a git repository (or any parent up to mount point /) Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_https-dns-proxy/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_https-dns-proxy/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/https-dns-proxy/compile -j$(nproc) || make package/feeds/packages/https-dns-proxy/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_jose/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_jose/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jose/compile -j$(nproc) || make package/feeds/packages/jose/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-mips_24kc_musl/jose-11 Build dir: /openwrt/build_dir/target-mips_24kc_musl/jose-11/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libgpiod/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libgpiod/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libgpiod/compile -j$(nproc) || make package/feeds/packages/libgpiod/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/host/bin/python3.9-config: No such file or directory bash: /openwrt/staging_dir/target-mips_24kc_musl/host/bin/python3.9-config: No such file or directory configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libssh2/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libssh2/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libssh2/compile -j$(nproc) || make package/feeds/packages/libssh2/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:36 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_luasec/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_luasec/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/luasec/compile -j$(nproc) || make package/feeds/packages/luasec/compile V=s Compile.txt Applying ./patches/100-fix-compilation.patch using plaintext: patching file src/Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/luasec-0.9&amp;#39; --------------------- ** Build for Linux ** --------------------- make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/luasec-0.9/src&amp;#39; make[6]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/luasec-0.9/src&amp;#39; make[7]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/luasec-0.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nmap/full/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nmap/full/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nmap/compile -j$(nproc) || make package/feeds/packages/nmap/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/nmap-full/nmap-7.91&amp;#39; Compiling libnetutil cd libnetutil &amp;amp;&amp;amp; make make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/nmap-full/nmap-7.91/libnetutil&amp;#39; make[5]: Nothing to be done for &amp;#39;all&amp;#39;. make[5]: Leaving directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/nmap-full/nmap-7.91/libnetutil&amp;#39; Compiling liblinear make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/nmap-full/nmap-7.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nmap/ssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nmap/ssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nmap/compile -j$(nproc) || make package/feeds/packages/nmap/compile V=s Compile.txt configure: loading site script /openwrt/include/site/mips checking whether NLS is requested... no checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking for mips-openwrt-linux-gcc... ccache_cc checking whether the C compiler works.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openocd/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openocd/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openocd/compile -j$(nproc) || make package/feeds/packages/openocd/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_prosody/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_prosody/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/prosody/compile -j$(nproc) || make package/feeds/packages/prosody/compile V=s Compile.txt Lua version detected: 5.1 Lua interpreter found: /openwrt/staging_dir/hostpkg/bin/lua... Checking Lua includes... lua.h found in /openwrt/staging_dir/target-mips_24kc_musl/usr/include/lua.h Checking if Lua header version matches that of the interpreter... yes Writing configuration.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-rcssmin/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-rcssmin/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-rcssmin/compile -j$(nproc) || make package/feeds/packages/python-rcssmin/compile V=s Compile.txt running install running build running build_py creating build creating build/lib.-3.9 copying ./rcssmin.py -&amp;gt; build/lib.-3.9 warning: build_py: byte-compiling is disabled, skipping. running build_ext building &amp;#39;_rcssmin&amp;#39; extension creating build/temp.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rng-tools/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rng-tools/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/rng-tools/compile -j$(nproc) || make package/feeds/packages/rng-tools/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_softethervpn5/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_softethervpn5/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/softethervpn5/compile -j$(nproc) || make package/feeds/packages/softethervpn5/compile V=s Compile.txt Applying ./patches/001-iconv-defines-fix.patch using plaintext: patching file src/Mayaqua/Mayaqua.h Applying ./patches/002-iconv-cmake-fix.patch using plaintext: patching file src/Mayaqua/CMakeLists.txt Applying ./patches/100-increase-cfg-save-intervall.patch using plaintext: patching file src/Cedar/Server.h Applying ./patches/101-add-config-write-syslog.patch using plaintext: patching file src/Cedar/Server.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_squid/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_squid/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/squid/compile -j$(nproc) || make package/feeds/packages/squid/compile V=s Compile.txt Applying ./patches/001-glibc-compile.patch using plaintext: patching file src/tools.cc Applying ./patches/010-no-buildbxxflags.patch using plaintext: patching file src/Makefile.am autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tang/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tang/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tang/compile -j$(nproc) || make package/feeds/packages/tang/compile V=s Compile.txt Applying ./patches/010-http.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-mips_24kc_musl/tang-10 Build dir: /openwrt/build_dir/target-mips_24kc_musl/tang-10/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tor/full/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tor/full/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tor/compile -j$(nproc) || make package/feeds/packages/tor/compile V=s Compile.txt Applying ./patches/001-torrc.patch using plaintext: patching file src/config/torrc.sample.in autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ykclient/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ykclient/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ykclient/compile -j$(nproc) || make package/feeds/packages/ykclient/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_yubico-pam/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:50:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_yubico-pam/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/yubico-pam/compile -j$(nproc) || make package/feeds/packages/yubico-pam/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apfree-wifidog/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apfree-wifidog/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/apfree-wifidog/compile -j$(nproc) || make package/feeds/packages/apfree-wifidog/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_aria2/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_aria2/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/aria2/compile -j$(nproc) || make package/feeds/packages/aria2/compile V=s Compile.txt configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking target system type... mips-openwrt-linux-gnu checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_keepalived/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_keepalived/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/keepalived/compile -j$(nproc) || make package/feeds/packages/keepalived/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_neon/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_neon/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/neon/compile -j$(nproc) || make package/feeds/packages/neon/compile V=s Compile.txt configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking for mips-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nfs-kernel-server/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nfs-kernel-server/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nfs-kernel-server/compile -j$(nproc) || make package/feeds/packages/nfs-kernel-server/compile V=s Compile.txt Applying ./patches/101-musl-getservbyport.patch using plaintext: patching file utils/statd/rmtcall.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking for a BSD-compatible install.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nginx-util/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nginx-util/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nginx-util/compile -j$(nproc) || make package/feeds/packages/nginx-util/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nginx/all-module/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nginx/all-module/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nginx/compile -j$(nproc) || make package/feeds/packages/nginx/compile V=s Compile.txt Applying ./patches/101-feature_test_fix.patch using plaintext: patching file auto/cc/name patching file auto/cc/conf patching file auto/os/linux patching file auto/unix Applying ./patches/102-sizeof_test_fix.patch using plaintext: patching file auto/types/sizeof Applying ./patches/103-sys_nerr.patch using plaintext: patching file src/os/unix/ngx_errno.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nginx/ssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nginx/ssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nginx/compile -j$(nproc) || make package/feeds/packages/nginx/compile V=s Compile.txt Applying ./patches/101-feature_test_fix.patch using plaintext: patching file auto/cc/name patching file auto/cc/conf patching file auto/os/linux patching file auto/unix Applying ./patches/102-sizeof_test_fix.patch using plaintext: patching file auto/types/sizeof Applying ./patches/103-sys_nerr.patch using plaintext: patching file src/os/unix/ngx_errno.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openssh/with-pam/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openssh/with-pam/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openssh/compile -j$(nproc) || make package/feeds/packages/openssh/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for mips-openwrt-linux-cc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shairport-sync/mbedtls/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shairport-sync/mbedtls/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shairport-sync/mini/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shairport-sync/mini/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shairport-sync/openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shairport-sync/openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_spice/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_spice/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/spice/compile -j$(nproc) || make package/feeds/packages/spice/compile V=s Compile.txt Applying ./patches/010-doxy.patch using plaintext: patching file meson.build Applying ./patches/030-include-generated-code.patch using plaintext: patching file subprojects/spice-common/common/meson.build Applying ./patches/040-only-server.patch using plaintext: patching file meson.build Applying ./patches/050-no-mkenums.patch using plaintext: patching file server/meson.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_subconverter/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_subconverter/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/subconverter/compile -j$(nproc) || make package/feeds/packages/subconverter/compile V=s Compile.txt -- The CXX compiler identification is GNU 8.4.0 -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uanytun/sslcrypt/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uanytun/sslcrypt/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/uanytun/compile -j$(nproc) || make package/feeds/packages/uanytun/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/uanytun-sslcrypt/uanytun-0.3.7/src&amp;#39; (re)building auth_algo.d (re)building key_derivation.d (re)building uanytun.d (re)building cipher.d (re)building seq_window.d (re)building encrypted_packet.d (re)building plain_packet.d (re)building udp.d (re)building tun.d (re)building options.d (re)building sysexec.d (re)building sig_handler.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uwsgi/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uwsgi/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/uwsgi/compile -j$(nproc) || make package/feeds/packages/uwsgi/compile V=s Compile.txt Applying ./patches/001-dont-hardcode-zlib.patch using plaintext: patching file uwsgiconfig.py Applying ./patches/002-dont-override-toolchain-optimization.patch using plaintext: patching file uwsgiconfig.py Applying ./patches/003-hard-code-Linux-as-compilation-os.patch using plaintext: patching file uwsgiconfig.py Applying ./patches/010-uclibc-ng.patch using plaintext: patching file core/uwsgi.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-g72x/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-g72x/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_dahdi-tools/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_dahdi-tools/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_libpri/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:49:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_libpri/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_exfat/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_exfat/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/exfat/compile -j$(nproc) || make package/feeds/base/exfat/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.11.1/inode.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.11.1/namei.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.11.1/dir.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.11.1/super.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.11.1/fatent.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.11.1/cache.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.11.1/nls.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_aircrack-ng/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_aircrack-ng/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/aircrack-ng/compile -j$(nproc) || make package/feeds/packages/aircrack-ng/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I build/m4/stubs -I build/m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_atlas-probe/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_atlas-probe/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/atlas-probe/compile -j$(nproc) || make package/feeds/packages/atlas-probe/compile V=s Compile.txt Applying ./patches/001-fix-stime-glibc-remove.patch using plaintext: patching file coreutils/date.c patching file util-linux/rdate.c patching file networking/httpget.c patching file networking/httppost.c autoreconf: Entering directory `libevent-2.1.11-stable&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I libevent-2.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hs20/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hs20/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/hs20/compile -j$(nproc) || make package/feeds/packages/hs20/compile V=s Compile.txt Applying ./patches/050-use-dm_ddf-v1_3_dtd.patch using plaintext: patching file hs20/server/spp_server.c Applying ./patches/100-fix-hs20_spp_server-path.patch using plaintext: patching file hs20/server/www/spp.php Applying ./patches/200-adapt-config-php.patch using plaintext: patching file hs20/server/www/config.php Applying ./patches/300-paths-in-ca-setup-sh.patch using plaintext: patching file hs20/server/ca/setup.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_knot-resolver/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_knot-resolver/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/knot-resolver/compile -j$(nproc) || make package/feeds/packages/knot-resolver/compile V=s Compile.txt Applying ./patches/010-fix-lmdb.patch using plaintext: patching file meson.build Applying ./patches/030-fix-policy-hack.patch using plaintext: patching file modules/policy/policy.lua The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-mips_24kc_musl/knot-resolver-5.3.2 Build dir: /openwrt/build_dir/target-mips_24kc_musl/knot-resolver-5.3.2/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_knot/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_knot/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/knot/compile -j$(nproc) || make package/feeds/packages/knot/compile V=s Compile.txt Applying ./patches/01_zscanner_tests.patch using plaintext: patching file tests/libzscanner/test_zscanner.in Applying ./patches/02_knot.conf.patch using plaintext: patching file samples/knot.sample.conf.in autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_luasql/mysql/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_luasql/mysql/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/luasql/compile -j$(nproc) || make package/feeds/packages/luasql/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/luasql-mysql/luasql-2.4.0&amp;#39; ccache_cc -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/luasql-mysql/luasql-2.4.0=luasql-2.4.0 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DPIC -fpic -std=gnu99 -I/openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ocserv/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ocserv/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ocserv/compile -j$(nproc) || make package/feeds/packages/ocserv/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking pkg-config is at least version 0.9.0... yes checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pdns-recursor/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pdns-recursor/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pdns-recursor/compile -j$(nproc) || make package/feeds/packages/pdns-recursor/compile V=s Compile.txt Applying ./patches/010-time_t-check.patch using plaintext: patching file configure.ac Applying ./patches/100-disable-recursor.conf-dist.patch using plaintext: patching file Makefile.am Applying ./patches/200-boost_thread_fix.patch using plaintext: patching file m4/boost.m4 Applying ./patches/300-boost-dont-search-host-dirs.patch using plaintext: patching file m4/boost.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-greenlet/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-greenlet/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-greenlet/compile -j$(nproc) || make package/feeds/packages/python-greenlet/compile V=s Compile.txt running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/greenlet copying src/greenlet/__init__.py -&amp;gt; build/lib.-3.9/greenlet creating build/lib.-3.9/greenlet/tests copying src/greenlet/tests/test_leaks.py -&amp;gt; build/lib.-3.9/greenlet/tests copying src/greenlet/tests/test_contextvars.py -&amp;gt; build/lib.-3.9/greenlet/tests copying src/greenlet/tests/test_gc.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-psutil/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-psutil/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-psutil/compile -j$(nproc) || make package/feeds/packages/python-psutil/compile V=s Compile.txt Requirement already satisfied: setuptools-scm==4.1.2 in /openwrt/staging_dir/hostpkg/lib/python3.9/site-packages (from -r ../host-pip-requirements/setuptools-scm.txt (line 1)) (4.1.2) Requirement already satisfied: setuptools in /openwrt/staging_dir/hostpkg/lib/python3.9/site-packages (from setuptools-scm==4.1.2-&amp;gt;-r ../host-pip-requirements/setuptools-scm.txt (line 1)) (56.0.0) cc1: note: someone does not honour COPTS correctly, passed 0 times running install running build running build_py creating build creating build/lib.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3-libselinux/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3-libselinux/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python3-libselinux/compile -j$(nproc) || make package/feeds/packages/python3-libselinux/compile V=s Compile.txt Applying ./patches/010-setup-py-custom-cc.patch using plaintext: patching file src/Makefile Applying ./patches/020-Make-use-of-variables-when-defining-libdir-and-inclu.patch using plaintext: patching file src/libselinux.pc.in make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/python-libselinux/libselinux-3.2/src&amp;#39; make[4]: Nothing to be done for &amp;#39;swigify&amp;#39;. ccache_cc -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/python-libselinux/libselinux-3.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3-libsemanage/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3-libsemanage/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python3-libsemanage/compile -j$(nproc) || make package/feeds/packages/python3-libsemanage/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/python-libsemanage/libsemanage-3.2/src&amp;#39; swig -Wall -python -o semanageswig_wrap.c -outdir ./ semanageswig_python.i ccache_cc -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/python-libsemanage/libsemanage-3.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_selinux-python/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_selinux-python/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/selinux-python/compile -j$(nproc) || make package/feeds/packages/selinux-python/compile V=s Compile.txt Applying ./patches/0001-sepolgen-adjust-data_dir.patch using plaintext: patching file sepolgen/src/sepolgen/defaults.py Applying ./patches/0002-sepolgen-don-t-hardcode-search-for-ausearch-in-sbin.patch using plaintext: patching file sepolgen/src/sepolgen/audit.py make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/selinux-python-3.2&amp;#39; make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/selinux-python-3.2/sepolicy&amp;#39; /openwrt/staging_dir/hostpkg/bin/python3.9 setup.py build running build running build_py creating build creating build/lib creating build/lib/sepolicy copying sepolicy/network.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_setools/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_setools/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/setools/compile -j$(nproc) || make package/feeds/packages/setools/compile V=s Compile.txt Applying ./patches/030-remove-host-paths.patch using plaintext: patching file setup.py Collecting Cython==0.29.21 Downloading Cython-0.29.21.tar.gz (2.1 MB) Skipping wheel build for Cython, due to binaries being disabled for it. Installing collected packages: Cython Running setup.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_umurmur/openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:48:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_umurmur/openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/umurmur/compile -j$(nproc) || make package/feeds/packages/umurmur/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_mt7601u-ap/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_mt7601u-ap/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt7601u-ap/compile -j$(nproc) || make package/feeds/base/mt7601u-ap/compile V=s Compile.txt Applying ./patches/010-fix-control-reaches-end-of-non-void.patch using plaintext: patching file mcu/rtmp_mcu.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/mt7601u-ap-2020-05-01-62430742/os/linux/../../os/linux/rt_profile.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/mt7601u-ap-2020-05-01-62430742/os/linux/../../ap/ap_mbss.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/mt7601u-ap-2020-05-01-62430742/os/linux/../../ap/ap.o /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/mt7601u-ap-2020-05-01-62430742/os/linux/../../ap/ap.c: In function &amp;#39;DOT1X_InternalCmdAction&amp;#39;: /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/mt7601u-ap-2020-05-01-62430742/os/linux/../../ap/ap.c:2217:2: warning: ISO C90 forbids variable length array &amp;#39;FrameBuf&amp;#39; [-Wvla] UCHAR FrameBuf[frame_len]; ^~~~~ /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/mt7601u-ap-2020-05-01-62430742/os/linux/.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apache/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apache/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/apache/compile -j$(nproc) || make package/feeds/packages/apache/compile V=s Compile.txt Applying ./patches/001-cross-compile.patch using plaintext: patching file server/Makefile.in patching file configure.in patching file acinclude.m4 Applying ./patches/004-fix-scoreboard-location.patch using plaintext: patching file include/scoreboard.h Applying ./patches/005-httpd_conf.patch using plaintext: patching file docs/conf/httpd.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apr-util/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apr-util/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/apr-util/compile -j$(nproc) || make package/feeds/packages/apr-util/compile V=s Compile.txt Applying ./patches/002-fix-gdbm-error-handling.patch using plaintext: patching file dbm/apr_dbm_gdbm.c Applying ./patches/003-support_mariadb.patch using plaintext: patching file build/dbd.m4 patching file dbd/apr_dbd_mysql.c Applying ./patches/004-avoid_ldap_by_defaut.patch using plaintext: patching file apu-config.in Applying ./patches/005-apu_config_dont_list_indep_libs.patch using plaintext: patching file apr-util.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_clamav/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_clamav/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/clamav/compile -j$(nproc) || make package/feeds/packages/clamav/compile V=s Compile.txt Applying ./patches/010-musl12x.patch using plaintext: patching file clamonacc/misc/fts.c patching file clamonacc/misc/priv_fts.h Applying ./patches/020-cmake.patch using plaintext: patching file freshclam/CMakeLists.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_collectd/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_collectd/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/collectd/compile -j$(nproc) || make package/feeds/packages/collectd/compile V=s Compile.txt Applying ./patches/001-undefined-AM_PATH_LIBGCRYPT.patch using plaintext: patching file fake-am_path_libgcrypt.m4 Applying ./patches/100-rrdtool-add-rrasingle-option.patch using plaintext: patching file src/rrdtool.c patching file src/utils/rrdcreate/rrdcreate.c patching file src/utils/rrdcreate/rrdcreate.h Applying ./patches/140-fix-fqdnlookup.patch using plaintext: patching file src/daemon/configfile.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_fdm/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_fdm/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/fdm/compile -j$(nproc) || make package/feeds/packages/fdm/compile V=s Compile.txt Applying ./patches/010-ntop-fix.patch using plaintext: patching file Makefile.am Applying ./patches/020-Fix-compile-with-OpenSSL-1.1.0.patch using plaintext: patching file fdm.c Applying ./patches/030-cdefs.patch using plaintext: patching file fdm.h Applying ./patches/040-remove_host_includes.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_haproxy/ssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_haproxy/ssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/haproxy/compile -j$(nproc) || make package/feeds/packages/haproxy/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/haproxy-ssl/haproxy-2.4.0&amp;#39; CC src/ssl_sample.o In file included from include/haproxy/listener-t.h:37, from include/haproxy/server-t.h:36, from include/haproxy/lb_map-t.h:26, from include/haproxy/backend-t.h:30, from include/haproxy/proxy-t.h:35, from include/haproxy/hlua-t.h:32, from include/haproxy/applet-t.h:29, from include/haproxy/obj_type.h:26, from src/ssl_sample.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_icecast/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_icecast/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/icecast/compile -j$(nproc) || make package/feeds/packages/icecast/compile V=s Compile.txt Applying ./patches/001-icecast-2.4.0-tremor.patch using plaintext: patching file m4/ogg.m4 patching file m4/vorbis.m4 patching file src/format_vorbis.c Applying ./patches/005-no_examples_doc_win32.patch using plaintext: patching file Makefile.am Applying ./patches/010-fix_libcurl_test_crap.patch using plaintext: patching file m4/xiph_curl.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_idevicerestore/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_idevicerestore/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/idevicerestore/compile -j$(nproc) || make package/feeds/packages/idevicerestore/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking target system type... mips-openwrt-linux-gnu checking for a BSD-compatible install.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libesmtp/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libesmtp/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libesmtp/compile -j$(nproc) || make package/feeds/packages/libesmtp/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-mips_24kc_musl/libESMTP-1.1.0 Build dir: /openwrt/build_dir/target-mips_24kc_musl/libESMTP-1.1.0/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libimobiledevice/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libimobiledevice/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libimobiledevice/compile -j$(nproc) || make package/feeds/packages/libimobiledevice/compile V=s Compile.txt Applying ./patches/020-config.patch using plaintext: patching file common/userpref.c Applying ./patches/100-ios14.patch using plaintext: patching file src/mobilebackup2.c Applying ./patches/110-iOS14.patch using plaintext: patching file src/screenshotr.c Applying ./patches/120-iOS14.patch using plaintext: patching file include/libimobiledevice/debugserver.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libssh/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libssh/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libssh/compile -j$(nproc) || make package/feeds/packages/libssh/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libwebsockets/full/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libwebsockets/full/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libwebsockets/compile -j$(nproc) || make package/feeds/packages/libwebsockets/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libwebsockets/openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libwebsockets/openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libwebsockets/compile -j$(nproc) || make package/feeds/packages/libwebsockets/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_monit/ssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_monit/ssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/monit/compile -j$(nproc) || make package/feeds/packages/monit/compile V=s Compile.txt Applying ./patches/001-fix-default-piddir.patch using plaintext: patching file configure patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mosquitto/ssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mosquitto/ssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mosquitto/compile -j$(nproc) || make package/feeds/packages/mosquitto/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/mosquitto-ssl/mosquitto-2.0.11&amp;#39; set -e; for d in lib apps client plugins src; do make -C ${d}; done make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/mosquitto-ssl/mosquitto-2.0.11/lib&amp;#39; ccache_cc -I. -I.. -I.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ootoc/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ootoc/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ootoc/compile -j$(nproc) || make package/feeds/packages/ootoc/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_open-iscsi/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_open-iscsi/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/open-iscsi/compile -j$(nproc) || make package/feeds/packages/open-iscsi/compile V=s Compile.txt Applying ./patches/0002-idmb_rec_write-check-for-tpgt-first.patch using plaintext: patching file usr/idbm.c Applying ./patches/0003-idbm_rec_write-seperate-old-and-new-style-writes.patch using plaintext: patching file usr/idbm.c Applying ./patches/0004-idbw_rec_write-pick-tpgt-from-existing-record.patch using plaintext: patching file usr/idbm.c Applying ./patches/0015-remove-the-offload-boot-supported-ifdef.patch using plaintext: patching file usr/iface.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opus-tools/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opus-tools/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/opus-tools/compile -j$(nproc) || make package/feeds/packages/opus-tools/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking whether make supports nested variables... yes checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opusfile/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opusfile/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/opusfile/compile -j$(nproc) || make package/feeds/packages/opusfile/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls, --without-flac configure: loading site script /openwrt/include/site/mips checking for mips-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_sendmail/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_sendmail/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/sendmail/compile -j$(nproc) || make package/feeds/packages/sendmail/compile V=s Compile.txt Applying ./patches/010-enable-nonroot-install.patch using plaintext: patching file cf/cf/Makefile Applying ./patches/011-libmilter-so-version.patch using plaintext: patching file libmilter/Makefile.m4 Applying ./patches/100-misc-os-musl-fixes.patch using plaintext: patching file devtools/bin/Build patching file include/sm/conf.h Applying ./patches/102-pthreads-stack-size.patch using plaintext: patching file libmilter/libmilter.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shadowsocksr-libev/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shadowsocksr-libev/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shadowsocksr-libev/compile -j$(nproc) || make package/feeds/packages/shadowsocksr-libev/compile V=s Compile.txt Applying ./patches/0001-Add-ss-server-and-ss-check.patch using plaintext: patching file .gitignore patching file Makefile.am patching file Makefile.in patching file configure patching file configure.ac Applying ./patches/0002-Revert-verify_simple-and-auth_simple.patch using plaintext: patching file src/obfs/obfs.c Applying .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_snort/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_snort/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/snort/compile -j$(nproc) || make package/feeds/packages/snort/compile V=s Compile.txt Applying ./patches/001-compile.patch using plaintext: File configure.in is read-only; trying to patch anyway patching file configure.in Applying ./patches/002-fix_include.patch using plaintext: File configure.in is read-only; trying to patch anyway patching file configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_softethervpn/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_softethervpn/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/softethervpn/compile -j$(nproc) || make package/feeds/packages/softethervpn/compile V=s Compile.txt Applying ./patches/103-noeucjp.patch using plaintext: patching file src/Mayaqua/Internat.c Applying ./patches/110-no-m64.patch using plaintext: patching file src/makefiles/linux_64bit.mak Applying ./patches/120-openssl-deprecated.patch using plaintext: patching file src/Mayaqua/Encrypt.c patching file src/Mayaqua/Encrypt.h patching file src/Mayaqua/Network.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_spdlog/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_spdlog/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/spdlog/compile -j$(nproc) || make package/feeds/packages/spdlog/compile V=s Compile.txt + curl -f --connect-timeout 20 --retry 5 --location --insecure https://codeload.github.com/gabime/spdlog/tar.gz/v1.8.5?/spdlog-1.8.5.tar.gz % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 313k 0 313k 0 0 2105k 0 --:--:-- --:--:-- --:--:-- 2105k -- The CXX compiler identification is GNU 8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_strongswan/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_strongswan/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/strongswan/compile -j$(nproc) || make package/feeds/packages/strongswan/compile V=s Compile.txt Applying ./patches/101-musl-fixes.patch using plaintext: patching file src/libstrongswan/library.h patching file src/libstrongswan/musl.h patching file src/libcharon/plugins/kernel_netlink/kernel_netlink_ipsec.c patching file src/libcharon/plugins/kernel_netlink/kernel_netlink_net.c patching file src/libcharon/plugins/kernel_netlink/kernel_netlink_shared.c patching file src/libstrongswan/plugins/bliss/bliss_huffman.c Applying ./patches/203-uci.patch using plaintext: patching file src/libcharon/plugins/uci/uci_parser.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_subversion/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_subversion/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/subversion/compile -j$(nproc) || make package/feeds/packages/subversion/compile V=s Compile.txt Applying ./patches/301-cross-compilation-macos.patch using plaintext: patching file build/ac-macros/macosx.m4 patching file Makefile.in autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I build/ac-macros -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tmate-ssh-server/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tmate-ssh-server/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tmate-ssh-server/compile -j$(nproc) || make package/feeds/packages/tmate-ssh-server/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tmate/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tmate/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tmate/compile -j$(nproc) || make package/feeds/packages/tmate/compile V=s Compile.txt Applying ./patches/010-Avoid-initializing-stdout-twice.patch using plaintext: patching file log.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_transmission/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_transmission/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/transmission/compile -j$(nproc) || make package/feeds/packages/transmission/compile V=s Compile.txt Applying ./patches/010-no-intltool.patch using plaintext: patching file configure.ac Applying ./patches/020-mbedcrypto.patch using plaintext: patching file configure.ac Applying ./patches/080-disable-webseeding.patch using plaintext: patching file libtransmission/webseed.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ulogd/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ulogd/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ulogd/compile -j$(nproc) || make package/feeds/packages/ulogd/compile V=s Compile.txt Applying ./patches/010-json-remote.patch using plaintext: patching file output/ulogd_output_JSON.c patching file ulogd.conf.in Applying ./patches/020-fix-musl.patch using plaintext: patching file src/ulogd.c Applying ./patches/030-ipfix-add.patch using plaintext: patching file configure.ac patching file include/ulogd/ulogd.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_usbmuxd/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_usbmuxd/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/usbmuxd/compile -j$(nproc) || make package/feeds/packages/usbmuxd/compile V=s Compile.txt Applying ./patches/010-config.patch using plaintext: patching file src/conf.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_vpnc/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:47:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_vpnc/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/vpnc/compile -j$(nproc) || make package/feeds/packages/vpnc/compile V=s Compile.txt Applying ./patches/110-openssl-deprecated.patch using plaintext: patching file src/crypto-openssl.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/vpnc-2021-01-31-43780cec&amp;#39; cd src &amp;amp;&amp;amp; LC_ALL=C perl -w ./enum2debug.pl isakmp.h &amp;gt;vpnc-debug.c 2&amp;gt;vpnc-debug.h Package gnutls was not found in the pkg-config search path.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/basic-openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/basic-openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Makefile:704: WARNING: skipping wpa-cli -- package has no install section Applying ./patches/001-wolfssl-init-RNG-with-ECC-key.patch using plaintext: patching file src/crypto/crypto_wolfssl.c Applying ./patches/010-mesh-Allow-DFS-channels-to-be-selected-if-dfs-is-ena.patch using plaintext: patching file wpa_supplicant/wpa_supplicant.c Applying ./patches/011-mesh-use-deterministic-channel-on-channel-switch.patch using plaintext: patching file src/ap/dfs.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/full-openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/full-openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Makefile:704: WARNING: skipping wpa-cli -- package has no install section Applying ./patches/001-wolfssl-init-RNG-with-ECC-key.patch using plaintext: patching file src/crypto/crypto_wolfssl.c Applying ./patches/010-mesh-Allow-DFS-channels-to-be-selected-if-dfs-is-ena.patch using plaintext: patching file wpa_supplicant/wpa_supplicant.c Applying ./patches/011-mesh-use-deterministic-channel-on-channel-switch.patch using plaintext: patching file src/ap/dfs.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/supplicant-full-openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/supplicant-full-openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Makefile:705: WARNING: skipping hostapd-utils -- package has no install section make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/hostapd-supplicant-full-openssl/hostapd-2021-05-22-b102f19b/wpa_supplicant&amp;#39; LD wpa_cli ../src/crypto/tls_openssl.c:19:10: fatal error: openssl/ssl.h: No such file or directory #include &amp;lt;openssl/ssl.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/supplicant-mesh-openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/supplicant-mesh-openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Makefile:705: WARNING: skipping hostapd-utils -- package has no install section Applying ./patches/001-wolfssl-init-RNG-with-ECC-key.patch using plaintext: patching file src/crypto/crypto_wolfssl.c Applying ./patches/010-mesh-Allow-DFS-channels-to-be-selected-if-dfs-is-ena.patch using plaintext: patching file wpa_supplicant/wpa_supplicant.c Applying ./patches/011-mesh-use-deterministic-channel-on-channel-switch.patch using plaintext: patching file src/ap/dfs.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/wpad-basic-openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/wpad-basic-openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Applying ./patches/001-wolfssl-init-RNG-with-ECC-key.patch using plaintext: patching file src/crypto/crypto_wolfssl.c Applying ./patches/010-mesh-Allow-DFS-channels-to-be-selected-if-dfs-is-ena.patch using plaintext: patching file wpa_supplicant/wpa_supplicant.c Applying ./patches/011-mesh-use-deterministic-channel-on-channel-switch.patch using plaintext: patching file src/ap/dfs.c patching file src/drivers/driver_nl80211.c Applying ./patches/020-mesh-make-forwarding-configurable.patch using plaintext: patching file src/ap/ap_config.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/wpad-full-openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/wpad-full-openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Applying ./patches/001-wolfssl-init-RNG-with-ECC-key.patch using plaintext: patching file src/crypto/crypto_wolfssl.c Applying ./patches/010-mesh-Allow-DFS-channels-to-be-selected-if-dfs-is-ena.patch using plaintext: patching file wpa_supplicant/wpa_supplicant.c Applying ./patches/011-mesh-use-deterministic-channel-on-channel-switch.patch using plaintext: patching file src/ap/dfs.c patching file src/drivers/driver_nl80211.c Applying ./patches/020-mesh-make-forwarding-configurable.patch using plaintext: patching file src/ap/ap_config.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/wpad-mesh-openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/wpad-mesh-openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Applying ./patches/001-wolfssl-init-RNG-with-ECC-key.patch using plaintext: patching file src/crypto/crypto_wolfssl.c Applying ./patches/010-mesh-Allow-DFS-channels-to-be-selected-if-dfs-is-ena.patch using plaintext: patching file wpa_supplicant/wpa_supplicant.c Applying ./patches/011-mesh-use-deterministic-channel-on-channel-switch.patch using plaintext: patching file src/ap/dfs.c patching file src/drivers/driver_nl80211.c Applying ./patches/020-mesh-make-forwarding-configurable.patch using plaintext: patching file src/ap/ap_config.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_chaosvpn/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_chaosvpn/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/chaosvpn/compile -j$(nproc) || make package/feeds/packages/chaosvpn/compile V=s Compile.txt Applying ./patches/0001-OpenSSL-1.1.0-compile-fix.patch using plaintext: patching file crypto.c Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file crypto.c Applying ./patches/020-cdefs.patch using plaintext: patching file ar.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/chaosvpn-2.19&amp;#39; yacc -d cvconf.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ffmpeg/custom/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ffmpeg/custom/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/mips_24kc/packages/ffmpeg-custom_4.3.2-1_mips_24kc.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_getdns/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_getdns/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/getdns/compile -j$(nproc) || make package/feeds/packages/getdns/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_jool/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_jool/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libnetconf2/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libnetconf2/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libnetconf2/compile -j$(nproc) || make package/feeds/packages/libnetconf2/compile V=s Compile.txt Applying ./patches/001-cmake_not_updated.patch using plaintext: patching file CMakeLists.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_loudmouth/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_loudmouth/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/loudmouth/compile -j$(nproc) || make package/feeds/packages/loudmouth/compile V=s Compile.txt Applying ./patches/900-disable-docs-examples-tests.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mpd/full/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mpd/full/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mpd/compile -j$(nproc) || make package/feeds/packages/mpd/compile V=s Compile.txt Applying ./patches/010-iconv.patch using plaintext: patching file src/lib/icu/meson.build Applying ./patches/020-string-view.patch using plaintext: patching file src/tag/GenParseName.cxx Applying ./patches/030-no-avfilter.patch using plaintext: patching file src/lib/ffmpeg/meson.build The Meson build system Version: 0.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mpd/mini/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mpd/mini/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mpd/compile -j$(nproc) || make package/feeds/packages/mpd/compile V=s Compile.txt Applying ./patches/010-iconv.patch using plaintext: patching file src/lib/icu/meson.build Applying ./patches/020-string-view.patch using plaintext: patching file src/tag/GenParseName.cxx Applying ./patches/030-no-avfilter.patch using plaintext: patching file src/lib/ffmpeg/meson.build The Meson build system Version: 0.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netopeer2/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netopeer2/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/netopeer2/compile -j$(nproc) || make package/feeds/packages/netopeer2/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pulseaudio/noavahi/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pulseaudio/noavahi/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pulseaudio/compile -j$(nproc) || make package/feeds/packages/pulseaudio/compile V=s Compile.txt Applying ./patches/001-no_default_64mb_alloc.patch using plaintext: patching file src/pulsecore/memblock.c Applying ./patches/010-iconv.patch using plaintext: patching file meson.build Applying ./patches/020-doxygen.patch using plaintext: patching file meson.build The Meson build system Version: 0.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pyodbc/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pyodbc/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pyodbc/compile -j$(nproc) || make package/feeds/packages/pyodbc/compile V=s Compile.txt /openwrt/staging_dir/hostpkg/lib/python3.9/site-packages/setuptools/dist.py:642: UserWarning: Usage of dash-separated &amp;#39;library-dirs&amp;#39; will not be supported in future versions. Please use the underscore name &amp;#39;library_dirs&amp;#39; instead warnings.warn( /openwrt/staging_dir/hostpkg/lib/python3.9/site-packages/setuptools/dist.py:642: UserWarning: Usage of dash-separated &amp;#39;library-dirs&amp;#39; will not be supported in future versions.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-pynacl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-pynacl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-pynacl/compile -j$(nproc) || make package/feeds/packages/python-pynacl/compile V=s Compile.txt Applying ./patches/001-always-compile-scalar-mult-ed25519.patch using plaintext: patching file src/bindings/minimal/crypto_scalarmult.h Requirement already satisfied: cffi==1.14.5 in /openwrt/staging_dir/hostpkg/lib/python3.9/site-packages (from -r ../host-pip-requirements/cffi.txt (line 1)) (1.14.5) Requirement already satisfied: pycparser==2.20 in /openwrt/staging_dir/hostpkg/lib/python3.9/site-packages (from -r .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_stubby/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_stubby/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/stubby/compile -j$(nproc) || make package/feeds/packages/stubby/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_sysrepo/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_sysrepo/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/sysrepo/compile -j$(nproc) || make package/feeds/packages/sysrepo/compile V=s Compile.txt Applying ./patches/001-add-generated-protobufc-files.patch using plaintext: patching file src/common/sysrepo.pb-c.c patching file src/common/sysrepo.pb-c.h Applying ./patches/006-update-generated-protobufc-files.patch using plaintext: patching file src/common/sysrepo.pb-c.c patching file src/common/sysrepo.pb-c.h -- The C compiler identification is GNU 8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tinc/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tinc/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tinc/compile -j$(nproc) || make package/feeds/packages/tinc/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I m4 fatal: not a git repository (or any parent up to mount point /) Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ttyd/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ttyd/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ttyd/compile -j$(nproc) || make package/feeds/packages/ttyd/compile V=s Compile.txt Applying ./patches/100-log-to-syslog.patch using plaintext: patching file src/server.c CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_routing_batman-adv/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:46:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_routing_batman-adv/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_fast-classifier/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_fast-classifier/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/fast-classifier/fast-classifier.o /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_shortcut-fe/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_shortcut-fe/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_luci_luci-app-nginx-pingos/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_luci_luci-app-nginx-pingos/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_alpine/ssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_alpine/ssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/alpine/compile -j$(nproc) || make package/feeds/packages/alpine/compile V=s Compile.txt Applying ./patches/010-cdefs.patch using plaintext: patching file regex/regex.h Applying ./patches/020-reproducible.patch using plaintext: patching file pico/blddate.c configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apparmor/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apparmor/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/apparmor/compile -j$(nproc) || make package/feeds/packages/apparmor/compile V=s Compile.txt Applying ./patches/010-autoconf-libapparmor.patch using plaintext: patching file libraries/libapparmor/Makefile Applying ./patches/020-fix-ss-path.patch using plaintext: patching file utils/aa-unconfined Applying ./patches/030-remove-pynotify2-dep.patch using plaintext: patching file utils/aa-notify Applying ./patches/040-remove-bash-dep.patch using plaintext: patching file utils/aa-decode Applying .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bitlbee/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bitlbee/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/bitlbee/compile -j$(nproc) || make package/feeds/packages/bitlbee/compile V=s Compile.txt BitlBee configure No detection code exists for OpenSSL. Make sure that you have a complete installation of OpenSSL (including devel/header files) before reporting compilation problems. Also, keep in mind that the OpenSSL is, according to some people, not completely GPL-compatible.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_coova-chilli/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_coova-chilli/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_dnsdist/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_dnsdist/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/dnsdist/compile -j$(nproc) || make package/feeds/packages/dnsdist/compile V=s Compile.txt Applying ./patches/010-time_t-check.patch using plaintext: patching file configure configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/gnutls/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/gnutls/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/exim/compile -j$(nproc) || make package/feeds/packages/exim/compile V=s Compile.txt Applying ./patches/010-allow-json-dynamic-lookup.patch using plaintext: patching file src/drtables.c Applying ./patches/030-openssl-deprecated.patch using plaintext: patching file src/dane-openssl.c patching file src/pdkim/signing.c patching file src/tls-openssl.c patching file src/tlscert-openssl.c Applying ./patches/100-localscan_dlopen.patch using plaintext: patching file src/config.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/ldap/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/ldap/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/exim/compile -j$(nproc) || make package/feeds/packages/exim/compile V=s Compile.txt Applying ./patches/010-allow-json-dynamic-lookup.patch using plaintext: patching file src/drtables.c Applying ./patches/030-openssl-deprecated.patch using plaintext: patching file src/dane-openssl.c patching file src/pdkim/signing.c patching file src/tls-openssl.c patching file src/tlscert-openssl.c Applying ./patches/100-localscan_dlopen.patch using plaintext: patching file src/config.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/nossl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/nossl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/exim/compile -j$(nproc) || make package/feeds/packages/exim/compile V=s Compile.txt Applying ./patches/010-allow-json-dynamic-lookup.patch using plaintext: patching file src/drtables.c Applying ./patches/030-openssl-deprecated.patch using plaintext: patching file src/dane-openssl.c patching file src/pdkim/signing.c patching file src/tls-openssl.c patching file src/tlscert-openssl.c Applying ./patches/100-localscan_dlopen.patch using plaintext: patching file src/config.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/exim/compile -j$(nproc) || make package/feeds/packages/exim/compile V=s Compile.txt Applying ./patches/010-allow-json-dynamic-lookup.patch using plaintext: patching file src/drtables.c Applying ./patches/030-openssl-deprecated.patch using plaintext: patching file src/dane-openssl.c patching file src/pdkim/signing.c patching file src/tls-openssl.c patching file src/tlscert-openssl.c Applying ./patches/100-localscan_dlopen.patch using plaintext: patching file src/config.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gerbera/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gerbera/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gerbera/compile -j$(nproc) || make package/feeds/packages/gerbera/compile V=s Compile.txt -- The CXX compiler identification is GNU 8.4.0 -- The C compiler identification is GNU 8.4.0 -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_git/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_git/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/git/compile -j$(nproc) || make package/feeds/packages/git/compile V=s Compile.txt Applying ./patches/100-configure_for_crosscompiling.patch using plaintext: patching file configure.ac Applying ./patches/200-imapsend_without_curl.patch using plaintext: patching file Makefile Applying ./patches/300-openssl-deprecated.patch using plaintext: patching file imap-send.c Applying ./patches/310-fix-uname-detection-for-crosscompiling using plaintext: patching file config.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_h2o/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_h2o/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/h2o/compile -j$(nproc) || make package/feeds/packages/h2o/compile V=s Compile.txt Applying ./patches/100-socket_disable_npn.patch using plaintext: patching file include/h2o/socket.h Applying ./patches/200-libh2o-evloop_wslay-link.patch using plaintext: patching file CMakeLists.txt Applying ./patches/300-picotls-chacha-detect.patch using plaintext: patching file deps/picotls/include/picotls/openssl.h Applying ./patches/400-backtrace-detection.patch using plaintext: patching file CMakeLists.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ksmbd/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ksmbd/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ldns/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ldns/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ldns/compile -j$(nproc) || make package/feeds/packages/ldns/compile V=s Compile.txt Applying ./patches/001-compile-for-darwin.patch using plaintext: patching file configure.ac Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file dnssec_verify.c patching file drill/drill.c patching file keys.c Applying ./patches/020-openssl-dsa.patch using plaintext: patching file dnssec.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libdbi-drivers/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libdbi-drivers/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libdbi-drivers/compile -j$(nproc) || make package/feeds/packages/libdbi-drivers/compile V=s Compile.txt Applying ./patches/001_libsqlite3_fix.patch using plaintext: patching file acinclude.m4 Applying ./patches/100-remove-date-to-fix-reproducible-builds.patch using plaintext: patching file drivers/db2/dbd_db2.c patching file drivers/firebird/dbd_firebird.c patching file drivers/freetds/dbd_freetds.c patching file drivers/ingres/dbd_ingres.c patching file drivers/msql/dbd_msql.c patching file drivers/mysql/dbd_mysql.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libmraa/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libmraa/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libmraa/compile -j$(nproc) || make package/feeds/packages/libmraa/compile V=s Compile.txt Applying ./patches/010-version.patch using plaintext: patching file CMakeLists.txt Applying ./patches/020-support_v12.patch using plaintext: patching file api/mraa/gpio.hpp Applying ./patches/030-gcc10.patch using plaintext: patching file include/version.h CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libnpupnp/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libnpupnp/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libnpupnp/compile -j$(nproc) || make package/feeds/packages/libnpupnp/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libreswan/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libreswan/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libreswan/compile -j$(nproc) || make package/feeds/packages/libreswan/compile V=s Compile.txt Applying ./patches/010-nanosleep.patch using plaintext: patching file programs/pluto/send.c Applying ./patches/020-limits.patch using plaintext: patching file programs/pluto/connections.c patching file programs/pluto/rcv_whack.c Applying ./patches/030-fix_musl_build.patch using plaintext: patching file include/fd.h Applying ./patches/040-disable_man.patch using plaintext: patching file mk/targets.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libupm/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libupm/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libupm/compile -j$(nproc) || make package/feeds/packages/libupm/compile V=s Compile.txt Applying ./patches/001-version.patch using plaintext: patching file CMakeLists.txt Applying ./patches/002-at42qt1070-id.patch using plaintext: patching file src/at42qt1070/at42qt1070.cxx Applying ./patches/003-link-atomic.patch using plaintext: patching file src/nmea_gps/CMakeLists.txt Applying ./patches/004-uint8_t.patch using plaintext: patching file src/bma250e/bma250e.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libupnpp/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libupnpp/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libupnpp/compile -j$(nproc) || make package/feeds/packages/libupnpp/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_lighttpd/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_lighttpd/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/lighttpd/compile -j$(nproc) || make package/feeds/packages/lighttpd/compile V=s Compile.txt Applying ./patches/010-meson-lua.patch using plaintext: patching file src/meson.build Applying ./patches/020-meson-zstd.patch using plaintext: patching file meson_options.txt Applying ./patches/030-101-upgrade-w-content-length.patch using plaintext: patching file src/http-header-glue.c Applying ./patches/040-mod_auth-close-http2-after-bad-pass.patch using plaintext: patching file src/connections.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_minidlna/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_minidlna/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/minidlna/compile -j$(nproc) || make package/feeds/packages/minidlna/compile V=s Compile.txt Applying ./patches/001-dont-build-po-files.patch using plaintext: patching file Makefile.am patching file configure.ac Applying ./patches/005-added-support-RMVB.patch using plaintext: patching file metadata.c patching file upnpglobalvars.h patching file utils.c Applying ./patches/020-wrap_container_definitions_into_a_structure.patch using plaintext: patching file containers.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mosh/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mosh/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mosh/compile -j$(nproc) || make package/feeds/packages/mosh/compile V=s Compile.txt Applying ./patches/020-std.patch using plaintext: patching file src/network/network.cc configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netwhere/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netwhere/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/netwhere/compile -j$(nproc) || make package/feeds/packages/netwhere/compile V=s Compile.txt Applying ./patches/010-libmicrohttpd.patch using plaintext: patching file webservice.hpp -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_perl-mail-spamassassin/ssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_perl-mail-spamassassin/ssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-mail-spamassassin/compile -j$(nproc) || make package/feeds/packages/perl-mail-spamassassin/compile V=s Compile.txt not installing man pages in man1; no man1 dir found at - line 275. What email address or URL should be used in the suspected-spam report text for users who want more information on your filter installation?</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-dio/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-dio/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-dio/compile -j$(nproc) || make package/feeds/packages/php7-pecl-dio/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:41: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/dio-0.2.0/.prepared_8dea7ca0e4398674898598ae050d73bb_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-krb5/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-krb5/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-krb5/compile -j$(nproc) || make package/feeds/packages/php7-pecl-krb5/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:46: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/krb5-1.1.4/.prepared_b9a064d22fcbfb46da0422d179436611_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-redis/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-redis/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-redis/compile -j$(nproc) || make package/feeds/packages/php7-pecl-redis/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:48: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/redis-5.3.2/.prepared_3da1b09de0ed085aa9f32b88103d5903_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php8/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php8/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php8/compile -j$(nproc) || make package/feeds/packages/php8/compile V=s Compile.txt Applying ./patches/0007-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0022-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0025-php-5.4.9-fixheader.patch using plaintext: patching file configure.ac Applying ./patches/0030-Remove-W3C-validation-icon-to-not-expose-the-reader-.patch using plaintext: patching file sapi/fpm/status.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_spoofer/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_spoofer/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/spoofer/compile -j$(nproc) || make package/feeds/packages/spoofer/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls, --enable-prober configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_syslog-ng/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_syslog-ng/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/syslog-ng/compile -j$(nproc) || make package/feeds/packages/syslog-ng/compile V=s Compile.txt configure: WARNING: you should use --build, --host, --target configure: loading site script /openwrt/include/site/mips checking whether make supports nested variables... yes checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_trojan/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_trojan/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/trojan/compile -j$(nproc) || make package/feeds/packages/trojan/compile V=s Compile.txt Applying ./patches/001-force-openssl-version.patch using plaintext: patching file CMakeLists.txt -- The CXX compiler identification is GNU 8.4.0 -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_upmpdcli/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_upmpdcli/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/upmpdcli/compile -j$(nproc) || make package/feeds/packages/upmpdcli/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_xmlrpc-c/internal/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_xmlrpc-c/internal/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xmlrpc-c/compile -j$(nproc) || make package/feeds/packages/xmlrpc-c/compile V=s Compile.txt Applying ./patches/010-nanosleep.patch using plaintext: patching file lib/libutil/sleep.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_rtpengine/no-transcode/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_rtpengine/no-transcode/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_rtpengine/transcode/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:45:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_rtpengine/transcode/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_ath10k-ct/smallbuffers/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_ath10k-ct/smallbuffers/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_lldpd/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_lldpd/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/lldpd/compile -j$(nproc) || make package/feeds/base/lldpd/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_mt76/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_mt76/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8188eu/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8188eu/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8192du/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8192du/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-mips_24kc_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8812au-ac/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8812au-ac/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8812au-ct/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8812au-ct/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-mips_24kc_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8821cu/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8821cu/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl88x2bu/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl88x2bu/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_forked-daapd/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_forked-daapd/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/forked-daapd/compile -j$(nproc) || make package/feeds/packages/forked-daapd/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_freeradius3/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_freeradius3/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/freeradius3/compile -j$(nproc) || make package/feeds/packages/freeradius3/compile V=s Compile.txt Applying ./patches/001-fix-cert-expiry.patch using plaintext: patching file raddb/certs/ca.cnf patching file raddb/certs/client.cnf patching file raddb/certs/server.cnf Applying ./patches/002-disable-session-cache-CVE-2017-9148.patch using plaintext: patching file src/main/tls.c Applying ./patches/003-freeradius-fix-error-for-expansion-of-macro.patch using plaintext: patching file src/include/threads.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mosdns/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mosdns/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mosdns/compile -j$(nproc) || make package/feeds/packages/mosdns/compile V=s Compile.txt Copying files from /openwrt/build_dir/target-mips_24kc_musl/mosdns-1.8.6 into /openwrt/build_dir/target-mips_24kc_musl/mosdns-1.8.6/.go_work/build/src/github.com/IrineSistiana/mosdns dispatcher/coremain/config.go dispatcher/coremain/run.go dispatcher/handler/config.go dispatcher/handler/config_test.go dispatcher/handler/context.go dispatcher/handler/context_test.go dispatcher/handler/error.go dispatcher/handler/interface.go dispatcher/handler/plugin_wrapper.go dispatcher/handler/register.go dispatcher/handler/register_test.go dispatcher/handler/test_utils.go dispatcher/mlog/logger.go dispatcher/pkg/arbitrary/arbitrary.go dispatcher/pkg/arbitrary/arbitrary_test.go dispatcher/pkg/cache/cache.go dispatcher/pkg/cache/mem_cache/mem_cache.go dispatcher/pkg/cache/mem_cache/mem_cache_test.go dispatcher/pkg/cache/redis_cache/redis_cache.go dispatcher/pkg/cache/redis_cache/redis_cache_test.go dispatcher/pkg/concurrent_limiter/client_limiter.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-psycopg2/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-psycopg2/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-psycopg2/compile -j$(nproc) || make package/feeds/packages/python-psycopg2/compile V=s Compile.txt running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/psycopg2 copying lib/_lru_cache.py -&amp;gt; build/lib.-3.9/psycopg2 copying lib/_range.py -&amp;gt; build/lib.-3.9/psycopg2 copying lib/extras.py -&amp;gt; build/lib.-3.9/psycopg2 copying lib/sql.py -&amp;gt; build/lib.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-ubus/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-ubus/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-ubus/compile -j$(nproc) || make package/feeds/packages/python-ubus/compile V=s Compile.txt WARNING: The wheel package is not available. ERROR: Exception: Traceback (most recent call last): File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.9/site-packages/pip/_internal/cli/base_command.py&amp;#34;, line 180, in _main status = self.run(options, args) File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.9/site-packages/pip/_internal/cli/req_command.py&amp;#34;, line 204, in wrapper return func(self, options, args) File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_sngrep/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:44:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_sngrep/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/sngrep/compile -j$(nproc) || make package/feeds/telephony/sngrep/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opendkim/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:43:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opendkim/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/opendkim/compile -j$(nproc) || make package/feeds/packages/opendkim/compile V=s Compile.txt Applying ./patches/010-openssl_1.1_compat.patch using plaintext: patching file configure.ac patching file opendkim/opendkim-crypto.c patching file libopendkim/dkim.c patching file opendkim/opendkim-testkey.c patching file opendkim/opendkim.c Applying ./patches/020-uclibc.patch using plaintext: patching file libopendkim/dkim-dns.c autoreconf: Entering directory `.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_perl-www-curl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:43:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_perl-www-curl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-www-curl/compile -j$(nproc) || make package/feeds/packages/perl-www-curl/compile V=s Compile.txt Applying ./patches/100-perl-www-curl_disable_curl-config_hack.patch using plaintext: patching file Makefile.PL Applying ./patches/101-skip-preprocessor-symbol.path using plaintext: patching file Makefile.PL Applying ./patches/200-fix_default_lflags.patch using plaintext: patching file Makefile.PL Applying ./patches/210-curl_7.66_compat.patch using plaintext: patching file Curl.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_addrwatch/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_addrwatch/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/addrwatch/compile -j$(nproc) || make package/feeds/packages/addrwatch/compile V=s Compile.txt Applying ./patches/002-fix-uclibc-sysconf.patch using plaintext: patching file src/addrwatch.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libulfius/gnutls/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libulfius/gnutls/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libulfius/compile -j$(nproc) || make package/feeds/packages/libulfius/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libulfius/nossl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libulfius/nossl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libulfius/compile -j$(nproc) || make package/feeds/packages/libulfius/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mariadb/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mariadb/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mariadb/compile -j$(nproc) || make package/feeds/packages/mariadb/compile V=s Compile.txt Applying ./patches/100-fix_hostname.patch using plaintext: patching file scripts/mysql_install_db.sh Applying ./patches/110-pcre.cmake.patch using plaintext: patching file cmake/pcre.cmake Applying ./patches/130-c11_atomics.patch using plaintext: patching file configure.cmake patching file mysys/CMakeLists.txt patching file sql/CMakeLists.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netifyd/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netifyd/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/netifyd/compile -j$(nproc) || make package/feeds/packages/netifyd/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force ${ACLOCAL_FLAGS} -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openvswitch/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openvswitch/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-libevent/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-libevent/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-libevent/compile -j$(nproc) || make package/feeds/packages/php7-pecl-libevent/compile V=s Compile.txt Applying ./patches/010-libevent2.patch using plaintext: patching file libevent.c bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:46: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/libevent-ce255e7e1e293030951fd68d5df06b2a4c077a89/.prepared_91d5b16df524b17e5af24e93c508e9df_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-mcrypt/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-mcrypt/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-mcrypt/compile -j$(nproc) || make package/feeds/packages/php7-pecl-mcrypt/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:44: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/mcrypt-1.0.4/.prepared_07099dbe649ab0612710f0a30488fcd7_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pulseaudio/avahi/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pulseaudio/avahi/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pulseaudio/compile -j$(nproc) || make package/feeds/packages/pulseaudio/compile V=s Compile.txt Applying ./patches/001-no_default_64mb_alloc.patch using plaintext: patching file src/pulsecore/memblock.c Applying ./patches/010-iconv.patch using plaintext: patching file meson.build Applying ./patches/020-doxygen.patch using plaintext: patching file meson.build The Meson build system Version: 0.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-yarl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-yarl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-yarl/compile -j$(nproc) || make package/feeds/packages/python-yarl/compile V=s Compile.txt ********************** * Accellerated build * ********************** running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/yarl copying yarl/_quoting_py.py -&amp;gt; build/lib.-3.9/yarl copying yarl/__init__.py -&amp;gt; build/lib.-3.9/yarl copying yarl/_quoting.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ruamel-yaml/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ruamel-yaml/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ruamel-yaml/compile -j$(nproc) || make package/feeds/packages/ruamel-yaml/compile V=s Compile.txt sys.argv [&amp;#39;setup.py&amp;#39;, &amp;#39;install&amp;#39;, &amp;#39;--prefix=/usr&amp;#39;, &amp;#39;--root=/openwrt/build_dir/target-mips_24kc_musl/pypi/ruamel.yaml-0.15.100/ipkg-install&amp;#39;, &amp;#39;--single-version-externally-managed&amp;#39;] test compiling test_ruamel_yaml running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/ruamel copying .ruamel/__init__.py -&amp;gt; build/lib.-3.9/ruamel creating build/lib.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_snort3/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_snort3/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/snort3/compile -j$(nproc) || make package/feeds/packages/snort3/compile V=s Compile.txt Applying ./patches/010-update-openssl.patch using plaintext: patching file src/network_inspectors/appid/appid_inspector.cc patching file src/utils/util.cc -- The CXX compiler identification is GNU 8.4.0 -- The C compiler identification is GNU 8.4.0 -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tor/basic/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tor/basic/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tor/compile -j$(nproc) || make package/feeds/packages/tor/compile V=s Compile.txt Applying ./patches/001-torrc.patch using plaintext: patching file src/config/torrc.sample.in autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_zabbix/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_zabbix/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/zabbix/compile -j$(nproc) || make package/feeds/packages/zabbix/compile V=s Compile.txt Applying ./patches/010-change-agentd-config.patch using plaintext: patching file conf/zabbix_agentd.conf Applying ./patches/110-reproducible-builds.patch using plaintext: patching file src/libs/zbxcommon/str.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-chan-dongle/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-chan-dongle/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-chan-sccp/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-chan-sccp/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-opus/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-opus/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>host-compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mariadb/host-compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:42:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mariadb/host-compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mariadb/host-compile -j$(nproc) || make package/feeds/packages/mariadb/host-compile V=s Compile.txt Applying ./patches/100-fix_hostname.patch using plaintext: patching file scripts/mysql_install_db.sh Applying ./patches/110-pcre.cmake.patch using plaintext: patching file cmake/pcre.cmake Applying ./patches/130-c11_atomics.patch using plaintext: patching file configure.cmake patching file mysys/CMakeLists.txt patching file sql/CMakeLists.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_adb/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_adb/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/adb/compile -j$(nproc) || make package/feeds/base/adb/compile V=s Compile.txt Applying ./patches/001-create_Makefile.patch using plaintext: patching file adb/Makefile Applying ./patches/003-fix-musl-build.patch using plaintext: patching file adb/usb_linux.c Applying ./patches/010-openssl-1.1.patch using plaintext: patching file adb/adb_auth_host.c Applying ./patches/020-cherry-picked-superspeed-fix.patch using plaintext: patching file adb/usb_linux.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_iperf3/ssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_iperf3/ssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/iperf3/compile -j$(nproc) || make package/feeds/packages/iperf3/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force configure.ac:27: error: Autoconf version 2.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_irssi/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_irssi/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/irssi/compile -j$(nproc) || make package/feeds/packages/irssi/compile V=s Compile.txt Applying ./patches/010-Fix-finding-OpenSSL-when-1.1-with-deprecated-APIs-di.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libuhttpd/openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libuhttpd/openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libuhttpd/compile -j$(nproc) || make package/feeds/packages/libuhttpd/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mailsend/ssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mailsend/ssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mailsend/compile -j$(nproc) || make package/feeds/packages/mailsend/compile V=s Compile.txt Applying ./patches/0001-OpenSSL-1.1-support-for-HMAC-api.patch using plaintext: patching file utils.c Applying ./patches/0002-Removed-API-deprecated-by-OpenSSL-1.1.0.patch using plaintext: patching file main.c patching file utils.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for mips-openwrt-linux-ranlib.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mwol/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mwol/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mwol/compile -j$(nproc) || make package/feeds/packages/mwol/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netstinky/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netstinky/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/netstinky/compile -j$(nproc) || make package/feeds/packages/netstinky/compile V=s Compile.txt Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file updates/ids_tls_update.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for mips-openwrt-linux-gcc... ccache_cc checking whether the C compiler works.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ngircd/ssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ngircd/ssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ngircd/compile -j$(nproc) || make package/feeds/packages/ngircd/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ngrokc/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ngrokc/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ngrokc/compile -j$(nproc) || make package/feeds/packages/ngrokc/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/ngrokc-1.54&amp;#39; ccache_cxx -fexceptions -DOPENSSL=1 -O2 -c -o sendmsg.o sendmsg.cpp In file included from sslbio.h:6, from global.h:7, from config.h:24, from sendmsg.cpp:1: opensslbio.h:5:9: fatal error: openssl/ssl.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nsd/ssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nsd/ssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nsd/compile -j$(nproc) || make package/feeds/packages/nsd/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls, --with-ipv6 configure: loading site script /openwrt/include/site/mips checking for mips-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openconnect/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openconnect/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openconnect/compile -j$(nproc) || make package/feeds/packages/openconnect/compile V=s Compile.txt configure: loading site script /openwrt/include/site/mips checking pkg-config is at least version 0.9.0... yes checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking whether to enable maintainer-specific portions of Makefiles.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openfortivpn/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openfortivpn/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openfortivpn/compile -j$(nproc) || make package/feeds/packages/openfortivpn/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_oscam/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_oscam/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/oscam/compile -j$(nproc) || make package/feeds/packages/oscam/compile V=s Compile.txt [WARN] Unknown parameter: --target=mips-openwrt-linux [WARN] Unknown parameter: --host=mips-openwrt-linux [WARN] Unknown parameter: --build=x86_64-pc-linux-gnu [WARN] Unknown parameter: --program-prefix= [WARN] Unknown parameter: --program-suffix= [WARN] Unknown parameter: --prefix=/usr [WARN] Unknown parameter: --exec-prefix=/usr [WARN] Unknown parameter: --bindir=/usr/bin [WARN] Unknown parameter: --sbindir=/usr/sbin [WARN] Unknown parameter: --libexecdir=/usr/lib [WARN] Unknown parameter: --sysconfdir=/etc [WARN] Unknown parameter: --datadir=/usr/share [WARN] Unknown parameter: --localstatedir=/var [WARN] Unknown parameter: --mandir=/usr/man [WARN] Unknown parameter: --infodir=/usr/info [WARN] Unknown parameter: --disable-nls Disable WITH_SSL Disable CARDREADER_SC8IN1 Disable CARDREADER_SMARGO Enable TOUCH Enable CS_ANTICASC Enable CW_CYCLE_CHECK Enable CLOCKFIX Enable MODULE_CAMD33 Enable MODULE_RADEGAST Enable MODULE_SERIAL Enable MODULE_CONSTCW Enable MODULE_PANDORA Enable MODULE_GHTTP Enable CARDREADER_SC8IN1 Enable CARDREADER_MP35 Enable CARDREADER_SMARGO Enable CARDREADER_DRECAS make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/oscam-2020-12-12-aafda4bc&amp;#39; fatal: not a git repository (or any parent up to mount point /) Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_quassel-irssi/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_quassel-irssi/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/quassel-irssi/compile -j$(nproc) || make package/feeds/packages/quassel-irssi/compile V=s Compile.txt Applying ./patches/001-respect-cflags.patch using plaintext: patching file core/Makefile Applying ./patches/002-use-cc-var.patch using plaintext: patching file core/Makefile Applying ./patches/003-use-pkgconfig-ldflags-quasselc.patch using plaintext: patching file core/Makefile Applying ./patches/010-Get-compatible-with-potential-irssi-abi-8-and-drop-p.patch using plaintext: patching file core/Makefile patching file core/quassel-net.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rtty/openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rtty/openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/rtty/compile -j$(nproc) || make package/feeds/packages/rtty/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_smartdns/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_smartdns/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/smartdns/compile -j$(nproc) || make package/feeds/packages/smartdns/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/smartdns-1.2021.24/src&amp;#39; ccache_cc -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/smartdns-1.2021.24=smartdns-1.2021.24 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -I/openwrt/staging_dir/toolchain-mips_24kc_gcc-8.4.0_musl/usr/include -I/openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_sstp-client/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_sstp-client/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/sstp-client/compile -j$(nproc) || make package/feeds/packages/sstp-client/compile V=s Compile.txt Applying ./patches/100-musl-compat.patch using plaintext: patching file include/net/ppp_defs.h patching file src/libsstp-log/sstp-log-syslog.c patching file src/libsstp-log/sstp-log-std.c Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file src/sstp-client.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking whether make supports nested variables.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_vsftpd/tls/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_vsftpd/tls/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/vsftpd/compile -j$(nproc) || make package/feeds/packages/vsftpd/compile V=s Compile.txt Applying ./patches/001-destdir.patch using plaintext: patching file Makefile Applying ./patches/002-find_libs.patch using plaintext: patching file Makefile Applying ./patches/003-chroot.patch using plaintext: patching file tunables.c Applying ./patches/004-disable-capabilities.patch using plaintext: patching file sysdeputil.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_baresip/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_baresip/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/baresip/compile -j$(nproc) || make package/feeds/telephony/baresip/compile V=s Compile.txt Applying ./patches/002-fix-rem-include.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/baresip-1.0.0&amp;#39; CC [M] build-mips/modules/account/account.o CC [M] build-mips/modules/auloop/auloop.o CC [M] build-mips/modules/b2bua/b2bua.o CC [M] build-mips/modules/contact/contact.o CC [M] build-mips/modules/ctrl_tcp/ctrl_tcp.o CC [M] build-mips/modules/ctrl_tcp/tcp_netstring.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_restund/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:41:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_restund/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/restund/compile -j$(nproc) || make package/feeds/telephony/restund/compile V=s Compile.txt Applying ./patches/100-reproducible-builds.patch using plaintext: patching file modules/status/status.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/restund-0.4.12&amp;#39; CC [M] build-mips/modules/binding/binding.o CC [M] build-mips/modules/auth/auth.o CC [M] build-mips/modules/turn/alloc.o CC [M] build-mips/modules/turn/chan.o CC [M] build-mips/modules/turn/perm.o CC [M] build-mips/modules/turn/turn.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libtorrent/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:39:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libtorrent/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libtorrent/compile -j$(nproc) || make package/feeds/packages/libtorrent/compile V=s Compile.txt + curl -f --connect-timeout 20 --retry 5 --location --insecure https://codeload.github.com/rakshasa/libtorrent/tar.gz/v0.13.8?/libtorrent-0.13.8.tar.gz % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 349k 0 349k 0 0 1200k 0 --:--:-- --:--:-- --:--:-- 1200k Applying .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rtorrent/norpc/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:39:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rtorrent/norpc/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/rtorrent/compile -j$(nproc) || make package/feeds/packages/rtorrent/compile V=s Compile.txt Applying ./patches/120-fix-ncurses.patch using plaintext: patching file src/display/canvas.h Applying ./patches/130-usleep.patch using plaintext: patching file src/thread_base.cc autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rtorrent/rpc/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:39:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rtorrent/rpc/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/rtorrent/compile -j$(nproc) || make package/feeds/packages/rtorrent/compile V=s Compile.txt Applying ./patches/120-fix-ncurses.patch using plaintext: patching file src/display/canvas.h Applying ./patches/130-usleep.patch using plaintext: patching file src/thread_base.cc autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ovn/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:38:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ovn/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_routing_hnetd/openssl/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:38:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_routing_hnetd/openssl/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/hnetd/compile -j$(nproc) || make package/feeds/routing/hnetd/compile V=s Compile.txt Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file src/dtls.c Applying ./patches/020-unused.patch using plaintext: patching file src/hnetd.h CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_kea/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:38:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_kea/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/kea/compile -j$(nproc) || make package/feeds/packages/kea/compile V=s Compile.txt Applying ./patches/001-fix-cross-compile.patch using plaintext: patching file configure.ac Applying ./patches/002-fix-host-compile.patch using plaintext: patching file m4macros/ax_crypto.m4 Applying ./patches/003-no-test-compile.patch using plaintext: patching file src/bin/admin/Makefile.am patching file src/bin/agent/Makefile.am patching file src/bin/d2/Makefile.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_freeswitch-mod-bcg729/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:38:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_freeswitch-mod-bcg729/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-mips_24kc_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_freeswitch/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:38:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_freeswitch/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_sofia-sip/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:38:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_sofia-sip/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/sofia-sip/compile -j$(nproc) || make package/feeds/telephony/sofia-sip/compile V=s Compile.txt Applying ./patches/01-disable-libcheck.patch using plaintext: patching file configure.ac Applying ./patches/02-NUA_handles-mem-leak-fix.patch using plaintext: patching file libsofia-sip-ua/nua/nua.c patching file libsofia-sip-ua/nua/nua_common.c patching file libsofia-sip-ua/nua/nua_stack.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_button-hotplug/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_button-hotplug/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/button-hotplug/button-hotplug.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/button-hotplug/button-hotplug.mod.o LD [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/button-hotplug/button-hotplug.ko make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; Package kmod-button-hotplug is missing dependencies for the following libraries: input-core.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_r8152/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_r8152/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/r8152/compile -j$(nproc) || make package/feeds/base/r8152/compile V=s Compile.txt Applying ./patches/100-add-LED-configuration-from-OF.patch using plaintext: patching file r8152.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/realtek-r8152-linux-2.15&amp;#39; /openwrt/staging_dir/host/bin/find: &amp;#39;/openwrt/kernel/drivers/net/usb_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39;: No such file or directory /bin/sh: 1: lsmod: not found make -C /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124 M=/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/realtek-r8152-linux-2.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bfdd/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bfdd/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/bfdd/compile -j$(nproc) || make package/feeds/packages/bfdd/compile V=s Compile.txt Applying ./patches/002-ipv6_musl_fix.patch using plaintext: patching file bfd_packet.c Applying ./patches/020-gcc10.patch using plaintext: patching file bfd.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/bfdd-c54534beb524afc3972039f57b56ec65332b43f7&amp;#39; ccache_cc -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/bfdd-c54534beb524afc3972039f57b56ec65332b43f7=bfdd-c54534beb524afc3972039f57b56ec65332b43f7 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -I/openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_davfs2/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_davfs2/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/davfs2/compile -j$(nproc) || make package/feeds/packages/davfs2/compile V=s Compile.txt Applying ./patches/010-main_code_fix.patch using plaintext: patching file src/webdav.c Applying ./patches/030-realpath.patch using plaintext: patching file src/mount_davfs.c patching file src/umount_davfs.c Applying ./patches/040-sys-select.patch using plaintext: patching file src/dav_fuse.c Applying ./patches/050-sys-types.patch using plaintext: patching file src/kernel_interface.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gnunet/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gnunet/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gnunet/compile -j$(nproc) || make package/feeds/packages/gnunet/compile V=s Compile.txt Applying ./patches/100-fix-opus-and-pulse-library-detection.patch using plaintext: patching file configure.ac Hunk #1 succeeded at 837 (offset 24 lines). Hunk #2 succeeded at 882 (offset 24 lines). Copying file ABOUT-NLS Copying file build-aux/config.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gst1-libav/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gst1-libav/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gst1-libav/compile -j$(nproc) || make package/feeds/packages/gst1-libav/compile V=s Compile.txt Applying ./patches/010-distutils.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-mips_24kc_musl/gst-libav-1.18.4 Build dir: /openwrt/build_dir/target-mips_24kc_musl/gst-libav-1.18.4/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gst1-plugins-bad/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gst1-plugins-bad/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gst1-plugins-bad/compile -j$(nproc) || make package/feeds/packages/gst1-plugins-bad/compile V=s Compile.txt Makefile:425: WARNING: skipping gstreamer1-plugins-bad -- package has no install section Applying ./patches/010-distutils.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-mips_24kc_musl/gst-plugins-bad-1.18.4 Build dir: /openwrt/build_dir/target-mips_24kc_musl/gst-plugins-bad-1.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_inadyn/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_inadyn/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/inadyn/compile -j$(nproc) || make package/feeds/packages/inadyn/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libevhtp/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libevhtp/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libevhtp/compile -j$(nproc) || make package/feeds/packages/libevhtp/compile V=s Compile.txt + curl -f --connect-timeout 20 --retry 5 --location --insecure https://codeload.github.com/criticalstack/libevhtp/tar.gz/1.2.18?/libevhtp-1.2.18.tar.gz % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 86068 0 86068 0 0 306k 0 --:--:-- --:--:-- --:--:-- 305k 100 203k 0 203k 0 0 585k 0 --:--:-- --:--:-- --:--:-- 584k Applying .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libtorrent-rasterbar/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libtorrent-rasterbar/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libtorrent-rasterbar/compile -j$(nproc) || make package/feeds/packages/libtorrent-rasterbar/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_memcached/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_memcached/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/memcached/compile -j$(nproc) || make package/feeds/packages/memcached/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opensc/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opensc/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/opensc/compile -j$(nproc) || make package/feeds/packages/opensc/compile V=s Compile.txt Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file src/libopensc/sc-ossl-compat.h autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pcap-dnsproxy/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pcap-dnsproxy/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pdns/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pdns/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pdns/compile -j$(nproc) || make package/feeds/packages/pdns/compile V=s Compile.txt Applying ./patches/100-pdns-disable-pdns.conf-dist.patch using plaintext: patching file pdns/Makefile.am autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-http/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-http/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-http/compile -j$(nproc) || make package/feeds/packages/php7-pecl-http/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:67: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/pecl_http-3.2.3/.prepared_4fbf94879e40a46e16ba3dc3ba39fa7b_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-propro/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-propro/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-propro/compile -j$(nproc) || make package/feeds/packages/php7-pecl-propro/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:50: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/propro-2.1.0/.prepared_925b674345e12bff2513cff87a8617ff_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-raphf/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-raphf/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-raphf/compile -j$(nproc) || make package/feeds/packages/php7-pecl-raphf/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:50: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/raphf-2.0.1/.prepared_b83b9f9948aa9ae5855e28ed1a687582_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pillow/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pillow/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pillow/compile -j$(nproc) || make package/feeds/packages/pillow/compile V=s Compile.txt running build_ext building &amp;#39;PIL._imaging&amp;#39; extension creating build creating build/temp.-3.9 creating build/temp.-3.9/src creating build/temp.-3.9/src/libImaging ccache_cc -Wno-unused-result -Wsign-compare -DNDEBUG -g -O3 -Wall -O2 -I/openwrt/staging_dir/host/include -I/openwrt/staging_dir/hostpkg/include -I/openwrt/staging_dir/target-mips_24kc_musl/host/include -O2 -I/openwrt/staging_dir/host/include -I/openwrt/staging_dir/hostpkg/include -I/openwrt/staging_dir/target-mips_24kc_musl/host/include -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/pypi/Pillow-8.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-lxml/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-lxml/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-lxml/compile -j$(nproc) || make package/feeds/packages/python-lxml/compile V=s Compile.txt Building lxml version 4.6.3. Building without Cython. Building against libxml2 2.9.12 and libxslt 1.1.34 Building against libxml2/libxslt in the following directory: /openwrt/staging_dir/target-mips_24kc_musl/usr/lib running install running build running build_py creating build creating build/lib.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_qbittorrent-enhanced-edition/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_qbittorrent-enhanced-edition/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt Applying ./patches/001-remove-host-include-dir.patch using plaintext: patching file conf.pri.in configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for mips-openwrt-linux-gcc... ccache_cc checking whether the C compiler works.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_qt5/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_qt5/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qt5/compile -j$(nproc) || make package/feeds/packages/qt5/compile V=s Compile.txt + cd qtbase + /openwrt/build_dir/target-mips_24kc_musl/qt-everywhere-src-5.15.2/qtbase/configure -top-level -prefix /usr -extprefix /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.4.0_musl -sysroot /openwrt/staging_dir/target-mips_24kc_musl -plugindir /usr/lib/Qt/plugins -R /usr/lib -I /openwrt/staging_dir/target-mips_24kc_musl/usr/include -L /openwrt/staging_dir/target-mips_24kc_musl/usr/lib -xplatform linux-openwrt-g++ -opensource -confirm-license -system-doubleconversion -system-pcre -system-zlib -openssl-runtime -sql-sqlite -sqlite -no-cups -no-freetype -no-harfbuzz -no-gtk -no-opengl -no-opengles3 -no-angle -no-openvg -no-dbus -no-directfb -no-eglfs -no-feature-getentropy -no-iconv -no-kms -no-pch -no-libudev -no-mtdev -no-tslib -no-libpng -no-libjpeg -no-sql-db2 -no-sql-ibase -no-sql-mysql -no-sql-oci -no-sql-odbc -no-sql-psql -no-sql-sqlite2 -no-sql-tds -no-strip -no-xcb -no-gui -no-widgets -no-glib -make libs -nomake examples -nomake tests -nomake tools -skip 3d -skip activeqt -skip charts -skip connectivity -skip datavis3d -skip declarative -skip doc -skip gamepad -skip imageformats -skip location -skip networkauth -skip multimedia -skip purchasing -skip remoteobjects -skip script -skip sensors -skip serialbus -skip serialport -skip speech -skip svg -skip wayland -skip webengine -skip websockets -skip webchannel -skip xmlpatterns -v Creating qmake.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ratechecker/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ratechecker/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ratechecker/compile -j$(nproc) || make package/feeds/packages/ratechecker/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_redsocks/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_redsocks/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/redsocks/compile -j$(nproc) || make package/feeds/packages/redsocks/compile V=s Compile.txt Applying ./patches/0006-fix_default_config_location.patch using plaintext: patching file main.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/redsocks-release-0.5&amp;#39; mkdir -p gen touch gen/.build rm -f gen/version.c.tmp echo &amp;#39;/* this file is auto-generated during build */&amp;#39; &amp;gt; gen/version.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_redsocks2/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_redsocks2/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/redsocks2/compile -j$(nproc) || make package/feeds/packages/redsocks2/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/redsocks2-0.67&amp;#39; Compile with OpenSSL by default. To compile with PolarSSL, run &amp;#39;make USE_CRYPTO_POLARSSL=true&amp;#39; instead. mkdir -p gen touch gen/.build rm -f -f gen/version.c.tmp echo &amp;#39;/* this file is auto-generated during build */&amp;#39; &amp;gt; gen/version.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_seafile-ccnet/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_seafile-ccnet/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-ccnet/compile -j$(nproc) || make package/feeds/packages/seafile-ccnet/compile V=s Compile.txt Applying ./patches/010-Makefile.patch using plaintext: patching file lib/Makefile.am Applying ./patches/011-no-python-compile.patch using plaintext: patching file python/ccnet/Makefile.am Applying ./patches/020-Remove-API-deprecated-in-openssl-1.1.patch using plaintext: patching file lib/rsa.c patching file net/common/processors/keepalive-proc.c patching file net/common/processors/keepalive2-proc.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_seafile-seahub/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_seafile-seahub/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-seahub/compile -j$(nproc) || make package/feeds/packages/seafile-seahub/compile V=s Compile.txt Applying ./patches/020-Makefile-fixes.patch using plaintext: patching file Makefile Applying ./patches/030-uci-conf.patch using plaintext: patching file seahub/settings.py Applying ./patches/040-manage-shebang.patch using plaintext: patching file manage.py Collecting Django==2.2.24 Downloading Django-2.2.24.tar.gz (9.2 MB) Collecting pytz==2021.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_seafile-server/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_seafile-server/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-server/compile -j$(nproc) || make package/feeds/packages/seafile-server/compile V=s Compile.txt Applying ./patches/010-configure-libevent_openssl.patch using plaintext: patching file configure.ac Applying ./patches/011-configure-liconv.patch using plaintext: patching file configure.ac Applying ./patches/012-automake-no-python-compile.patch using plaintext: patching file python/seafile/Makefile.am patching file python/seaserv/Makefile.am Applying ./patches/020-installpath.patch using plaintext: patching file controller/seafile-controller.</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tmux/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tmux/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tmux/compile -j$(nproc) || make package/feeds/packages/tmux/compile V=s Compile.txt Applying ./patches/100-add-crosscompiling-fallbacks.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.40</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_kamailio/compile.40/</link>
      <pubDate>Tue, 22 Jun 2021 10:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_kamailio/compile.40/</guid>
      <description>build number: 40
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/kamailio/compile -j$(nproc) || make package/feeds/telephony/kamailio/compile V=s Compile.txt Applying ./patches/050-fix-kamailio-utils.patch using plaintext: patching file utils/kamctl/kamctlrc Applying ./patches/120-libevent-libs.patch using plaintext: patching file src/modules/janssonrpcc/netstring.h Applying ./patches/130-change-snmp-mibs-path.patch using plaintext: patching file src/modules/snmpstats/Makefile Applying ./patches/140-redis_use_pkg-config.patch using plaintext: patching file src/modules/cnxcc/Makefile patching file src/modules/db_redis/Makefile patching file src/modules/ndb_redis/Makefile patching file src/modules/topos_redis/Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_fullconenat/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:33:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_fullconenat/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_ksmbd/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:33:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_ksmbd/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_mosdns/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:31:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_mosdns/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mosdns/compile -j$(nproc) || make package/feeds/packages/mosdns/compile V=s Compile.txt Copying files from /openwrt/build_dir/target-aarch64_generic_musl/mosdns-1.8.6 into /openwrt/build_dir/target-aarch64_generic_musl/mosdns-1.8.6/.go_work/build/src/github.com/IrineSistiana/mosdns dispatcher/coremain/config.go dispatcher/coremain/run.go dispatcher/handler/config.go dispatcher/handler/config_test.go dispatcher/handler/context.go dispatcher/handler/context_test.go dispatcher/handler/error.go dispatcher/handler/interface.go dispatcher/handler/plugin_wrapper.go dispatcher/handler/register.go dispatcher/handler/register_test.go dispatcher/handler/test_utils.go dispatcher/mlog/logger.go dispatcher/pkg/arbitrary/arbitrary.go dispatcher/pkg/arbitrary/arbitrary_test.go dispatcher/pkg/cache/cache.go dispatcher/pkg/cache/mem_cache/mem_cache.go dispatcher/pkg/cache/mem_cache/mem_cache_test.go dispatcher/pkg/cache/redis_cache/redis_cache.go dispatcher/pkg/cache/redis_cache/redis_cache_test.go dispatcher/pkg/concurrent_limiter/client_limiter.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_pcap-dnsproxy/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:31:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_pcap-dnsproxy/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_openvswitch/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:30:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_openvswitch/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_ovn/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:30:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_ovn/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_shairport-sync/mbedtls/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:30:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_shairport-sync/mbedtls/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_shairport-sync/mini/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:30:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_shairport-sync/mini/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_shairport-sync/openssl/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:30:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_shairport-sync/openssl/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_rtpengine/no-transcode/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:30:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_rtpengine/no-transcode/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_rtpengine/transcode/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:30:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_rtpengine/transcode/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_fast-classifier/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:28:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_fast-classifier/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/fast-classifier/fast-classifier.o /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_shortcut-fe/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:28:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_shortcut-fe/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_jool/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:28:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_jool/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_ath10k-ct/regular/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:25:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_ath10k-ct/regular/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_mac80211/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:25:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_mac80211/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_elektra/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:25:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_elektra/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-aarch64_generic_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_ffmpeg/custom/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:25:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_ffmpeg/custom/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-aarch64_generic_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/aarch64_generic/packages/ffmpeg-custom_4.3.2-1_aarch64_generic.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_seafile-seahub/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:24:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_seafile-seahub/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-seahub/compile -j$(nproc) || make package/feeds/packages/seafile-seahub/compile V=s Compile.txt Applying ./patches/020-Makefile-fixes.patch using plaintext: patching file Makefile Applying ./patches/030-uci-conf.patch using plaintext: patching file seahub/settings.py Applying ./patches/040-manage-shebang.patch using plaintext: patching file manage.py Collecting Django==2.2.24 Downloading Django-2.2.24.tar.gz (9.2 MB) Collecting pytz==2021.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_coova-chilli/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:23:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_coova-chilli/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_xtables-addons/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:23:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_xtables-addons/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_dahdi-linux/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:23:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_dahdi-linux/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_dahdi-tools/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:23:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_dahdi-tools/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_libpri/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:23:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_libpri/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_generic_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -mcpu=generic -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-aarch64_generic_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_gsmlib/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:20:42 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_gsmlib/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_ath10k-ct/smallbuffers/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:18:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_ath10k-ct/smallbuffers/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_mt76/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:18:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_mt76/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8188eu/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:18:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8188eu/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8192du/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:18:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8192du/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_generic_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8812au-ac/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:18:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8812au-ac/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8812au-ct/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:18:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8812au-ct/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_generic_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8821cu/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:18:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8821cu/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl88x2bu/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:18:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl88x2bu/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_routing_batman-adv/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:18:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_routing_batman-adv/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_node-ejdb2_node/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:17:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_node-ejdb2_node/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.39</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_node-ffi-napi/compile.39/</link>
      <pubDate>Mon, 21 Jun 2021 19:17:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_node-ffi-napi/compile.39/</guid>
      <description>build number: 39
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_base_fullconenat/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:15:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_base_fullconenat/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_mosdns/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:13:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_mosdns/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mosdns/compile -j$(nproc) || make package/feeds/packages/mosdns/compile V=s Compile.txt Copying files from /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/mosdns-1.8.6 into /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/mosdns-1.8.6/.go_work/build/src/github.com/IrineSistiana/mosdns dispatcher/coremain/config.go dispatcher/coremain/run.go dispatcher/handler/config.go dispatcher/handler/config_test.go dispatcher/handler/context.go dispatcher/handler/context_test.go dispatcher/handler/error.go dispatcher/handler/interface.go dispatcher/handler/plugin_wrapper.go dispatcher/handler/register.go dispatcher/handler/register_test.go dispatcher/handler/test_utils.go dispatcher/mlog/logger.go dispatcher/pkg/arbitrary/arbitrary.go dispatcher/pkg/arbitrary/arbitrary_test.go dispatcher/pkg/cache/cache.go dispatcher/pkg/cache/mem_cache/mem_cache.go dispatcher/pkg/cache/mem_cache/mem_cache_test.go dispatcher/pkg/cache/redis_cache/redis_cache.go dispatcher/pkg/cache/redis_cache/redis_cache_test.go dispatcher/pkg/concurrent_limiter/client_limiter.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_pcap-dnsproxy/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:13:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_pcap-dnsproxy/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_dahdi-linux/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:13:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_dahdi-linux/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_yate/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:13:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_yate/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-upstream-crash-fix-r6470.patch using plaintext: patching file modules/ysipchan.cpp Applying ./patches/120-increase-sip-message-size.patch using plaintext: patching file conf.d/ysipchan.conf.sample Applying ./patches/130-fix-ilbc-flags.patch using plaintext: patching file libs/ilbc/Makefile.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_base_r8125/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:12:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_base_r8125/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/r8125/compile -j$(nproc) || make package/feeds/base/r8125/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/r8125-9.005.06&amp;#39; /openwrt/staging_dir/host/bin/find: &amp;#39;/lib/modules/5.8.0-1033-azure/kernel/drivers/net/ethernet&amp;#39;: No such file or directory /openwrt/staging_dir/host/bin/find: &amp;#39;/lib/modules/5.8.0-1033-azure/kernel/drivers/net&amp;#39;: No such file or directory make -C /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/linux-5.4.124 M=/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/r8125-9.005.06 modules make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/linux-5.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_base_r8168/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:12:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_base_r8168/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/r8168/compile -j$(nproc) || make package/feeds/base/r8168/compile V=s Compile.txt Applying ./patches/001-r8168-add-LED-configuration-from-OF.patch using plaintext: patching file src/r8168_n.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/r8168-8.048.03/src&amp;#39; /openwrt/staging_dir/host/bin/find: &amp;#39;/lib/modules/5.8.0-1033-azure/kernel/drivers/net/ethernet&amp;#39;: No such file or directory /openwrt/staging_dir/host/bin/find: &amp;#39;/lib/modules/5.8.0-1033-azure/kernel/drivers/net&amp;#39;: No such file or directory make -C /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/linux-5.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_openvswitch/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:12:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_openvswitch/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_ovn/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:12:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_ovn/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_shairport-sync/mbedtls/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:12:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_shairport-sync/mbedtls/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_shairport-sync/mini/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:12:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_shairport-sync/mini/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_shairport-sync/openssl/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:12:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_shairport-sync/openssl/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_rtpengine/no-transcode/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:12:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_rtpengine/no-transcode/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_rtpengine/transcode/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:12:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_rtpengine/transcode/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_base_fast-classifier/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:09:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_base_fast-classifier/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/fast-classifier/fast-classifier.o /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_base_shortcut-fe/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:09:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_base_shortcut-fe/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-sunxi_cortexa7/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_jool/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:09:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_jool/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/arm checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for arm-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_base_mac80211/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:07:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_base_mac80211/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_elektra/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:07:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_elektra/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-arm_cortex-a7+neon-vfpv4_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_ffmpeg/custom/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:07:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_ffmpeg/custom/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/arm_cortex-a7_neon-vfpv4/packages/ffmpeg-custom_4.3.2-1_arm_cortex-a7_neon-vfpv4.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_seafile-seahub/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:05:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_seafile-seahub/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-seahub/compile -j$(nproc) || make package/feeds/packages/seafile-seahub/compile V=s Compile.txt Applying ./patches/020-Makefile-fixes.patch using plaintext: patching file Makefile Applying ./patches/030-uci-conf.patch using plaintext: patching file seahub/settings.py Applying ./patches/040-manage-shebang.patch using plaintext: patching file manage.py Collecting Django==2.2.24 Downloading Django-2.2.24.tar.gz (9.2 MB) Collecting pytz==2021.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_coova-chilli/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:04:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_coova-chilli/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_xtables-addons/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:04:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_xtables-addons/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_dahdi-tools/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:04:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_dahdi-tools/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_libpri/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:04:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_libpri/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -mfloat-abi=hard -fmacro-prefix-map=/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_base_hostapd/wpad-full-internal/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:02:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_base_hostapd/wpad-full-internal/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Applying ./patches/001-wolfssl-init-RNG-with-ECC-key.patch using plaintext: patching file src/crypto/crypto_wolfssl.c Applying ./patches/010-mesh-Allow-DFS-channels-to-be-selected-if-dfs-is-ena.patch using plaintext: patching file wpa_supplicant/wpa_supplicant.c Applying ./patches/011-mesh-use-deterministic-channel-on-channel-switch.patch using plaintext: patching file src/ap/dfs.c patching file src/drivers/driver_nl80211.c Applying ./patches/020-mesh-make-forwarding-configurable.patch using plaintext: patching file src/ap/ap_config.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_gsmlib/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:02:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_gsmlib/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_freeswitch-mod-bcg729/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:00:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_freeswitch-mod-bcg729/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_freeswitch/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 06:00:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_freeswitch/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_asterisk-chan-dongle/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 05:59:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_asterisk-chan-dongle/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_asterisk-chan-sccp/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 05:59:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_asterisk-chan-sccp/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_asterisk-g72x/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 05:59:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_asterisk-g72x/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_asterisk-opus/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 05:59:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_asterisk-opus/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -mfloat-abi=hard -fmacro-prefix-map=/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-arm_cortex-a7+neon-vfpv4_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_asterisk/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 05:59:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_telephony_asterisk/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_routing_batman-adv/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 05:59:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_routing_batman-adv/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_node-ejdb2_node/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 05:58:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_node-ejdb2_node/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.38</title>
      <link>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_node-ffi-napi/compile.38/</link>
      <pubDate>Mon, 21 Jun 2021 05:58:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/sunxi/cortexa7/package_feeds_packages_node-ffi-napi/compile.38/</guid>
      <description>build number: 38
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_ath10k-ct/regular/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_ath10k-ct/regular/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_cryptodev-linux/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_cryptodev-linux/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/cryptodev-linux/compile -j$(nproc) || make package/feeds/base/cryptodev-linux/compile V=s Compile.txt Applying ./patches/010-fix-build-for-kernel-v5.9-rc1.patch using plaintext: patching file zc.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/cryptodev-linux-cryptodev-linux-1.11&amp;#39; make -C /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124 M=/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/cryptodev-linux-cryptodev-linux-1.11 ARCH=mips CROSS_COMPILE=mips-openwrt-linux-musl- modules make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/cryptodev-linux-cryptodev-linux-1.11/ioctl.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/cryptodev-linux-cryptodev-linux-1.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_fullconenat/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_fullconenat/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_libevent2/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_libevent2/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/libevent2/compile -j$(nproc) || make package/feeds/base/libevent2/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_mac80211/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_mac80211/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/openssl/compile -j$(nproc) || make package/feeds/base/openssl/compile V=s Compile.txt Applying ./patches/100-Configure-afalg-support.patch using plaintext: patching file Configure Applying ./patches/110-openwrt_targets.patch using plaintext: patching file Configurations/25-openwrt.conf Applying ./patches/120-strip-cflags-from-binary.patch using plaintext: patching file crypto/build.info Applying ./patches/130-dont-build-tests-fuzz.patch using plaintext: patching file Configure Applying .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bcrypt/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bcrypt/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/bcrypt/compile -j$(nproc) || make package/feeds/packages/bcrypt/compile V=s Compile.txt Requirement already satisfied: cffi==1.14.5 in /openwrt/staging_dir/hostpkg/lib/python3.9/site-packages (from -r ../host-pip-requirements/cffi.txt (line 1)) (1.14.5) Requirement already satisfied: pycparser==2.20 in /openwrt/staging_dir/hostpkg/lib/python3.9/site-packages (from -r ../host-pip-requirements/cffi.txt (line 2)) (2.20) running install running build running build_py creating build creating build/lib.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bind/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bind/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/bind/compile -j$(nproc) || make package/feeds/packages/bind/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force fatal: not a git repository (or any parent up to mount point /) Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_boinc/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_boinc/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/boinc/compile -j$(nproc) || make package/feeds/packages/boinc/compile V=s Compile.txt Applying ./patches/001-avoidExtraDependencies using plaintext: patching file configure.ac Applying ./patches/002-hosttypeRespected using plaintext: patching file client/cs_platforms.cpp autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_boost/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_boost/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/boost/compile -j$(nproc) || make package/feeds/packages/boost/compile V=s Compile.txt Selected Boost API o32 for architecture mips and cpu type &amp;#34;24kc&amp;#34; Applying ./patches/010-mips64-fiber.patch using plaintext: patching file boost/fiber/detail/cpu_relax.hpp Applying ./patches/020-regex.patch using plaintext: patching file boost/regex/v5/mem_block_cache.hpp Performing configuration checks - default address-model : 32-bit [1] - default architecture : mips1 [1] - C++11 mutex : yes [2] - lockfree boost::atomic_flag : yes [2] - has stat::st_mtim : yes [2] - has stat::st_mtimensec : no [2] - has stat::st_mtimespec : no [2] - has stat::st_birthtim : no [2] - has stat::st_birthtimensec : no [2] - has stat::st_birthtimespec : no [2] - has statx : no [2] - has statx syscall : yes [2] - cxx11_auto_declarations : yes [2] - cxx11_constexpr : yes [2] - cxx11_defaulted_functions : yes [2] - cxx11_final : yes [2] - cxx11_hdr_mutex : yes [2] - cxx11_hdr_tuple : yes [2] - cxx11_lambdas : yes [2] - cxx11_noexcept : yes [2] - cxx11_nullptr : yes [2] - cxx11_rvalue_references : yes [2] - cxx11_template_aliases : yes [2] - cxx11_thread_local : yes [2] - cxx11_variadic_templates : yes [2] - cxx11_auto_declarations : yes [3] - cxx11_constexpr : yes [3] - cxx11_defaulted_functions : yes [3] - cxx11_final : yes [3] - cxx11_hdr_mutex : yes [3] - cxx11_hdr_tuple : yes [3] - cxx11_lambdas : yes [3] - cxx11_noexcept : yes [3] - cxx11_nullptr : yes [3] - cxx11_rvalue_references : yes [3] - cxx11_template_aliases : yes [3] - cxx11_thread_local : yes [3] - cxx11_variadic_templates : yes [3] - has_icu builds : yes [2] - zlib : yes [4] - lzma : yes [4] - zstd : yes [4] - has_lzma_cputhreads builds : no [2] - cxx11_decltype : yes [2] - cxx11_basic_alignas : yes [2] - iconv (libc) : yes [2] - icu : yes [2] - native atomic int32 supported : yes [2] - native syslog supported : yes [2] - pthread supports robust mutexes : yes [2] - gcc visibility : yes [2] - sfinae_expr : yes [2] - cxx11_unified_initialization_syntax : yes [2] - cxx11_hdr_initializer_list : yes [2] - cxx11_hdr_chrono : yes [2] - cxx11_numeric_limits : yes [2] - cxx11_hdr_array : yes [2] - cxx11_hdr_atomic : yes [2] - cxx11_hdr_type_traits : yes [2] - cxx11_allocator : yes [2] - cxx11_explicit_conversion_operators : yes [2] - long double support : yes [2] - cxx11_static_assert : yes [2] - std::fstream is moveable and swappable : yes [2] - Has Large File Support : yes [2] - libbacktrace builds : no [2] - libbacktrace builds : no [3] - addr2line builds : no [2] - addr2line builds : no [3] - WinDbg builds : no [2] - WinDbg builds : no [3] - WinDbgCached builds : no [2] - WinDbgCached builds : no [3] - C++11 mutex : yes [5] - lockfree boost::atomic_flag : yes [5] - has stat::st_mtim : yes [5] - has stat::st_mtimensec : no [5] - has stat::st_mtimespec : no [5] - has stat::st_birthtim : no [5] - has stat::st_birthtimensec : no [5] - has stat::st_birthtimespec : no [5] - has statx : no [5] - has statx syscall : yes [5] - cxx11_auto_declarations : yes [5] - cxx11_constexpr : yes [5] - cxx11_defaulted_functions : yes [5] - cxx11_final : yes [5] - cxx11_hdr_mutex : yes [5] - cxx11_hdr_tuple : yes [5] - cxx11_lambdas : yes [5] - cxx11_noexcept : yes [5] - cxx11_nullptr : yes [5] - cxx11_rvalue_references : yes [5] - cxx11_template_aliases : yes [5] - cxx11_thread_local : yes [5] - cxx11_variadic_templates : yes [5] - cxx11_auto_declarations : yes [6] - cxx11_constexpr : yes [6] - cxx11_defaulted_functions : yes [6] - cxx11_final : yes [6] - cxx11_hdr_mutex : yes [6] - cxx11_hdr_tuple : yes [6] - cxx11_lambdas : yes [6] - cxx11_noexcept : yes [6] - cxx11_nullptr : yes [6] - cxx11_rvalue_references : yes [6] - cxx11_template_aliases : yes [6] - cxx11_thread_local : yes [6] - cxx11_variadic_templates : yes [6] - has_icu builds : yes [5] - zlib : yes - lzma : yes - zstd : yes - has_lzma_cputhreads builds : yes [5] - cxx11_decltype : yes [5] - cxx11_basic_alignas : yes [5] - iconv (libc) : yes [5] - icu : yes [5] - native atomic int32 supported : yes [5] - native syslog supported : yes [5] - pthread supports robust mutexes : yes [5] - gcc visibility : yes [5] - sfinae_expr : yes [5] - cxx11_unified_initialization_syntax : yes [5] - cxx11_hdr_initializer_list : yes [5] - cxx11_hdr_chrono : yes [5] - cxx11_numeric_limits : yes [5] - cxx11_hdr_array : yes [5] - cxx11_hdr_atomic : yes [5] - cxx11_hdr_type_traits : yes [5] - cxx11_allocator : yes [5] - cxx11_explicit_conversion_operators : yes [5] - long double support : yes [5] - cxx11_static_assert : yes [5] - std::fstream is moveable and swappable : yes [5] - Has Large File Support : yes [5] - libbacktrace builds : no [5] - libbacktrace builds : no [6] - addr2line builds : no [5] - addr2line builds : no [6] - WinDbg builds : no [5] - WinDbg builds : no [6] - WinDbgCached builds : no [5] - WinDbgCached builds : no [6] [1] gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_clamav/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_clamav/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/clamav/compile -j$(nproc) || make package/feeds/packages/clamav/compile V=s Compile.txt Applying ./patches/010-musl12x.patch using plaintext: patching file clamonacc/misc/fts.c patching file clamonacc/misc/priv_fts.h Applying ./patches/020-cmake.patch using plaintext: patching file freshclam/CMakeLists.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_curl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_curl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/curl/compile -j$(nproc) || make package/feeds/packages/curl/compile V=s Compile.txt Applying ./patches/200-no_docs_tests.patch using plaintext: patching file Makefile.am autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_emailrelay/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_emailrelay/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/emailrelay/compile -j$(nproc) || make package/feeds/packages/emailrelay/compile V=s Compile.txt configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip... mips-openwrt-linux-musl-strip checking for a thread-safe mkdir -p.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_fdm/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_fdm/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/fdm/compile -j$(nproc) || make package/feeds/packages/fdm/compile V=s Compile.txt Applying ./patches/010-ntop-fix.patch using plaintext: patching file Makefile.am Applying ./patches/020-Fix-compile-with-OpenSSL-1.1.0.patch using plaintext: patching file fdm.c Applying ./patches/030-cdefs.patch using plaintext: patching file fdm.h Applying ./patches/040-remove_host_includes.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gnutls/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gnutls/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gnutls/compile -j$(nproc) || make package/feeds/packages/gnutls/compile V=s Compile.txt Applying ./patches/010-m4.patch using plaintext: patching file m4/stdint.m4 patching file m4/vasnprintf.m4 patching file m4/wchar_t.m4 patching file m4/wint_t.m4 patching file src/gl/m4/gnulib-comp.m4 autopoint: using AM_GNU_GETTEXT_REQUIRE_VERSION instead of AM_GNU_GETTEXT_VERSION Copying file build-aux/config.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ksmbd/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ksmbd/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libfido2/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libfido2/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libfido2/compile -j$(nproc) || make package/feeds/packages/libfido2/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libmariadb/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libmariadb/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libmariadb/compile -j$(nproc) || make package/feeds/packages/libmariadb/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:5 (CMAKE_MINIMUM_REQUIRED): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libmicrohttpd/ssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libmicrohttpd/ssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libmicrohttpd/compile -j$(nproc) || make package/feeds/packages/libmicrohttpd/compile V=s Compile.txt configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip... mips-openwrt-linux-musl-strip checking for a race-free mkdir -p.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libssh2/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libssh2/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libssh2/compile -j$(nproc) || make package/feeds/packages/libssh2/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:36 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_luasql/mysql/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_luasql/mysql/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/luasql/compile -j$(nproc) || make package/feeds/packages/luasql/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/luasql-mysql/luasql-2.4.0&amp;#39; ccache_cc -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/luasql-mysql/luasql-2.4.0=luasql-2.4.0 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DPIC -fpic -std=gnu99 -I/openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_monit/ssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_monit/ssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/monit/compile -j$(nproc) || make package/feeds/packages/monit/compile V=s Compile.txt Applying ./patches/001-fix-default-piddir.patch using plaintext: patching file configure patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nginx-util/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nginx-util/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nginx-util/compile -j$(nproc) || make package/feeds/packages/nginx-util/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nginx/all-module/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nginx/all-module/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nginx/compile -j$(nproc) || make package/feeds/packages/nginx/compile V=s Compile.txt Applying ./patches/101-feature_test_fix.patch using plaintext: patching file auto/cc/name patching file auto/cc/conf patching file auto/os/linux patching file auto/unix Applying ./patches/102-sizeof_test_fix.patch using plaintext: patching file auto/types/sizeof Applying ./patches/103-sys_nerr.patch using plaintext: patching file src/os/unix/ngx_errno.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nginx/ssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nginx/ssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nginx/compile -j$(nproc) || make package/feeds/packages/nginx/compile V=s Compile.txt Applying ./patches/101-feature_test_fix.patch using plaintext: patching file auto/cc/name patching file auto/cc/conf patching file auto/os/linux patching file auto/unix Applying ./patches/102-sizeof_test_fix.patch using plaintext: patching file auto/types/sizeof Applying ./patches/103-sys_nerr.patch using plaintext: patching file src/os/unix/ngx_errno.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ootoc/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ootoc/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ootoc/compile -j$(nproc) || make package/feeds/packages/ootoc/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opensc/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opensc/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/opensc/compile -j$(nproc) || make package/feeds/packages/opensc/compile V=s Compile.txt Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file src/libopensc/sc-ossl-compat.h autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openssh/with-pam/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openssh/with-pam/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openssh/compile -j$(nproc) || make package/feeds/packages/openssh/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for mips-openwrt-linux-cc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openssh/without-pam/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openssh/without-pam/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openssh/compile -j$(nproc) || make package/feeds/packages/openssh/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for mips-openwrt-linux-cc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openvpn/openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openvpn/openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvpn/compile -j$(nproc) || make package/feeds/packages/openvpn/compile V=s Compile.txt Applying ./patches/001-reproducible-remove_DATE.patch using plaintext: patching file src/openvpn/options.c Applying ./patches/002-add-wolfssl-support.patch using plaintext: patching file configure.ac patching file src/openvpn/syshead.h Applying ./patches/100-mbedtls-disable-runtime-version-check.patch using plaintext: patching file src/openvpn/ssl_mbedtls.c Applying ./patches/115-fix-mbedtls-without-renegotiation.patch using plaintext: patching file src/openvpn/ssl_mbedtls.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cffi/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cffi/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-cffi/compile -j$(nproc) || make package/feeds/packages/python-cffi/compile V=s Compile.txt running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/cffi copying cffi/backend_ctypes.py -&amp;gt; build/lib.-3.9/cffi copying cffi/commontypes.py -&amp;gt; build/lib.-3.9/cffi copying cffi/verifier.py -&amp;gt; build/lib.-3.9/cffi copying cffi/error.py -&amp;gt; build/lib.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cryptography/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cryptography/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-cryptography/compile -j$(nproc) || make package/feeds/packages/python-cryptography/compile V=s Compile.txt Applying ./patches/0001-Add-new-ASN1_STRING_get0_data-API.patch using plaintext: patching file src/_cffi_src/openssl/asn1.py Applying ./patches/0002-Add-compatibility-for-X509_STORE_set_get_issuer.patch using plaintext: patching file src/_cffi_src/openssl/x509_vfy.py patching file src/cryptography/hazmat/bindings/openssl/_conditional.py Applying ./patches/0003-Add-compatibility-for-deprecated-TLS-methods.patch using plaintext: patching file src/_cffi_src/openssl/ssl.py patching file src/cryptography/hazmat/bindings/openssl/_conditional.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-yaml/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-yaml/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-yaml/compile -j$(nproc) || make package/feeds/packages/python-yaml/compile V=s Compile.txt /openwrt/staging_dir/hostpkg/lib/python3.9/distutils/dist.py:274: UserWarning: Unknown distribution option: &amp;#39;python_requires&amp;#39; warnings.warn(msg) running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/yaml copying lib3/yaml/tokens.py -&amp;gt; build/lib.-3.9/yaml copying lib3/yaml/constructor.py -&amp;gt; build/lib.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-yarl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-yarl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-yarl/compile -j$(nproc) || make package/feeds/packages/python-yarl/compile V=s Compile.txt ********************** * Accellerated build * ********************** running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/yarl copying yarl/_quoting_py.py -&amp;gt; build/lib.-3.9/yarl copying yarl/__init__.py -&amp;gt; build/lib.-3.9/yarl copying yarl/_quoting.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python3/compile -j$(nproc) || make package/feeds/packages/python3/compile V=s Compile.txt Applying ./patches/001-enable-zlib.patch using plaintext: patching file Modules/Setup Applying ./patches/003-do-not-run-distutils-tests.patch using plaintext: patching file Makefile.pre.in Applying ./patches/004-do-not-write-bytes-codes.patch using plaintext: patching file Python/initconfig.c Applying ./patches/006-do-not-add-multiarch-paths-when-cross-compiling.patch using plaintext: patching file setup.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ruamel-yaml/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ruamel-yaml/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ruamel-yaml/compile -j$(nproc) || make package/feeds/packages/ruamel-yaml/compile V=s Compile.txt sys.argv [&amp;#39;setup.py&amp;#39;, &amp;#39;install&amp;#39;, &amp;#39;--prefix=/usr&amp;#39;, &amp;#39;--root=/openwrt/build_dir/target-mips_24kc_musl/pypi/ruamel.yaml-0.15.100/ipkg-install&amp;#39;, &amp;#39;--single-version-externally-managed&amp;#39;] test compiling test_ruamel_yaml running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/ruamel copying .ruamel/__init__.py -&amp;gt; build/lib.-3.9/ruamel creating build/lib.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_sendmail/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_sendmail/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/sendmail/compile -j$(nproc) || make package/feeds/packages/sendmail/compile V=s Compile.txt Applying ./patches/010-enable-nonroot-install.patch using plaintext: patching file cf/cf/Makefile Applying ./patches/011-libmilter-so-version.patch using plaintext: patching file libmilter/Makefile.m4 Applying ./patches/100-misc-os-musl-fixes.patch using plaintext: patching file devtools/bin/Build patching file include/sm/conf.h Applying ./patches/102-pthreads-stack-size.patch using plaintext: patching file libmilter/libmilter.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_softethervpn5/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_softethervpn5/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/softethervpn5/compile -j$(nproc) || make package/feeds/packages/softethervpn5/compile V=s Compile.txt Applying ./patches/001-iconv-defines-fix.patch using plaintext: patching file src/Mayaqua/Mayaqua.h Applying ./patches/002-iconv-cmake-fix.patch using plaintext: patching file src/Mayaqua/CMakeLists.txt Applying ./patches/100-increase-cfg-save-intervall.patch using plaintext: patching file src/Cedar/Server.h Applying ./patches/101-add-config-write-syslog.patch using plaintext: patching file src/Cedar/Server.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tor/full/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tor/full/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tor/compile -j$(nproc) || make package/feeds/packages/tor/compile V=s Compile.txt Applying ./patches/001-torrc.patch using plaintext: patching file src/config/torrc.sample.in autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_transmission/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_transmission/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/transmission/compile -j$(nproc) || make package/feeds/packages/transmission/compile V=s Compile.txt Applying ./patches/010-no-intltool.patch using plaintext: patching file configure.ac Applying ./patches/020-mbedcrypto.patch using plaintext: patching file configure.ac Applying ./patches/080-disable-webseeding.patch using plaintext: patching file libtransmission/webseed.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_trojan/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_trojan/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/trojan/compile -j$(nproc) || make package/feeds/packages/trojan/compile V=s Compile.txt Applying ./patches/001-force-openssl-version.patch using plaintext: patching file CMakeLists.txt -- The CXX compiler identification is GNU 8.4.0 -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_umurmur/openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_umurmur/openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/umurmur/compile -j$(nproc) || make package/feeds/packages/umurmur/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_unbound/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_unbound/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/unbound/compile -j$(nproc) || make package/feeds/packages/unbound/compile V=s Compile.txt Applying ./patches/010-configure_uname.patch using plaintext: patching file configure.ac Applying ./patches/100-example-conf-in.patch using plaintext: patching file doc/example.conf.in autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uwsgi/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uwsgi/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/uwsgi/compile -j$(nproc) || make package/feeds/packages/uwsgi/compile V=s Compile.txt Applying ./patches/001-dont-hardcode-zlib.patch using plaintext: patching file uwsgiconfig.py Applying ./patches/002-dont-override-toolchain-optimization.patch using plaintext: patching file uwsgiconfig.py Applying ./patches/003-hard-code-Linux-as-compilation-os.patch using plaintext: patching file uwsgiconfig.py Applying ./patches/010-uclibc-ng.patch using plaintext: patching file core/uwsgi.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_wget/ssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_wget/ssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/wget/compile -j$(nproc) || make package/feeds/packages/wget/compile V=s Compile.txt configure: loading site script /openwrt/include/site/mips configure: configuring for GNU Wget 1.21.1 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_znc/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_znc/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/znc/compile -j$(nproc) || make package/feeds/packages/znc/compile V=s Compile.txt Applying ./patches/101-Reduce_rebuild_time.patch using plaintext: patching file Makefile.in patching file modules/Makefile.in Applying ./patches/104-disable-empty-modules-check.patch using plaintext: patching file src/main.cpp Applying ./patches/110-add-playback-module.patch using plaintext: patching file modules/playback.cpp Applying ./patches/120-openssl-deprecated.patch using plaintext: patching file third_party/Csocket/Csocket.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_routing_hnetd/openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:39:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_routing_hnetd/openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/hnetd/compile -j$(nproc) || make package/feeds/routing/hnetd/compile V=s Compile.txt Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file src/dtls.c Applying ./patches/020-unused.patch using plaintext: patching file src/hnetd.h CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libnpupnp/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:38:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libnpupnp/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libnpupnp/compile -j$(nproc) || make package/feeds/packages/libnpupnp/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libulfius/gnutls/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:38:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libulfius/gnutls/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libulfius/compile -j$(nproc) || make package/feeds/packages/libulfius/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libulfius/nossl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:38:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libulfius/nossl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libulfius/compile -j$(nproc) || make package/feeds/packages/libulfius/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libupnpp/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:38:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libupnpp/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libupnpp/compile -j$(nproc) || make package/feeds/packages/libupnpp/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libwebsockets/openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:38:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libwebsockets/openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libwebsockets/compile -j$(nproc) || make package/feeds/packages/libwebsockets/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mosquitto/ssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:38:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mosquitto/ssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mosquitto/compile -j$(nproc) || make package/feeds/packages/mosquitto/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/mosquitto-ssl/mosquitto-2.0.11&amp;#39; set -e; for d in lib apps client plugins src; do make -C ${d}; done make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/mosquitto-ssl/mosquitto-2.0.11/lib&amp;#39; ccache_cc -I. -I.. -I.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shadowsocksr-libev/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:38:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shadowsocksr-libev/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shadowsocksr-libev/compile -j$(nproc) || make package/feeds/packages/shadowsocksr-libev/compile V=s Compile.txt Applying ./patches/0001-Add-ss-server-and-ss-check.patch using plaintext: patching file .gitignore patching file Makefile.am patching file Makefile.in patching file configure patching file configure.ac Applying ./patches/0002-Revert-verify_simple-and-auth_simple.patch using plaintext: patching file src/obfs/obfs.c Applying .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_taskwarrior/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:38:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_taskwarrior/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/taskwarrior/compile -j$(nproc) || make package/feeds/packages/taskwarrior/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_trojan-plus/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:38:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_trojan-plus/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/trojan-plus/compile -j$(nproc) || make package/feeds/packages/trojan-plus/compile V=s Compile.txt -- The CXX compiler identification is GNU 8.4.0 -- The C compiler identification is GNU 8.4.0 -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_upmpdcli/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:38:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_upmpdcli/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/upmpdcli/compile -j$(nproc) || make package/feeds/packages/upmpdcli/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_lldpd/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_lldpd/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/lldpd/compile -j$(nproc) || make package/feeds/base/lldpd/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_i2c-tools/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_i2c-tools/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/i2c-tools/compile -j$(nproc) || make package/feeds/packages/i2c-tools/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/i2c-tools-4.2&amp;#39; ccache_cc -fpic -D_REENTRANT -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/i2c-tools-4.2=i2c-tools-4.2 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -Wstrict-prototypes -Wshadow -Wpointer-arith -Wcast-qual -Wcast-align -Wwrite-strings -Wnested-externs -Winline -W -Wundef -Wmissing-prototypes -Iinclude -c lib/smbus.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_icecast/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_icecast/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/icecast/compile -j$(nproc) || make package/feeds/packages/icecast/compile V=s Compile.txt Applying ./patches/001-icecast-2.4.0-tremor.patch using plaintext: patching file m4/ogg.m4 patching file m4/vorbis.m4 patching file src/format_vorbis.c Applying ./patches/005-no_examples_doc_win32.patch using plaintext: patching file Makefile.am Applying ./patches/010-fix_libcurl_test_crap.patch using plaintext: patching file m4/xiph_curl.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mosdns/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mosdns/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mosdns/compile -j$(nproc) || make package/feeds/packages/mosdns/compile V=s Compile.txt Copying files from /openwrt/build_dir/target-mips_24kc_musl/mosdns-1.8.6 into /openwrt/build_dir/target-mips_24kc_musl/mosdns-1.8.6/.go_work/build/src/github.com/IrineSistiana/mosdns dispatcher/coremain/config.go dispatcher/coremain/run.go dispatcher/handler/config.go dispatcher/handler/config_test.go dispatcher/handler/context.go dispatcher/handler/context_test.go dispatcher/handler/error.go dispatcher/handler/interface.go dispatcher/handler/plugin_wrapper.go dispatcher/handler/register.go dispatcher/handler/register_test.go dispatcher/handler/test_utils.go dispatcher/mlog/logger.go dispatcher/pkg/arbitrary/arbitrary.go dispatcher/pkg/arbitrary/arbitrary_test.go dispatcher/pkg/cache/cache.go dispatcher/pkg/cache/mem_cache/mem_cache.go dispatcher/pkg/cache/mem_cache/mem_cache_test.go dispatcher/pkg/cache/redis_cache/redis_cache.go dispatcher/pkg/cache/redis_cache/redis_cache_test.go dispatcher/pkg/concurrent_limiter/client_limiter.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nmap/full/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nmap/full/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nmap/compile -j$(nproc) || make package/feeds/packages/nmap/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/nmap-full/nmap-7.91&amp;#39; Compiling libnetutil cd libnetutil &amp;amp;&amp;amp; make make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/nmap-full/nmap-7.91/libnetutil&amp;#39; make[5]: Nothing to be done for &amp;#39;all&amp;#39;. make[5]: Leaving directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/nmap-full/nmap-7.91/libnetutil&amp;#39; Compiling liblinear make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/nmap-full/nmap-7.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nmap/ssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nmap/ssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nmap/compile -j$(nproc) || make package/feeds/packages/nmap/compile V=s Compile.txt configure: loading site script /openwrt/include/site/mips checking whether NLS is requested... no checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking for mips-openwrt-linux-gcc... ccache_cc checking whether the C compiler works.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pcap-dnsproxy/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pcap-dnsproxy/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-augeas/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-augeas/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-augeas/compile -j$(nproc) || make package/feeds/packages/python-augeas/compile V=s Compile.txt Applying ./patches/001-backport-ffi-fix.patch using plaintext: patching file augeas/__init__.py patching file augeas/ffi.py patching file setup.py Collecting cffi==1.14.5 Downloading cffi-1.14.5.tar.gz (475 kB) Collecting pycparser==2.20 Downloading pycparser-2.20.tar.gz (161 kB) Skipping wheel build for cffi, due to binaries being disabled for it.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-curl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-curl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-curl/compile -j$(nproc) || make package/feeds/packages/python-curl/compile V=s Compile.txt Traceback (most recent call last): File &amp;#34;/openwrt/build_dir/target-mips_24kc_musl/pypi/pycurl-7.43.0.6/setup.py&amp;#34;, line 236, in configure_unix p = subprocess.Popen((self.curl_config(), &amp;#39;--version&amp;#39;), File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.9/subprocess.py&amp;#34;, line 951, in __init__ self._execute_child(args, executable, preexec_fn, close_fds, File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-rcssmin/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-rcssmin/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-rcssmin/compile -j$(nproc) || make package/feeds/packages/python-rcssmin/compile V=s Compile.txt running install running build running build_py creating build creating build/lib.-3.9 copying ./rcssmin.py -&amp;gt; build/lib.-3.9 warning: build_py: byte-compiling is disabled, skipping. running build_ext building &amp;#39;_rcssmin&amp;#39; extension creating build/temp.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-uci/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-uci/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-uci/compile -j$(nproc) || make package/feeds/packages/python-uci/compile V=s Compile.txt running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/euci copying euci/__init__.py -&amp;gt; build/lib.-3.9/euci copying euci/boolean.py -&amp;gt; build/lib.-3.9/euci warning: build_py: byte-compiling is disabled, skipping. running build_ext building &amp;#39;uci&amp;#39; extension creating build/temp.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3-netifaces/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3-netifaces/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python3-netifaces/compile -j$(nproc) || make package/feeds/packages/python3-netifaces/compile V=s Compile.txt running install running build running build_ext checking for getifaddrs...found. checking for getnameinfo...found. checking for IPv6 socket IOCTLs...not found. checking for optional header files...netpacket/packet.h linux/atm.h linux/llc.h linux/tipc.h linux/dn.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ulogd/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ulogd/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ulogd/compile -j$(nproc) || make package/feeds/packages/ulogd/compile V=s Compile.txt Applying ./patches/010-json-remote.patch using plaintext: patching file output/ulogd_output_JSON.c patching file ulogd.conf.in Applying ./patches/020-fix-musl.patch using plaintext: patching file src/ulogd.c Applying ./patches/030-ipfix-add.patch using plaintext: patching file configure.ac patching file include/ulogd/ulogd.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_dahdi-linux/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_dahdi-linux/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_yate/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:37:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_yate/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-upstream-crash-fix-r6470.patch using plaintext: patching file modules/ysipchan.cpp Applying ./patches/120-increase-sip-message-size.patch using plaintext: patching file conf.d/ysipchan.conf.sample Applying ./patches/130-fix-ilbc-flags.patch using plaintext: patching file libs/ilbc/Makefile.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_adb/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_adb/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/adb/compile -j$(nproc) || make package/feeds/base/adb/compile V=s Compile.txt Applying ./patches/001-create_Makefile.patch using plaintext: patching file adb/Makefile Applying ./patches/003-fix-musl-build.patch using plaintext: patching file adb/usb_linux.c Applying ./patches/010-openssl-1.1.patch using plaintext: patching file adb/adb_auth_host.c Applying ./patches/020-cherry-picked-superspeed-fix.patch using plaintext: patching file adb/usb_linux.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_button-hotplug/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_button-hotplug/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/button-hotplug/button-hotplug.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/button-hotplug/button-hotplug.mod.o LD [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/button-hotplug/button-hotplug.ko make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; Package kmod-button-hotplug is missing dependencies for the following libraries: input-core.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_exfat/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_exfat/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/exfat/compile -j$(nproc) || make package/feeds/base/exfat/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.11.1/inode.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.11.1/namei.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.11.1/dir.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.11.1/super.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.11.1/fatent.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.11.1/cache.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.11.1/nls.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-exfat-oot-5.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_r8152/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_r8152/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/r8152/compile -j$(nproc) || make package/feeds/base/r8152/compile V=s Compile.txt Applying ./patches/100-add-LED-configuration-from-OF.patch using plaintext: patching file r8152.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/realtek-r8152-linux-2.15&amp;#39; /openwrt/staging_dir/host/bin/find: &amp;#39;/openwrt/kernel/drivers/net/usb_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39;: No such file or directory /bin/sh: 1: lsmod: not found make -C /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124 M=/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/realtek-r8152-linux-2.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_ustream-ssl/openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_ustream-ssl/openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ustream-ssl/compile -j$(nproc) || make package/feeds/base/ustream-ssl/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_addrwatch/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_addrwatch/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/addrwatch/compile -j$(nproc) || make package/feeds/packages/addrwatch/compile V=s Compile.txt Applying ./patches/002-fix-uclibc-sysconf.patch using plaintext: patching file src/addrwatch.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apfree-wifidog/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apfree-wifidog/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/apfree-wifidog/compile -j$(nproc) || make package/feeds/packages/apfree-wifidog/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apk/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apk/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/apk/compile -j$(nproc) || make package/feeds/packages/apk/compile V=s Compile.txt Applying ./patches/0001-remove-doc-generation.patch using plaintext: patching file Makefile Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file libfetch/common.c patching file src/apk.c patching file src/apk_openssl.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/apk-tools-v2.12.4&amp;#39; GENERR libfetch/ftperr.h GENERR libfetch/httperr.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bfdd/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bfdd/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/bfdd/compile -j$(nproc) || make package/feeds/packages/bfdd/compile V=s Compile.txt Applying ./patches/002-ipv6_musl_fix.patch using plaintext: patching file bfd_packet.c Applying ./patches/020-gcc10.patch using plaintext: patching file bfd.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/bfdd-c54534beb524afc3972039f57b56ec65332b43f7&amp;#39; ccache_cc -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/bfdd-c54534beb524afc3972039f57b56ec65332b43f7=bfdd-c54534beb524afc3972039f57b56ec65332b43f7 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -I/openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bitlbee/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_bitlbee/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/bitlbee/compile -j$(nproc) || make package/feeds/packages/bitlbee/compile V=s Compile.txt BitlBee configure No detection code exists for OpenSSL. Make sure that you have a complete installation of OpenSSL (including devel/header files) before reporting compilation problems. Also, keep in mind that the OpenSSL is, according to some people, not completely GPL-compatible.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_esniper/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_esniper/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/esniper/compile -j$(nproc) || make package/feeds/packages/esniper/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ffmpeg/full/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ffmpeg/full/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt Applying ./patches/010-pkgconfig.patch using plaintext: patching file ffbuild/pkgconfig_generate.sh Applying ./patches/030-h264-mips.patch using plaintext: patching file libavcodec/mips/cabac.h Applying ./patches/050-glibc.patch using plaintext: patching file libavcodec/wmv2dsp.c ERROR: openssl not found If you think configure made a mistake, make sure you are using the latest version from Git.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_getdns/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_getdns/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/getdns/compile -j$(nproc) || make package/feeds/packages/getdns/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gost_engine/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gost_engine/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gost_engine/compile -j$(nproc) || make package/feeds/packages/gost_engine/compile V=s Compile.txt Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file gost_pmeth.c CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_haproxy/ssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_haproxy/ssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/haproxy/compile -j$(nproc) || make package/feeds/packages/haproxy/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/haproxy-ssl/haproxy-2.4.0&amp;#39; CC src/ssl_sample.o In file included from include/haproxy/listener-t.h:37, from include/haproxy/server-t.h:36, from include/haproxy/lb_map-t.h:26, from include/haproxy/backend-t.h:30, from include/haproxy/proxy-t.h:35, from include/haproxy/hlua-t.h:32, from include/haproxy/applet-t.h:29, from include/haproxy/obj_type.h:26, from src/ssl_sample.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hcxdumptool/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hcxdumptool/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/hcxdumptool/compile -j$(nproc) || make package/feeds/packages/hcxdumptool/compile V=s Compile.txt Applying ./patches/010-openssl.patch using plaintext: patching file hcxdumptool.c Applying ./patches/020-stdout.patch using plaintext: patching file hcxdumptool.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/hcxdumptool-6.1.6&amp;#39; mkdir -p .deps Package openssl was not found in the pkg-config search path.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hcxtools/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hcxtools/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/hcxtools/compile -j$(nproc) || make package/feeds/packages/hcxtools/compile V=s Compile.txt Applying ./patches/010-openssl.patch using plaintext: patching file hcxhashtool.c patching file hcxpcapngtool.c patching file hcxpmktool.c patching file hcxpsktool.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/hcxtools-6.1.6&amp;#39; mkdir -p .deps Package openssl was not found in the pkg-config search path.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hfsprogs/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hfsprogs/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/hfsprogs/compile -j$(nproc) || make package/feeds/packages/hfsprogs/compile V=s Compile.txt Applying ./patches/0001-Create-short-Makefiles-for-Debian.patch using plaintext: patching file Makefile.lnx patching file fsck_hfs.tproj/Makefile.lnx patching file fsck_hfs.tproj/dfalib/Makefile.lnx patching file newfs_hfs.tproj/Makefile.lnx Applying ./patches/0002-Add-exclude-Darwin-specific-code.patch using plaintext: patching file fsck_hfs.tproj/cache.c patching file fsck_hfs.tproj/dfalib/BTree.c patching file fsck_hfs.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_https-dns-proxy/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_https-dns-proxy/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/https-dns-proxy/compile -j$(nproc) || make package/feeds/packages/https-dns-proxy/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_inadyn/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_inadyn/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/inadyn/compile -j$(nproc) || make package/feeds/packages/inadyn/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_iperf3/ssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_iperf3/ssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/iperf3/compile -j$(nproc) || make package/feeds/packages/iperf3/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force configure.ac:27: error: Autoconf version 2.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ipfs-http-client/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ipfs-http-client/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ipfs-http-client/compile -j$(nproc) || make package/feeds/packages/ipfs-http-client/compile V=s Compile.txt Applying ./patches/001-add-srv-addr.patch using plaintext: patching file test/test_block.cc patching file test/test_config.cc patching file test/test_dht.cc patching file test/test_error.cc patching file test/test_files.cc patching file test/test_generic.cc patching file test/test_key.cc patching file test/test_name.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libnopoll/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libnopoll/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libnopoll/compile -j$(nproc) || make package/feeds/packages/libnopoll/compile V=s Compile.txt Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file src/nopoll.c patching file src/nopoll_conn.c patching file src/nopoll_decl.h autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libp11/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libp11/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libp11/compile -j$(nproc) || make package/feeds/packages/libp11/compile V=s Compile.txt Applying ./patches/001-fix-install.patch using plaintext: patching file src/Makefile.am patching file src/Makefile.in autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libssh/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libssh/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libssh/compile -j$(nproc) || make package/feeds/packages/libssh/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libstrophe/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libstrophe/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libstrophe/compile -j$(nproc) || make package/feeds/packages/libstrophe/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libuhttpd/openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libuhttpd/openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libuhttpd/compile -j$(nproc) || make package/feeds/packages/libuhttpd/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libwebsockets/full/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libwebsockets/full/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libwebsockets/compile -j$(nproc) || make package/feeds/packages/libwebsockets/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_lua-openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_lua-openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/lua-openssl/compile -j$(nproc) || make package/feeds/packages/lua-openssl/compile V=s Compile.txt Applying ./patches/010-cmake.patch using plaintext: patching file CMakeLists.txt Applying ./patches/020-no-luajit.patch using plaintext: patching file CMakeLists.txt Applying ./patches/020-openssl-deprecated.patch using plaintext: patching file src/cipher.c patching file src/openssl.c patching file src/th-lock.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_luasec/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_luasec/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/luasec/compile -j$(nproc) || make package/feeds/packages/luasec/compile V=s Compile.txt Applying ./patches/100-fix-compilation.patch using plaintext: patching file src/Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/luasec-0.9&amp;#39; --------------------- ** Build for Linux ** --------------------- make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/luasec-0.9/src&amp;#39; make[6]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/luasec-0.9/src&amp;#39; make[7]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/luasec-0.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mailsend/ssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mailsend/ssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mailsend/compile -j$(nproc) || make package/feeds/packages/mailsend/compile V=s Compile.txt Applying ./patches/0001-OpenSSL-1.1-support-for-HMAC-api.patch using plaintext: patching file utils.c Applying ./patches/0002-Removed-API-deprecated-by-OpenSSL-1.1.0.patch using plaintext: patching file main.c patching file utils.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for mips-openwrt-linux-ranlib.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_memcached/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_memcached/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/memcached/compile -j$(nproc) || make package/feeds/packages/memcached/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mutt/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mutt/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mutt/compile -j$(nproc) || make package/feeds/packages/mutt/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mwol/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mwol/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mwol/compile -j$(nproc) || make package/feeds/packages/mwol/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netstinky/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netstinky/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/netstinky/compile -j$(nproc) || make package/feeds/packages/netstinky/compile V=s Compile.txt Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file updates/ids_tls_update.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for mips-openwrt-linux-gcc... ccache_cc checking whether the C compiler works.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ngircd/ssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ngircd/ssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ngircd/compile -j$(nproc) || make package/feeds/packages/ngircd/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ngrokc/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ngrokc/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ngrokc/compile -j$(nproc) || make package/feeds/packages/ngrokc/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/ngrokc-1.54&amp;#39; ccache_cxx -fexceptions -DOPENSSL=1 -O2 -c -o sendmsg.o sendmsg.cpp In file included from sslbio.h:6, from global.h:7, from config.h:24, from sendmsg.cpp:1: opensslbio.h:5:9: fatal error: openssl/ssl.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_njitclient/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_njitclient/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/njitclient/compile -j$(nproc) || make package/feeds/packages/njitclient/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openconnect/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openconnect/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openconnect/compile -j$(nproc) || make package/feeds/packages/openconnect/compile V=s Compile.txt configure: loading site script /openwrt/include/site/mips checking pkg-config is at least version 0.9.0... yes checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking whether to enable maintainer-specific portions of Makefiles.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openfortivpn/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openfortivpn/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openfortivpn/compile -j$(nproc) || make package/feeds/packages/openfortivpn/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openvswitch/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openvswitch/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ovn/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ovn/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_prosody/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_prosody/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/prosody/compile -j$(nproc) || make package/feeds/packages/prosody/compile V=s Compile.txt Lua version detected: 5.1 Lua interpreter found: /openwrt/staging_dir/hostpkg/bin/lua... Checking Lua includes... lua.h found in /openwrt/staging_dir/target-mips_24kc_musl/usr/include/lua.h Checking if Lua header version matches that of the interpreter... yes Writing configuration.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-ciso8601/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-ciso8601/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-ciso8601/compile -j$(nproc) || make package/feeds/packages/python-ciso8601/compile V=s Compile.txt running install running build running build_py package init file &amp;#39;ciso8601/__init__.py&amp;#39; not found (or not a regular file) creating build creating build/lib.-3.9 creating build/lib.-3.9/ciso8601 copying ciso8601/__init__.pyi -&amp;gt; build/lib.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-evdev/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-evdev/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-evdev/compile -j$(nproc) || make package/feeds/packages/python-evdev/compile V=s Compile.txt running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/evdev copying evdev/ecodes.py -&amp;gt; build/lib.-3.9/evdev copying evdev/device.py -&amp;gt; build/lib.-3.9/evdev copying evdev/events.py -&amp;gt; build/lib.-3.9/evdev copying evdev/__init__.py -&amp;gt; build/lib.-3.9/evdev copying evdev/uinput.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_radsecproxy/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_radsecproxy/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/radsecproxy/compile -j$(nproc) || make package/feeds/packages/radsecproxy/compile V=s Compile.txt Applying ./patches/200-logdest-on-foreground.patch using plaintext: patching file radsecproxy.c Applying ./patches/300-gcc10.patch using plaintext: patching file radsecproxy.c patching file radsecproxy.h autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ratched/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ratched/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ratched/compile -j$(nproc) || make package/feeds/packages/ratched/compile V=s Compile.txt Applying ./patches/0001-Disable-non-IANA-TLS-extensions.patch using plaintext: patching file openssl_clienthello.c Applying ./patches/0002-openssl-fix-compilation-without-deprecated-APIs.patch using plaintext: patching file openssl.c patching file openssl_certs.c patching file openssl_tls.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/ratched-1.0.0&amp;#39; fatal: not a git repository (or any parent up to mount point /) Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ratechecker/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ratechecker/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ratechecker/compile -j$(nproc) || make package/feeds/packages/ratechecker/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_redsocks/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_redsocks/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/redsocks/compile -j$(nproc) || make package/feeds/packages/redsocks/compile V=s Compile.txt Applying ./patches/0006-fix_default_config_location.patch using plaintext: patching file main.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/redsocks-release-0.5&amp;#39; mkdir -p gen touch gen/.build rm -f gen/version.c.tmp echo &amp;#39;/* this file is auto-generated during build */&amp;#39; &amp;gt; gen/version.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_redsocks2/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_redsocks2/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/redsocks2/compile -j$(nproc) || make package/feeds/packages/redsocks2/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/redsocks2-0.67&amp;#39; Compile with OpenSSL by default. To compile with PolarSSL, run &amp;#39;make USE_CRYPTO_POLARSSL=true&amp;#39; instead. mkdir -p gen touch gen/.build rm -f -f gen/version.c.tmp echo &amp;#39;/* this file is auto-generated during build */&amp;#39; &amp;gt; gen/version.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rng-tools/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rng-tools/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/rng-tools/compile -j$(nproc) || make package/feeds/packages/rng-tools/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rpi.gpio/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rpi.gpio/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/RPi.GPIO/compile -j$(nproc) || make package/feeds/packages/RPi.GPIO/compile V=s Compile.txt running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/RPi copying RPi/__init__.py -&amp;gt; build/lib.-3.9/RPi creating build/lib.-3.9/RPi/GPIO copying RPi/GPIO/__init__.py -&amp;gt; build/lib.-3.9/RPi/GPIO warning: build_py: byte-compiling is disabled, skipping.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rtty/openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rtty/openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/rtty/compile -j$(nproc) || make package/feeds/packages/rtty/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shairport-sync/mbedtls/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shairport-sync/mbedtls/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shairport-sync/mini/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shairport-sync/mini/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shairport-sync/openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_shairport-sync/openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_smartdns/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_smartdns/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/smartdns/compile -j$(nproc) || make package/feeds/packages/smartdns/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/smartdns-1.2021.24/src&amp;#39; ccache_cc -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/smartdns-1.2021.24=smartdns-1.2021.24 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -I/openwrt/staging_dir/toolchain-mips_24kc_gcc-8.4.0_musl/usr/include -I/openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_sstp-client/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_sstp-client/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/sstp-client/compile -j$(nproc) || make package/feeds/packages/sstp-client/compile V=s Compile.txt Applying ./patches/100-musl-compat.patch using plaintext: patching file include/net/ppp_defs.h patching file src/libsstp-log/sstp-log-syslog.c patching file src/libsstp-log/sstp-log-std.c Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file src/sstp-client.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking whether make supports nested variables.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_stubby/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_stubby/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/stubby/compile -j$(nproc) || make package/feeds/packages/stubby/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_stunnel/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_stunnel/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/stunnel/compile -j$(nproc) || make package/feeds/packages/stunnel/compile V=s Compile.txt autotools.mk: Found libtool v2.4 - applying patch to ./auto/ltmain.sh bash: /openwrt/tools/libtool/files/libtool-v2.4.patch: No such file or directory configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips configure: **************************************** initialization checking for a BSD-compatible install.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tmate/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tmate/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tmate/compile -j$(nproc) || make package/feeds/packages/tmate/compile V=s Compile.txt Applying ./patches/010-Avoid-initializing-stdout-twice.patch using plaintext: patching file log.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tmux/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tmux/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tmux/compile -j$(nproc) || make package/feeds/packages/tmux/compile V=s Compile.txt Applying ./patches/100-add-crosscompiling-fallbacks.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ttyd/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ttyd/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ttyd/compile -j$(nproc) || make package/feeds/packages/ttyd/compile V=s Compile.txt Applying ./patches/100-log-to-syslog.patch using plaintext: patching file src/server.c CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uacme/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uacme/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/uacme/compile -j$(nproc) || make package/feeds/packages/uacme/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uanytun/sslcrypt/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uanytun/sslcrypt/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/uanytun/compile -j$(nproc) || make package/feeds/packages/uanytun/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/uanytun-sslcrypt/uanytun-0.3.7/src&amp;#39; (re)building auth_algo.d (re)building key_derivation.d (re)building uanytun.d (re)building cipher.d (re)building seq_window.d (re)building encrypted_packet.d (re)building plain_packet.d (re)building udp.d (re)building tun.d (re)building options.d (re)building sysexec.d (re)building sig_handler.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uw-imap/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_uw-imap/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/uw-imap/compile -j$(nproc) || make package/feeds/packages/uw-imap/compile V=s Compile.txt Applying ./patches/001-fix_Makefiles_and_shlib.patch using plaintext: patching file Makefile patching file src/osdep/unix/Makefile Applying ./patches/002-imap-2004a-doc.patch using plaintext: patching file src/imapd/imapd.8 patching file src/ipopd/ipopd.8 Applying ./patches/003-imap-2007e-overflow.patch using plaintext: patching file src/c-client/rfc822.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_vpnc/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_vpnc/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/vpnc/compile -j$(nproc) || make package/feeds/packages/vpnc/compile V=s Compile.txt Applying ./patches/110-openssl-deprecated.patch using plaintext: patching file src/crypto-openssl.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/vpnc-2021-01-31-43780cec&amp;#39; cd src &amp;amp;&amp;amp; LC_ALL=C perl -w ./enum2debug.pl isakmp.h &amp;gt;vpnc-debug.c 2&amp;gt;vpnc-debug.h Package gnutls was not found in the pkg-config search path.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_vsftpd/tls/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_vsftpd/tls/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/vsftpd/compile -j$(nproc) || make package/feeds/packages/vsftpd/compile V=s Compile.txt Applying ./patches/001-destdir.patch using plaintext: patching file Makefile Applying ./patches/002-find_libs.patch using plaintext: patching file Makefile Applying ./patches/003-chroot.patch using plaintext: patching file tunables.c Applying ./patches/004-disable-capabilities.patch using plaintext: patching file sysdeputil.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_xmlrpc-c/internal/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_xmlrpc-c/internal/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xmlrpc-c/compile -j$(nproc) || make package/feeds/packages/xmlrpc-c/compile V=s Compile.txt Applying ./patches/010-nanosleep.patch using plaintext: patching file lib/libutil/sleep.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_xupnpd/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_xupnpd/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xupnpd/compile -j$(nproc) || make package/feeds/packages/xupnpd/compile V=s Compile.txt Applying ./patches/100-default_config.patch using plaintext: patching file src/xupnpd.lua Applying ./patches/101-root_dir_param.patch using plaintext: patching file src/main.cpp Reading specs from /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.4.0_musl/lib/gcc/mips-openwrt-linux-musl/8.4.0/specs COLLECT_GCC=/openwrt/staging_dir/toolchain-mips_24kc_gcc-8.4.0_musl/bin/mips-openwrt-linux-musl-gcc COLLECT_LTO_WRAPPER=/openwrt/staging_dir/toolchain-mips_24kc_gcc-8.4.0_musl/libexec/gcc/mips-openwrt-linux-musl/8.4.0/lto-wrapper Target: mips-openwrt-linux-musl Configured with: /openwrt/build_dir/toolchain-mips_24kc_gcc-8.4.0_musl/gcc-8.4.0/configure --with-bugurl=http://bugs.openwrt.org/ --with-pkgversion=&amp;#39;OpenWrt GCC 8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ykclient/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ykclient/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ykclient/compile -j$(nproc) || make package/feeds/packages/ykclient/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_yubico-pam/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_yubico-pam/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/yubico-pam/compile -j$(nproc) || make package/feeds/packages/yubico-pam/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_libks/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_libks/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libks/compile -j$(nproc) || make package/feeds/telephony/libks/compile V=s Compile.txt Applying ./patches/01-find-libm.patch using plaintext: patching file cmake/FindLibM.cmake Applying ./patches/02-correct-signal_h-include.patch using plaintext: patching file src/include/libks/ks_platform.h Applying ./patches/03-fix-flags.patch using plaintext: patching file CMakeLists.txt Applying ./patches/04-don_t-override-optimization.patch using plaintext: patching file cmake/ksutil.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_restund/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_restund/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/restund/compile -j$(nproc) || make package/feeds/telephony/restund/compile V=s Compile.txt Applying ./patches/100-reproducible-builds.patch using plaintext: patching file modules/status/status.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/restund-0.4.12&amp;#39; CC [M] build-mips/modules/binding/binding.o CC [M] build-mips/modules/auth/auth.o CC [M] build-mips/modules/turn/alloc.o CC [M] build-mips/modules/turn/chan.o CC [M] build-mips/modules/turn/perm.o CC [M] build-mips/modules/turn/turn.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_rtpengine/no-transcode/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_rtpengine/no-transcode/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_rtpengine/transcode/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_rtpengine/transcode/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_signalwire-client-c/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_signalwire-client-c/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/signalwire-client-c/compile -j$(nproc) || make package/feeds/telephony/signalwire-client-c/compile V=s Compile.txt Applying ./patches/01-set-libks-cmake-dir.patch using plaintext: patching file cmake/FindLibKS.cmake -- cotire 1.7.10 loaded. -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_sngrep/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_sngrep/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/sngrep/compile -j$(nproc) || make package/feeds/telephony/sngrep/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_fast-classifier/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_fast-classifier/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/fast-classifier/fast-classifier.o /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_shortcut-fe/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_shortcut-fe/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apr-util/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apr-util/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/apr-util/compile -j$(nproc) || make package/feeds/packages/apr-util/compile V=s Compile.txt Applying ./patches/002-fix-gdbm-error-handling.patch using plaintext: patching file dbm/apr_dbm_gdbm.c Applying ./patches/003-support_mariadb.patch using plaintext: patching file build/dbd.m4 patching file dbd/apr_dbd_mysql.c Applying ./patches/004-avoid_ldap_by_defaut.patch using plaintext: patching file apu-config.in Applying ./patches/005-apu_config_dont_list_indep_libs.patch using plaintext: patching file apr-util.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_atlas-probe/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_atlas-probe/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/atlas-probe/compile -j$(nproc) || make package/feeds/packages/atlas-probe/compile V=s Compile.txt Applying ./patches/001-fix-stime-glibc-remove.patch using plaintext: patching file coreutils/date.c patching file util-linux/rdate.c patching file networking/httpget.c patching file networking/httppost.c autoreconf: Entering directory `libevent-2.1.11-stable&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I libevent-2.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gerbera/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gerbera/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gerbera/compile -j$(nproc) || make package/feeds/packages/gerbera/compile V=s Compile.txt -- The CXX compiler identification is GNU 8.4.0 -- The C compiler identification is GNU 8.4.0 -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_h2o/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_h2o/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/h2o/compile -j$(nproc) || make package/feeds/packages/h2o/compile V=s Compile.txt Applying ./patches/100-socket_disable_npn.patch using plaintext: patching file include/h2o/socket.h Applying ./patches/200-libh2o-evloop_wslay-link.patch using plaintext: patching file CMakeLists.txt Applying ./patches/300-picotls-chacha-detect.patch using plaintext: patching file deps/picotls/include/picotls/openssl.h Applying ./patches/400-backtrace-detection.patch using plaintext: patching file CMakeLists.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_jool/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_jool/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ldns/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ldns/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ldns/compile -j$(nproc) || make package/feeds/packages/ldns/compile V=s Compile.txt Applying ./patches/001-compile-for-darwin.patch using plaintext: patching file configure.ac Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file dnssec_verify.c patching file drill/drill.c patching file keys.c Applying ./patches/020-openssl-dsa.patch using plaintext: patching file dnssec.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libdbi-drivers/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libdbi-drivers/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libdbi-drivers/compile -j$(nproc) || make package/feeds/packages/libdbi-drivers/compile V=s Compile.txt Applying ./patches/001_libsqlite3_fix.patch using plaintext: patching file acinclude.m4 Applying ./patches/100-remove-date-to-fix-reproducible-builds.patch using plaintext: patching file drivers/db2/dbd_db2.c patching file drivers/firebird/dbd_firebird.c patching file drivers/freetds/dbd_freetds.c patching file drivers/ingres/dbd_ingres.c patching file drivers/msql/dbd_msql.c patching file drivers/mysql/dbd_mysql.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libreswan/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libreswan/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libreswan/compile -j$(nproc) || make package/feeds/packages/libreswan/compile V=s Compile.txt Applying ./patches/010-nanosleep.patch using plaintext: patching file programs/pluto/send.c Applying ./patches/020-limits.patch using plaintext: patching file programs/pluto/connections.c patching file programs/pluto/rcv_whack.c Applying ./patches/030-fix_musl_build.patch using plaintext: patching file include/fd.h Applying ./patches/040-disable_man.patch using plaintext: patching file mk/targets.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libtorrent/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libtorrent/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libtorrent/compile -j$(nproc) || make package/feeds/packages/libtorrent/compile V=s Compile.txt + curl -f --connect-timeout 20 --retry 5 --location --insecure https://codeload.github.com/rakshasa/libtorrent/tar.gz/v0.13.8?/libtorrent-0.13.8.tar.gz % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 349k 0 349k 0 0 1810k 0 --:--:-- --:--:-- --:--:-- 1810k Applying .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mosh/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mosh/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mosh/compile -j$(nproc) || make package/feeds/packages/mosh/compile V=s Compile.txt Applying ./patches/020-std.patch using plaintext: patching file src/network/network.cc configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netwhere/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netwhere/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/netwhere/compile -j$(nproc) || make package/feeds/packages/netwhere/compile V=s Compile.txt Applying ./patches/010-libmicrohttpd.patch using plaintext: patching file webservice.hpp -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-libevent/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-libevent/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-libevent/compile -j$(nproc) || make package/feeds/packages/php7-pecl-libevent/compile V=s Compile.txt Applying ./patches/010-libevent2.patch using plaintext: patching file libevent.c bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:46: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/libevent-ce255e7e1e293030951fd68d5df06b2a4c077a89/.prepared_00f34996a021eb3af0d3106523d3b16c_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-redis/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-redis/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-redis/compile -j$(nproc) || make package/feeds/packages/php7-pecl-redis/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:48: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/redis-5.3.2/.prepared_4afded71ddf3a351f34b671d598970f8_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php8/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php8/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php8/compile -j$(nproc) || make package/feeds/packages/php8/compile V=s Compile.txt Applying ./patches/0007-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0022-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0025-php-5.4.9-fixheader.patch using plaintext: patching file configure.ac Applying ./patches/0030-Remove-W3C-validation-icon-to-not-expose-the-reader-.patch using plaintext: patching file sapi/fpm/status.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pyodbc/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pyodbc/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pyodbc/compile -j$(nproc) || make package/feeds/packages/pyodbc/compile V=s Compile.txt /openwrt/staging_dir/hostpkg/lib/python3.9/site-packages/setuptools/dist.py:642: UserWarning: Usage of dash-separated &amp;#39;library-dirs&amp;#39; will not be supported in future versions. Please use the underscore name &amp;#39;library_dirs&amp;#39; instead warnings.warn( /openwrt/staging_dir/hostpkg/lib/python3.9/site-packages/setuptools/dist.py:642: UserWarning: Usage of dash-separated &amp;#39;library-dirs&amp;#39; will not be supported in future versions.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cryptodome/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cryptodome/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-cryptodome/compile -j$(nproc) || make package/feeds/packages/python-cryptodome/compile V=s Compile.txt Applying ./patches/001-fix-libgmp-loading.patch using plaintext: patching file lib/Crypto/Math/_IntegerGMP.py Applying ./patches/002-omit-tests.patch using plaintext: patching file setup.py Testing support for clang Target does not support clang Testing support for gcc Target does support gcc Testing support for stdint.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-greenlet/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-greenlet/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-greenlet/compile -j$(nproc) || make package/feeds/packages/python-greenlet/compile V=s Compile.txt running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/greenlet copying src/greenlet/__init__.py -&amp;gt; build/lib.-3.9/greenlet creating build/lib.-3.9/greenlet/tests copying src/greenlet/tests/test_leaks.py -&amp;gt; build/lib.-3.9/greenlet/tests copying src/greenlet/tests/test_contextvars.py -&amp;gt; build/lib.-3.9/greenlet/tests copying src/greenlet/tests/test_gc.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-psutil/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-psutil/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-psutil/compile -j$(nproc) || make package/feeds/packages/python-psutil/compile V=s Compile.txt Requirement already satisfied: setuptools-scm==4.1.2 in /openwrt/staging_dir/hostpkg/lib/python3.9/site-packages (from -r ../host-pip-requirements/setuptools-scm.txt (line 1)) (4.1.2) Requirement already satisfied: setuptools in /openwrt/staging_dir/hostpkg/lib/python3.9/site-packages (from setuptools-scm==4.1.2-&amp;gt;-r ../host-pip-requirements/setuptools-scm.txt (line 1)) (56.0.0) cc1: note: someone does not honour COPTS correctly, passed 0 times running install running build running build_py creating build creating build/lib.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-pynacl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-pynacl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-pynacl/compile -j$(nproc) || make package/feeds/packages/python-pynacl/compile V=s Compile.txt Applying ./patches/001-always-compile-scalar-mult-ed25519.patch using plaintext: patching file src/bindings/minimal/crypto_scalarmult.h Collecting cffi==1.14.5 Downloading cffi-1.14.5.tar.gz (475 kB) Collecting pycparser==2.20 Downloading pycparser-2.20.tar.gz (161 kB) Skipping wheel build for cffi, due to binaries being disabled for it.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3-libselinux/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3-libselinux/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python3-libselinux/compile -j$(nproc) || make package/feeds/packages/python3-libselinux/compile V=s Compile.txt Applying ./patches/010-setup-py-custom-cc.patch using plaintext: patching file src/Makefile Applying ./patches/020-Make-use-of-variables-when-defining-libdir-and-inclu.patch using plaintext: patching file src/libselinux.pc.in make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/python-libselinux/libselinux-3.2/src&amp;#39; make[4]: Nothing to be done for &amp;#39;swigify&amp;#39;. ccache_cc -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/python-libselinux/libselinux-3.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3-libsemanage/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python3-libsemanage/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python3-libsemanage/compile -j$(nproc) || make package/feeds/packages/python3-libsemanage/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/python-libsemanage/libsemanage-3.2/src&amp;#39; swig -Wall -python -o semanageswig_wrap.c -outdir ./ semanageswig_python.i ccache_cc -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/python-libsemanage/libsemanage-3.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rtorrent/norpc/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rtorrent/norpc/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/rtorrent/compile -j$(nproc) || make package/feeds/packages/rtorrent/compile V=s Compile.txt Applying ./patches/120-fix-ncurses.patch using plaintext: patching file src/display/canvas.h Applying ./patches/130-usleep.patch using plaintext: patching file src/thread_base.cc autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rtorrent/rpc/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_rtorrent/rpc/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/rtorrent/compile -j$(nproc) || make package/feeds/packages/rtorrent/compile V=s Compile.txt Applying ./patches/120-fix-ncurses.patch using plaintext: patching file src/display/canvas.h Applying ./patches/130-usleep.patch using plaintext: patching file src/thread_base.cc autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_schroot/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_schroot/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/schroot/compile -j$(nproc) || make package/feeds/packages/schroot/compile V=s Compile.txt Applying ./patches/01-openwrt.patch using plaintext: patching file configure.ac patching file bin/schroot-base/schroot-base-run.h patching file sbuild/sbuild-feature.h patching file etc/setup.d/20copyfiles patching file etc/setup.d/20nssdatabases patching file etc/profile-templates/all/all/nssdatabases patching file etc/profile-templates/buildd/all/nssdatabases patching file etc/profile-templates/default/all/nssdatabases patching file etc/profile-templates/desktop/all/nssdatabases patching file etc/profile-templates/default/linux/fstab patching file etc/profile-templates/desktop/linux/fstab autoreconf: Entering directory `.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_selinux-python/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_selinux-python/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/selinux-python/compile -j$(nproc) || make package/feeds/packages/selinux-python/compile V=s Compile.txt Applying ./patches/0001-sepolgen-adjust-data_dir.patch using plaintext: patching file sepolgen/src/sepolgen/defaults.py Applying ./patches/0002-sepolgen-don-t-hardcode-search-for-ausearch-in-sbin.patch using plaintext: patching file sepolgen/src/sepolgen/audit.py make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/selinux-python-3.2&amp;#39; make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/selinux-python-3.2/sepolicy&amp;#39; /openwrt/staging_dir/hostpkg/bin/python3.9 setup.py build running build running build_py creating build creating build/lib creating build/lib/sepolicy copying sepolicy/network.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_setools/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_setools/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/setools/compile -j$(nproc) || make package/feeds/packages/setools/compile V=s Compile.txt Applying ./patches/030-remove-host-paths.patch using plaintext: patching file setup.py Collecting Cython==0.29.21 Downloading Cython-0.29.21.tar.gz (2.1 MB) Skipping wheel build for Cython, due to binaries being disabled for it. Installing collected packages: Cython Running setup.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_strongswan/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_strongswan/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/strongswan/compile -j$(nproc) || make package/feeds/packages/strongswan/compile V=s Compile.txt Applying ./patches/101-musl-fixes.patch using plaintext: patching file src/libstrongswan/library.h patching file src/libstrongswan/musl.h patching file src/libcharon/plugins/kernel_netlink/kernel_netlink_ipsec.c patching file src/libcharon/plugins/kernel_netlink/kernel_netlink_net.c patching file src/libcharon/plugins/kernel_netlink/kernel_netlink_shared.c patching file src/libstrongswan/plugins/bliss/bliss_huffman.c Applying ./patches/203-uci.patch using plaintext: patching file src/libcharon/plugins/uci/uci_parser.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_subversion/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:33:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_subversion/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/subversion/compile -j$(nproc) || make package/feeds/packages/subversion/compile V=s Compile.txt Applying ./patches/301-cross-compilation-macos.patch using plaintext: patching file build/ac-macros/macosx.m4 patching file Makefile.in autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I build/ac-macros -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apache/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apache/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/apache/compile -j$(nproc) || make package/feeds/packages/apache/compile V=s Compile.txt Applying ./patches/001-cross-compile.patch using plaintext: patching file server/Makefile.in patching file configure.in patching file acinclude.m4 Applying ./patches/004-fix-scoreboard-location.patch using plaintext: patching file include/scoreboard.h Applying ./patches/005-httpd_conf.patch using plaintext: patching file docs/conf/httpd.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apparmor/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_apparmor/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/apparmor/compile -j$(nproc) || make package/feeds/packages/apparmor/compile V=s Compile.txt Applying ./patches/010-autoconf-libapparmor.patch using plaintext: patching file libraries/libapparmor/Makefile Applying ./patches/020-fix-ss-path.patch using plaintext: patching file utils/aa-unconfined Applying ./patches/030-remove-pynotify2-dep.patch using plaintext: patching file utils/aa-notify Applying ./patches/040-remove-bash-dep.patch using plaintext: patching file utils/aa-decode Applying .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_collectd/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_collectd/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/collectd/compile -j$(nproc) || make package/feeds/packages/collectd/compile V=s Compile.txt Applying ./patches/001-undefined-AM_PATH_LIBGCRYPT.patch using plaintext: patching file fake-am_path_libgcrypt.m4 Applying ./patches/100-rrdtool-add-rrasingle-option.patch using plaintext: patching file src/rrdtool.c patching file src/utils/rrdcreate/rrdcreate.c patching file src/utils/rrdcreate/rrdcreate.h Applying ./patches/140-fix-fqdnlookup.patch using plaintext: patching file src/daemon/configfile.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/gnutls/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/gnutls/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/exim/compile -j$(nproc) || make package/feeds/packages/exim/compile V=s Compile.txt Applying ./patches/010-allow-json-dynamic-lookup.patch using plaintext: patching file src/drtables.c Applying ./patches/030-openssl-deprecated.patch using plaintext: patching file src/dane-openssl.c patching file src/pdkim/signing.c patching file src/tls-openssl.c patching file src/tlscert-openssl.c Applying ./patches/100-localscan_dlopen.patch using plaintext: patching file src/config.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/ldap/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/ldap/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/exim/compile -j$(nproc) || make package/feeds/packages/exim/compile V=s Compile.txt Applying ./patches/010-allow-json-dynamic-lookup.patch using plaintext: patching file src/drtables.c Applying ./patches/030-openssl-deprecated.patch using plaintext: patching file src/dane-openssl.c patching file src/pdkim/signing.c patching file src/tls-openssl.c patching file src/tlscert-openssl.c Applying ./patches/100-localscan_dlopen.patch using plaintext: patching file src/config.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/nossl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/nossl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/exim/compile -j$(nproc) || make package/feeds/packages/exim/compile V=s Compile.txt Applying ./patches/010-allow-json-dynamic-lookup.patch using plaintext: patching file src/drtables.c Applying ./patches/030-openssl-deprecated.patch using plaintext: patching file src/dane-openssl.c patching file src/pdkim/signing.c patching file src/tls-openssl.c patching file src/tlscert-openssl.c Applying ./patches/100-localscan_dlopen.patch using plaintext: patching file src/config.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_exim/openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/exim/compile -j$(nproc) || make package/feeds/packages/exim/compile V=s Compile.txt Applying ./patches/010-allow-json-dynamic-lookup.patch using plaintext: patching file src/drtables.c Applying ./patches/030-openssl-deprecated.patch using plaintext: patching file src/dane-openssl.c patching file src/pdkim/signing.c patching file src/tls-openssl.c patching file src/tlscert-openssl.c Applying ./patches/100-localscan_dlopen.patch using plaintext: patching file src/config.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_idevicerestore/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_idevicerestore/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/idevicerestore/compile -j$(nproc) || make package/feeds/packages/idevicerestore/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking target system type... mips-openwrt-linux-gnu checking for a BSD-compatible install.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_knot-resolver/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_knot-resolver/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/knot-resolver/compile -j$(nproc) || make package/feeds/packages/knot-resolver/compile V=s Compile.txt Applying ./patches/010-fix-lmdb.patch using plaintext: patching file meson.build Applying ./patches/030-fix-policy-hack.patch using plaintext: patching file modules/policy/policy.lua The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-mips_24kc_musl/knot-resolver-5.3.2 Build dir: /openwrt/build_dir/target-mips_24kc_musl/knot-resolver-5.3.2/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_knot/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_knot/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/knot/compile -j$(nproc) || make package/feeds/packages/knot/compile V=s Compile.txt Applying ./patches/01_zscanner_tests.patch using plaintext: patching file tests/libzscanner/test_zscanner.in Applying ./patches/02_knot.conf.patch using plaintext: patching file samples/knot.sample.conf.in autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libimobiledevice/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libimobiledevice/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libimobiledevice/compile -j$(nproc) || make package/feeds/packages/libimobiledevice/compile V=s Compile.txt Applying ./patches/020-config.patch using plaintext: patching file common/userpref.c Applying ./patches/100-ios14.patch using plaintext: patching file src/mobilebackup2.c Applying ./patches/110-iOS14.patch using plaintext: patching file src/screenshotr.c Applying ./patches/120-iOS14.patch using plaintext: patching file include/libimobiledevice/debugserver.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libnetconf2/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libnetconf2/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libnetconf2/compile -j$(nproc) || make package/feeds/packages/libnetconf2/compile V=s Compile.txt Applying ./patches/001-cmake_not_updated.patch using plaintext: patching file CMakeLists.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netifyd/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netifyd/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/netifyd/compile -j$(nproc) || make package/feeds/packages/netifyd/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force ${ACLOCAL_FLAGS} -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netopeer2/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_netopeer2/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/netopeer2/compile -j$(nproc) || make package/feeds/packages/netopeer2/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-dio/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-dio/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-dio/compile -j$(nproc) || make package/feeds/packages/php7-pecl-dio/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:41: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/dio-0.2.0/.prepared_52f39c7e9ea7848055d5bfc6086ed710_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pulseaudio/avahi/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pulseaudio/avahi/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pulseaudio/compile -j$(nproc) || make package/feeds/packages/pulseaudio/compile V=s Compile.txt Applying ./patches/001-no_default_64mb_alloc.patch using plaintext: patching file src/pulsecore/memblock.c Applying ./patches/010-iconv.patch using plaintext: patching file meson.build Applying ./patches/020-doxygen.patch using plaintext: patching file meson.build The Meson build system Version: 0.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pulseaudio/noavahi/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pulseaudio/noavahi/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pulseaudio/compile -j$(nproc) || make package/feeds/packages/pulseaudio/compile V=s Compile.txt Applying ./patches/001-no_default_64mb_alloc.patch using plaintext: patching file src/pulsecore/memblock.c Applying ./patches/010-iconv.patch using plaintext: patching file meson.build Applying ./patches/020-doxygen.patch using plaintext: patching file meson.build The Meson build system Version: 0.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_quickjspp/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_quickjspp/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/quickjspp/compile -j$(nproc) || make package/feeds/packages/quickjspp/compile V=s Compile.txt Makefile:46: WARNING: skipping quickjspp -- package has no install section -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_snort/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_snort/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/snort/compile -j$(nproc) || make package/feeds/packages/snort/compile V=s Compile.txt Applying ./patches/001-compile.patch using plaintext: File configure.in is read-only; trying to patch anyway patching file configure.in Applying ./patches/002-fix_include.patch using plaintext: File configure.in is read-only; trying to patch anyway patching file configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_spoofer/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_spoofer/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/spoofer/compile -j$(nproc) || make package/feeds/packages/spoofer/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls, --enable-prober configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_subconverter/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_subconverter/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/subconverter/compile -j$(nproc) || make package/feeds/packages/subconverter/compile V=s Compile.txt -- The CXX compiler identification is GNU 8.4.0 -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_syslog-ng/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_syslog-ng/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/syslog-ng/compile -j$(nproc) || make package/feeds/packages/syslog-ng/compile V=s Compile.txt configure: WARNING: you should use --build, --host, --target configure: loading site script /openwrt/include/site/mips checking whether make supports nested variables... yes checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_sysrepo/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_sysrepo/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/sysrepo/compile -j$(nproc) || make package/feeds/packages/sysrepo/compile V=s Compile.txt Applying ./patches/001-add-generated-protobufc-files.patch using plaintext: patching file src/common/sysrepo.pb-c.c patching file src/common/sysrepo.pb-c.h Applying ./patches/006-update-generated-protobufc-files.patch using plaintext: patching file src/common/sysrepo.pb-c.c patching file src/common/sysrepo.pb-c.h -- The C compiler identification is GNU 8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_usbmuxd/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_usbmuxd/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/usbmuxd/compile -j$(nproc) || make package/feeds/packages/usbmuxd/compile V=s Compile.txt Applying ./patches/010-config.patch using plaintext: patching file src/conf.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/basic-openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:31:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/basic-openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Makefile:706: WARNING: skipping wpa-cli -- package has no install section Applying ./patches/001-wolfssl-init-RNG-with-ECC-key.patch using plaintext: patching file src/crypto/crypto_wolfssl.c Applying ./patches/010-mesh-Allow-DFS-channels-to-be-selected-if-dfs-is-ena.patch using plaintext: patching file wpa_supplicant/wpa_supplicant.c Applying ./patches/011-mesh-use-deterministic-channel-on-channel-switch.patch using plaintext: patching file src/ap/dfs.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/full-openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:31:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/full-openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Makefile:706: WARNING: skipping wpa-cli -- package has no install section Applying ./patches/001-wolfssl-init-RNG-with-ECC-key.patch using plaintext: patching file src/crypto/crypto_wolfssl.c Applying ./patches/010-mesh-Allow-DFS-channels-to-be-selected-if-dfs-is-ena.patch using plaintext: patching file wpa_supplicant/wpa_supplicant.c Applying ./patches/011-mesh-use-deterministic-channel-on-channel-switch.patch using plaintext: patching file src/ap/dfs.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/supplicant-full-openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:31:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/supplicant-full-openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Makefile:707: WARNING: skipping hostapd-utils -- package has no install section make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/hostapd-supplicant-full-openssl/hostapd-2021-05-22-b102f19b/wpa_supplicant&amp;#39; LD wpa_cli ../src/crypto/tls_openssl.c:19:10: fatal error: openssl/ssl.h: No such file or directory #include &amp;lt;openssl/ssl.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/supplicant-mesh-openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:31:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/supplicant-mesh-openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Makefile:707: WARNING: skipping hostapd-utils -- package has no install section Applying ./patches/001-wolfssl-init-RNG-with-ECC-key.patch using plaintext: patching file src/crypto/crypto_wolfssl.c Applying ./patches/010-mesh-Allow-DFS-channels-to-be-selected-if-dfs-is-ena.patch using plaintext: patching file wpa_supplicant/wpa_supplicant.c Applying ./patches/011-mesh-use-deterministic-channel-on-channel-switch.patch using plaintext: patching file src/ap/dfs.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/wpad-basic-openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:31:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/wpad-basic-openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Applying ./patches/001-wolfssl-init-RNG-with-ECC-key.patch using plaintext: patching file src/crypto/crypto_wolfssl.c Applying ./patches/010-mesh-Allow-DFS-channels-to-be-selected-if-dfs-is-ena.patch using plaintext: patching file wpa_supplicant/wpa_supplicant.c Applying ./patches/011-mesh-use-deterministic-channel-on-channel-switch.patch using plaintext: patching file src/ap/dfs.c patching file src/drivers/driver_nl80211.c Applying ./patches/020-mesh-make-forwarding-configurable.patch using plaintext: patching file src/ap/ap_config.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/wpad-full-openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:31:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/wpad-full-openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Applying ./patches/001-wolfssl-init-RNG-with-ECC-key.patch using plaintext: patching file src/crypto/crypto_wolfssl.c Applying ./patches/010-mesh-Allow-DFS-channels-to-be-selected-if-dfs-is-ena.patch using plaintext: patching file wpa_supplicant/wpa_supplicant.c Applying ./patches/011-mesh-use-deterministic-channel-on-channel-switch.patch using plaintext: patching file src/ap/dfs.c patching file src/drivers/driver_nl80211.c Applying ./patches/020-mesh-make-forwarding-configurable.patch using plaintext: patching file src/ap/ap_config.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/wpad-mesh-openssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:31:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_hostapd/wpad-mesh-openssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/hostapd/compile -j$(nproc) || make package/feeds/base/hostapd/compile V=s Compile.txt Applying ./patches/001-wolfssl-init-RNG-with-ECC-key.patch using plaintext: patching file src/crypto/crypto_wolfssl.c Applying ./patches/010-mesh-Allow-DFS-channels-to-be-selected-if-dfs-is-ena.patch using plaintext: patching file wpa_supplicant/wpa_supplicant.c Applying ./patches/011-mesh-use-deterministic-channel-on-channel-switch.patch using plaintext: patching file src/ap/dfs.c patching file src/drivers/driver_nl80211.c Applying ./patches/020-mesh-make-forwarding-configurable.patch using plaintext: patching file src/ap/ap_config.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_elektra/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:31:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_elektra/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ffmpeg/custom/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:31:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ffmpeg/custom/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/mips_24kc/packages/ffmpeg-custom_4.3.2-1_mips_24kc.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mariadb/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:31:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mariadb/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mariadb/compile -j$(nproc) || make package/feeds/packages/mariadb/compile V=s Compile.txt Applying ./patches/100-fix_hostname.patch using plaintext: patching file scripts/mysql_install_db.sh Applying ./patches/110-pcre.cmake.patch using plaintext: patching file cmake/pcre.cmake Applying ./patches/130-c11_atomics.patch using plaintext: patching file configure.cmake patching file mysys/CMakeLists.txt patching file sql/CMakeLists.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mpd/full/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:31:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mpd/full/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mpd/compile -j$(nproc) || make package/feeds/packages/mpd/compile V=s Compile.txt Applying ./patches/010-iconv.patch using plaintext: patching file src/lib/icu/meson.build Applying ./patches/020-string-view.patch using plaintext: patching file src/tag/GenParseName.cxx Applying ./patches/030-no-avfilter.patch using plaintext: patching file src/lib/ffmpeg/meson.build The Meson build system Version: 0.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mpd/mini/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:31:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_mpd/mini/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mpd/compile -j$(nproc) || make package/feeds/packages/mpd/compile V=s Compile.txt Applying ./patches/010-iconv.patch using plaintext: patching file src/lib/icu/meson.build Applying ./patches/020-string-view.patch using plaintext: patching file src/tag/GenParseName.cxx Applying ./patches/030-no-avfilter.patch using plaintext: patching file src/lib/ffmpeg/meson.build The Meson build system Version: 0.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tor/basic/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:31:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tor/basic/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tor/compile -j$(nproc) || make package/feeds/packages/tor/compile V=s Compile.txt Applying ./patches/001-torrc.patch using plaintext: patching file src/config/torrc.sample.in autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_kea/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:30:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_kea/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/kea/compile -j$(nproc) || make package/feeds/packages/kea/compile V=s Compile.txt Applying ./patches/001-fix-cross-compile.patch using plaintext: patching file configure.ac Applying ./patches/002-fix-host-compile.patch using plaintext: patching file m4macros/ax_crypto.m4 Applying ./patches/003-no-test-compile.patch using plaintext: patching file src/bin/admin/Makefile.am patching file src/bin/agent/Makefile.am patching file src/bin/d2/Makefile.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pdns/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:30:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pdns/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pdns/compile -j$(nproc) || make package/feeds/packages/pdns/compile V=s Compile.txt Applying ./patches/100-pdns-disable-pdns.conf-dist.patch using plaintext: patching file pdns/Makefile.am autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libevhtp/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:30:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libevhtp/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libevhtp/compile -j$(nproc) || make package/feeds/packages/libevhtp/compile V=s Compile.txt + curl -f --connect-timeout 20 --retry 5 --location --insecure https://codeload.github.com/criticalstack/libevhtp/tar.gz/1.2.18?/libevhtp-1.2.18.tar.gz % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 13210 0 13210 0 0 100k 0 --:--:-- --:--:-- --:--:-- 99k 100 203k 0 203k 0 0 1328k 0 --:--:-- --:--:-- --:--:-- 1319k Applying .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libtorrent-rasterbar/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:30:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libtorrent-rasterbar/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libtorrent-rasterbar/compile -j$(nproc) || make package/feeds/packages/libtorrent-rasterbar/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pillow/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:30:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pillow/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pillow/compile -j$(nproc) || make package/feeds/packages/pillow/compile V=s Compile.txt running build_ext building &amp;#39;PIL._imaging&amp;#39; extension creating build creating build/temp.-3.9 creating build/temp.-3.9/src creating build/temp.-3.9/src/libImaging ccache_cc -Wno-unused-result -Wsign-compare -DNDEBUG -g -O3 -Wall -O2 -I/openwrt/staging_dir/host/include -I/openwrt/staging_dir/hostpkg/include -I/openwrt/staging_dir/target-mips_24kc_musl/host/include -O2 -I/openwrt/staging_dir/host/include -I/openwrt/staging_dir/hostpkg/include -I/openwrt/staging_dir/target-mips_24kc_musl/host/include -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/pypi/Pillow-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-dateutil/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:30:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-dateutil/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-dateutil/compile -j$(nproc) || make package/feeds/packages/python-dateutil/compile V=s Compile.txt WARNING: The wheel package is not available. ERROR: Exception: Traceback (most recent call last): File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.9/site-packages/pip/_internal/cli/base_command.py&amp;#34;, line 180, in _main status = self.run(options, args) File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.9/site-packages/pip/_internal/cli/req_command.py&amp;#34;, line 204, in wrapper return func(self, options, args) File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-lxml/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:30:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-lxml/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-lxml/compile -j$(nproc) || make package/feeds/packages/python-lxml/compile V=s Compile.txt Building lxml version 4.6.3. Building without Cython. Building against libxml2 2.9.12 and libxslt 1.1.34 Building against libxml2/libxslt in the following directory: /openwrt/staging_dir/target-mips_24kc_musl/usr/lib running install running build running build_py creating build creating build/lib.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_qbittorrent-enhanced-edition/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:30:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_qbittorrent-enhanced-edition/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt Applying ./patches/001-remove-host-include-dir.patch using plaintext: patching file conf.pri.in configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for mips-openwrt-linux-gcc... ccache_cc checking whether the C compiler works.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_qt5/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:30:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_qt5/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qt5/compile -j$(nproc) || make package/feeds/packages/qt5/compile V=s Compile.txt + cd qtbase + /openwrt/build_dir/target-mips_24kc_musl/qt-everywhere-src-5.15.2/qtbase/configure -top-level -prefix /usr -extprefix /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.4.0_musl -sysroot /openwrt/staging_dir/target-mips_24kc_musl -plugindir /usr/lib/Qt/plugins -R /usr/lib -I /openwrt/staging_dir/target-mips_24kc_musl/usr/include -L /openwrt/staging_dir/target-mips_24kc_musl/usr/lib -xplatform linux-openwrt-g++ -opensource -confirm-license -system-doubleconversion -system-pcre -system-zlib -openssl-runtime -sql-sqlite -sqlite -no-cups -no-freetype -no-harfbuzz -no-gtk -no-opengl -no-opengles3 -no-angle -no-openvg -no-dbus -no-directfb -no-eglfs -no-feature-getentropy -no-iconv -no-kms -no-pch -no-libudev -no-mtdev -no-tslib -no-libpng -no-libjpeg -no-sql-db2 -no-sql-ibase -no-sql-mysql -no-sql-oci -no-sql-odbc -no-sql-psql -no-sql-sqlite2 -no-sql-tds -no-strip -no-xcb -no-gui -no-widgets -no-glib -make libs -nomake examples -nomake tests -nomake tools -skip 3d -skip activeqt -skip charts -skip connectivity -skip datavis3d -skip declarative -skip doc -skip gamepad -skip imageformats -skip location -skip networkauth -skip multimedia -skip purchasing -skip remoteobjects -skip script -skip sensors -skip serialbus -skip serialport -skip speech -skip svg -skip wayland -skip webengine -skip websockets -skip webchannel -skip xmlpatterns -v Creating qmake.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_seafile-ccnet/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:30:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_seafile-ccnet/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-ccnet/compile -j$(nproc) || make package/feeds/packages/seafile-ccnet/compile V=s Compile.txt Applying ./patches/010-Makefile.patch using plaintext: patching file lib/Makefile.am Applying ./patches/011-no-python-compile.patch using plaintext: patching file python/ccnet/Makefile.am Applying ./patches/020-Remove-API-deprecated-in-openssl-1.1.patch using plaintext: patching file lib/rsa.c patching file net/common/processors/keepalive-proc.c patching file net/common/processors/keepalive2-proc.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_seafile-seahub/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:30:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_seafile-seahub/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-seahub/compile -j$(nproc) || make package/feeds/packages/seafile-seahub/compile V=s Compile.txt Applying ./patches/020-Makefile-fixes.patch using plaintext: patching file Makefile Applying ./patches/030-uci-conf.patch using plaintext: patching file seahub/settings.py Applying ./patches/040-manage-shebang.patch using plaintext: patching file manage.py Collecting Django==2.2.24 Downloading Django-2.2.24.tar.gz (9.2 MB) Collecting pytz==2021.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_seafile-server/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:30:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_seafile-server/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-server/compile -j$(nproc) || make package/feeds/packages/seafile-server/compile V=s Compile.txt Applying ./patches/010-configure-libevent_openssl.patch using plaintext: patching file configure.ac Applying ./patches/011-configure-liconv.patch using plaintext: patching file configure.ac Applying ./patches/012-automake-no-python-compile.patch using plaintext: patching file python/seafile/Makefile.am patching file python/seaserv/Makefile.am Applying ./patches/020-installpath.patch using plaintext: patching file controller/seafile-controller.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gnunet-fuse/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:29:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gnunet-fuse/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gnunet-fuse/compile -j$(nproc) || make package/feeds/packages/gnunet-fuse/compile V=s Compile.txt Applying ./patches/001-musl-compat.patch using plaintext: patching file src/fuse/mutex.c Copying file ABOUT-NLS Copying file config.rpath Copying file m4/gettext.m4 Copying file m4/host-cpu-c-abi.m4 Copying file m4/iconv.m4 Copying file m4/intlmacosx.m4 Copying file m4/lib-ld.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gnunet/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:29:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gnunet/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gnunet/compile -j$(nproc) || make package/feeds/packages/gnunet/compile V=s Compile.txt Applying ./patches/100-fix-opus-and-pulse-library-detection.patch using plaintext: patching file configure.ac Hunk #1 succeeded at 837 (offset 24 lines). Hunk #2 succeeded at 882 (offset 24 lines). Copying file ABOUT-NLS Copying file build-aux/config.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_samba4/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:29:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_samba4/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/samba4/compile -j$(nproc) || make package/feeds/packages/samba4/compile V=s Compile.txt Applying ./patches/001-samba-4.4.0-pam.patch using plaintext: patching file source3/wscript Applying ./patches/002-dnsserver-4.7.0.patch using plaintext: patching file source4/dns_server/wscript_build Applying ./patches/003-getpwent_r.patch using plaintext: patching file source4/torture/local/nss_tests.c Applying ./patches/004-missing-headers.patch using plaintext: patching file lib/param/loadparm.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_coova-chilli/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:28:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_coova-chilli/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_git/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:28:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_git/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/git/compile -j$(nproc) || make package/feeds/packages/git/compile V=s Compile.txt Applying ./patches/100-configure_for_crosscompiling.patch using plaintext: patching file configure.ac Applying ./patches/200-imapsend_without_curl.patch using plaintext: patching file Makefile Applying ./patches/300-openssl-deprecated.patch using plaintext: patching file imap-send.c Applying ./patches/310-fix-uname-detection-for-crosscompiling using plaintext: patching file config.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_minidlna/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:28:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_minidlna/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/minidlna/compile -j$(nproc) || make package/feeds/packages/minidlna/compile V=s Compile.txt Applying ./patches/001-dont-build-po-files.patch using plaintext: patching file Makefile.am patching file configure.ac Applying ./patches/005-added-support-RMVB.patch using plaintext: patching file metadata.c patching file upnpglobalvars.h patching file utils.c Applying ./patches/020-wrap_container_definitions_into_a_structure.patch using plaintext: patching file containers.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_perl-www-curl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:28:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_perl-www-curl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-www-curl/compile -j$(nproc) || make package/feeds/packages/perl-www-curl/compile V=s Compile.txt Applying ./patches/100-perl-www-curl_disable_curl-config_hack.patch using plaintext: patching file Makefile.PL Applying ./patches/101-skip-preprocessor-symbol.path using plaintext: patching file Makefile.PL Applying ./patches/200-fix_default_lflags.patch using plaintext: patching file Makefile.PL Applying ./patches/210-curl_7.66_compat.patch using plaintext: patching file Curl.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_xtables-addons/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:28:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_xtables-addons/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_dahdi-tools/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:28:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_dahdi-tools/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_libpri/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:28:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_libpri/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_i2pd/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:28:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_i2pd/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/i2pd/compile -j$(nproc) || make package/feeds/packages/i2pd/compile V=s Compile.txt Applying ./patches/010-config.patch using plaintext: patching file contrib/i2pd.conf make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/i2pd-2.38.0&amp;#39; make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/i2pd-2.38.0&amp;#39; make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/i2pd-2.38.0&amp;#39; ccache_cxx -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/i2pd-2.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_poco/all/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:28:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_poco/all/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/poco/compile -j$(nproc) || make package/feeds/packages/poco/compile V=s Compile.txt Applying ./patches/100-configure.patch using plaintext: patching file configure Applying ./patches/200-strerror.patch using plaintext: patching file Foundation/src/Error.cpp Configured for Linux make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/poco-all/poco-1.10.1-all&amp;#39; make -C /openwrt/build_dir/target-mips_24kc_musl/poco-all/poco-1.10.1-all/Foundation make[5]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/poco-all/poco-1.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_loudmouth/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:27:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_loudmouth/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/loudmouth/compile -j$(nproc) || make package/feeds/packages/loudmouth/compile V=s Compile.txt Applying ./patches/900-disable-docs-examples-tests.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_aircrack-ng/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:27:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_aircrack-ng/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/aircrack-ng/compile -j$(nproc) || make package/feeds/packages/aircrack-ng/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I build/m4/stubs -I build/m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_aria2/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:27:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_aria2/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/aria2/compile -j$(nproc) || make package/feeds/packages/aria2/compile V=s Compile.txt configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking target system type... mips-openwrt-linux-gnu checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_dnsdist/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:27:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_dnsdist/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/dnsdist/compile -j$(nproc) || make package/feeds/packages/dnsdist/compile V=s Compile.txt Applying ./patches/010-time_t-check.patch using plaintext: patching file configure configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_forked-daapd/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:27:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_forked-daapd/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/forked-daapd/compile -j$(nproc) || make package/feeds/packages/forked-daapd/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_freeradius3/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:27:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_freeradius3/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/freeradius3/compile -j$(nproc) || make package/feeds/packages/freeradius3/compile V=s Compile.txt Applying ./patches/001-fix-cert-expiry.patch using plaintext: patching file raddb/certs/ca.cnf patching file raddb/certs/client.cnf patching file raddb/certs/server.cnf Applying ./patches/002-disable-session-cache-CVE-2017-9148.patch using plaintext: patching file src/main/tls.c Applying ./patches/003-freeradius-fix-error-for-expansion-of-macro.patch using plaintext: patching file src/include/threads.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gst1-libav/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:27:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gst1-libav/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gst1-libav/compile -j$(nproc) || make package/feeds/packages/gst1-libav/compile V=s Compile.txt Applying ./patches/010-distutils.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-mips_24kc_musl/gst-libav-1.18.4 Build dir: /openwrt/build_dir/target-mips_24kc_musl/gst-libav-1.18.4/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hs20/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:27:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_hs20/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/hs20/compile -j$(nproc) || make package/feeds/packages/hs20/compile V=s Compile.txt Applying ./patches/050-use-dm_ddf-v1_3_dtd.patch using plaintext: patching file hs20/server/spp_server.c Applying ./patches/100-fix-hs20_spp_server-path.patch using plaintext: patching file hs20/server/www/spp.php Applying ./patches/200-adapt-config-php.patch using plaintext: patching file hs20/server/www/config.php Applying ./patches/300-paths-in-ca-setup-sh.patch using plaintext: patching file hs20/server/ca/setup.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nfs-kernel-server/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:27:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nfs-kernel-server/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nfs-kernel-server/compile -j$(nproc) || make package/feeds/packages/nfs-kernel-server/compile V=s Compile.txt Applying ./patches/101-musl-getservbyport.patch using plaintext: patching file utils/statd/rmtcall.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking build system type... x86_64-pc-linux-gnu checking host system type... mips-openwrt-linux-gnu checking for a BSD-compatible install.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pdns-recursor/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:27:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_pdns-recursor/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pdns-recursor/compile -j$(nproc) || make package/feeds/packages/pdns-recursor/compile V=s Compile.txt Applying ./patches/010-time_t-check.patch using plaintext: patching file configure.ac Applying ./patches/100-disable-recursor.conf-dist.patch using plaintext: patching file Makefile.am Applying ./patches/200-boost_thread_fix.patch using plaintext: patching file m4/boost.m4 Applying ./patches/300-boost-dont-search-host-dirs.patch using plaintext: patching file m4/boost.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_perl-mail-spamassassin/ssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:27:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_perl-mail-spamassassin/ssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-mail-spamassassin/compile -j$(nproc) || make package/feeds/packages/perl-mail-spamassassin/compile V=s Compile.txt not installing man pages in man1; no man1 dir found at - line 275. What email address or URL should be used in the suspected-spam report text for users who want more information on your filter installation?</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_squid/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:27:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_squid/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/squid/compile -j$(nproc) || make package/feeds/packages/squid/compile V=s Compile.txt Applying ./patches/001-glibc-compile.patch using plaintext: patching file src/tools.cc Applying ./patches/010-no-buildbxxflags.patch using plaintext: patching file src/Makefile.am autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_zabbix/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:27:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_zabbix/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/zabbix/compile -j$(nproc) || make package/feeds/packages/zabbix/compile V=s Compile.txt Applying ./patches/010-change-agentd-config.patch using plaintext: patching file conf/zabbix_agentd.conf Applying ./patches/110-reproducible-builds.patch using plaintext: patching file src/libs/zbxcommon/str.c configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_mt7601u-ap/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_mt7601u-ap/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt7601u-ap/compile -j$(nproc) || make package/feeds/base/mt7601u-ap/compile V=s Compile.txt Applying ./patches/010-fix-control-reaches-end-of-non-void.patch using plaintext: patching file mcu/rtmp_mcu.c make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/mt7601u-ap-2020-05-01-62430742/os/linux/../../os/linux/rt_profile.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/mt7601u-ap-2020-05-01-62430742/os/linux/../../ap/ap_mbss.o CC [M] /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/mt7601u-ap-2020-05-01-62430742/os/linux/../../ap/ap.o /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/mt7601u-ap-2020-05-01-62430742/os/linux/../../ap/ap.c: In function &amp;#39;DOT1X_InternalCmdAction&amp;#39;: /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/mt7601u-ap-2020-05-01-62430742/os/linux/../../ap/ap.c:2217:2: warning: ISO C90 forbids variable length array &amp;#39;FrameBuf&amp;#39; [-Wvla] UCHAR FrameBuf[frame_len]; ^~~~~ /openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/mt7601u-ap-2020-05-01-62430742/os/linux/.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_luci_luci-app-nginx-pingos/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_luci_luci-app-nginx-pingos/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_alpine/ssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_alpine/ssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/alpine/compile -j$(nproc) || make package/feeds/packages/alpine/compile V=s Compile.txt Applying ./patches/010-cdefs.patch using plaintext: patching file regex/regex.h Applying ./patches/020-reproducible.patch using plaintext: patching file pico/blddate.c configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_chaosvpn/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_chaosvpn/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/chaosvpn/compile -j$(nproc) || make package/feeds/packages/chaosvpn/compile V=s Compile.txt Applying ./patches/0001-OpenSSL-1.1.0-compile-fix.patch using plaintext: patching file crypto.c Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file crypto.c Applying ./patches/020-cdefs.patch using plaintext: patching file ar.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/chaosvpn-2.19&amp;#39; yacc -d cvconf.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_davfs2/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_davfs2/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/davfs2/compile -j$(nproc) || make package/feeds/packages/davfs2/compile V=s Compile.txt Applying ./patches/010-main_code_fix.patch using plaintext: patching file src/webdav.c Applying ./patches/030-realpath.patch using plaintext: patching file src/mount_davfs.c patching file src/umount_davfs.c Applying ./patches/040-sys-select.patch using plaintext: patching file src/dav_fuse.c Applying ./patches/050-sys-types.patch using plaintext: patching file src/kernel_interface.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_irssi/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_irssi/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/irssi/compile -j$(nproc) || make package/feeds/packages/irssi/compile V=s Compile.txt Applying ./patches/010-Fix-finding-OpenSSL-when-1.1-with-deprecated-APIs-di.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_jose/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_jose/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jose/compile -j$(nproc) || make package/feeds/packages/jose/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-mips_24kc_musl/jose-11 Build dir: /openwrt/build_dir/target-mips_24kc_musl/jose-11/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_keepalived/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_keepalived/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/keepalived/compile -j$(nproc) || make package/feeds/packages/keepalived/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for mips-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libesmtp/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libesmtp/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libesmtp/compile -j$(nproc) || make package/feeds/packages/libesmtp/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-mips_24kc_musl/libESMTP-1.1.0 Build dir: /openwrt/build_dir/target-mips_24kc_musl/libESMTP-1.1.0/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_lighttpd/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_lighttpd/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/lighttpd/compile -j$(nproc) || make package/feeds/packages/lighttpd/compile V=s Compile.txt Applying ./patches/010-meson-lua.patch using plaintext: patching file src/meson.build Applying ./patches/020-meson-zstd.patch using plaintext: patching file meson_options.txt Applying ./patches/030-101-upgrade-w-content-length.patch using plaintext: patching file src/http-header-glue.c Applying ./patches/040-mod_auth-close-http2-after-bad-pass.patch using plaintext: patching file src/connections.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_neon/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_neon/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/neon/compile -j$(nproc) || make package/feeds/packages/neon/compile V=s Compile.txt configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking for mips-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nsd/ssl/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_nsd/ssl/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/nsd/compile -j$(nproc) || make package/feeds/packages/nsd/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls, --with-ipv6 configure: loading site script /openwrt/include/site/mips checking for mips-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ocserv/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_ocserv/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ocserv/compile -j$(nproc) || make package/feeds/packages/ocserv/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking pkg-config is at least version 0.9.0... yes checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_open-iscsi/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_open-iscsi/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/open-iscsi/compile -j$(nproc) || make package/feeds/packages/open-iscsi/compile V=s Compile.txt Applying ./patches/0002-idmb_rec_write-check-for-tpgt-first.patch using plaintext: patching file usr/idbm.c Applying ./patches/0003-idbm_rec_write-seperate-old-and-new-style-writes.patch using plaintext: patching file usr/idbm.c Applying ./patches/0004-idbw_rec_write-pick-tpgt-from-existing-record.patch using plaintext: patching file usr/idbm.c Applying ./patches/0015-remove-the-offload-boot-supported-ifdef.patch using plaintext: patching file usr/iface.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opendkim/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opendkim/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/opendkim/compile -j$(nproc) || make package/feeds/packages/opendkim/compile V=s Compile.txt Applying ./patches/010-openssl_1.1_compat.patch using plaintext: patching file configure.ac patching file opendkim/opendkim-crypto.c patching file libopendkim/dkim.c patching file opendkim/opendkim-testkey.c patching file opendkim/opendkim.c Applying ./patches/020-uclibc.patch using plaintext: patching file libopendkim/dkim-dns.c autoreconf: Entering directory `.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opus-tools/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opus-tools/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/opus-tools/compile -j$(nproc) || make package/feeds/packages/opus-tools/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking whether make supports nested variables... yes checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opusfile/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_opusfile/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/opusfile/compile -j$(nproc) || make package/feeds/packages/opusfile/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls, --without-flac configure: loading site script /openwrt/include/site/mips checking for mips-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_oscam/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_oscam/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/oscam/compile -j$(nproc) || make package/feeds/packages/oscam/compile V=s Compile.txt [WARN] Unknown parameter: --target=mips-openwrt-linux [WARN] Unknown parameter: --host=mips-openwrt-linux [WARN] Unknown parameter: --build=x86_64-pc-linux-gnu [WARN] Unknown parameter: --program-prefix= [WARN] Unknown parameter: --program-suffix= [WARN] Unknown parameter: --prefix=/usr [WARN] Unknown parameter: --exec-prefix=/usr [WARN] Unknown parameter: --bindir=/usr/bin [WARN] Unknown parameter: --sbindir=/usr/sbin [WARN] Unknown parameter: --libexecdir=/usr/lib [WARN] Unknown parameter: --sysconfdir=/etc [WARN] Unknown parameter: --datadir=/usr/share [WARN] Unknown parameter: --localstatedir=/var [WARN] Unknown parameter: --mandir=/usr/man [WARN] Unknown parameter: --infodir=/usr/info [WARN] Unknown parameter: --disable-nls Disable WITH_SSL Disable CARDREADER_SC8IN1 Disable CARDREADER_SMARGO Enable TOUCH Enable CS_ANTICASC Enable CW_CYCLE_CHECK Enable CLOCKFIX Enable MODULE_CAMD33 Enable MODULE_RADEGAST Enable MODULE_SERIAL Enable MODULE_CONSTCW Enable MODULE_PANDORA Enable MODULE_GHTTP Enable CARDREADER_SC8IN1 Enable CARDREADER_MP35 Enable CARDREADER_SMARGO Enable CARDREADER_DRECAS make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/oscam-2020-12-12-aafda4bc&amp;#39; fatal: not a git repository (or any parent up to mount point /) Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_postfix/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_postfix/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/postfix/compile -j$(nproc) || make package/feeds/packages/postfix/compile V=s Compile.txt Applying ./patches/200-manpages.patch using plaintext: patching file conf/post-install patching file postfix-install Applying ./patches/300-bdb_hash_segfault.patch using plaintext: patching file src/util/dict_db.c Applying ./patches/400-cdb.patch using plaintext: patching file src/util/sys_defs.h Applying ./patches/500-crosscompile.patch using plaintext: patching file makedefs Applying .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-psycopg2/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-psycopg2/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-psycopg2/compile -j$(nproc) || make package/feeds/packages/python-psycopg2/compile V=s Compile.txt running install running build running build_py creating build creating build/lib.-3.9 creating build/lib.-3.9/psycopg2 copying lib/_lru_cache.py -&amp;gt; build/lib.-3.9/psycopg2 copying lib/_range.py -&amp;gt; build/lib.-3.9/psycopg2 copying lib/extras.py -&amp;gt; build/lib.-3.9/psycopg2 copying lib/sql.py -&amp;gt; build/lib.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_quassel-irssi/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_quassel-irssi/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/quassel-irssi/compile -j$(nproc) || make package/feeds/packages/quassel-irssi/compile V=s Compile.txt Applying ./patches/001-respect-cflags.patch using plaintext: patching file core/Makefile Applying ./patches/002-use-cc-var.patch using plaintext: patching file core/Makefile Applying ./patches/003-use-pkgconfig-ldflags-quasselc.patch using plaintext: patching file core/Makefile Applying ./patches/010-Get-compatible-with-potential-irssi-abi-8-and-drop-p.patch using plaintext: patching file core/Makefile patching file core/quassel-net.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_softethervpn/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_softethervpn/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/softethervpn/compile -j$(nproc) || make package/feeds/packages/softethervpn/compile V=s Compile.txt Applying ./patches/103-noeucjp.patch using plaintext: patching file src/Mayaqua/Internat.c Applying ./patches/110-no-m64.patch using plaintext: patching file src/makefiles/linux_64bit.mak Applying ./patches/120-openssl-deprecated.patch using plaintext: patching file src/Mayaqua/Encrypt.c patching file src/Mayaqua/Encrypt.h patching file src/Mayaqua/Network.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_spice/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_spice/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/spice/compile -j$(nproc) || make package/feeds/packages/spice/compile V=s Compile.txt Applying ./patches/010-doxy.patch using plaintext: patching file meson.build Applying ./patches/030-include-generated-code.patch using plaintext: patching file subprojects/spice-common/common/meson.build Applying ./patches/040-only-server.patch using plaintext: patching file meson.build Applying ./patches/050-no-mkenums.patch using plaintext: patching file server/meson.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tang/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tang/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tang/compile -j$(nproc) || make package/feeds/packages/tang/compile V=s Compile.txt Applying ./patches/010-http.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-mips_24kc_musl/tang-10 Build dir: /openwrt/build_dir/target-mips_24kc_musl/tang-10/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tinc/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tinc/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tinc/compile -j$(nproc) || make package/feeds/packages/tinc/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I m4 fatal: not a git repository (or any parent up to mount point /) Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tmate-ssh-server/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tmate-ssh-server/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tmate-ssh-server/compile -j$(nproc) || make package/feeds/packages/tmate-ssh-server/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tvheadend/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_tvheadend/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tvheadend/compile -j$(nproc) || make package/feeds/packages/tvheadend/compile V=s Compile.txt Applying ./patches/010-openssl-deprecated.patch using plaintext: patching file src/main.c Applying ./patches/020-strncpy-issue.patch using plaintext: patching file Makefile Applying ./patches/030-gcc10.patch using plaintext: patching file src/input.h patching file src/input/mpegts.h Checking support/features checking for cc execinfo.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_baresip/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_baresip/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/baresip/compile -j$(nproc) || make package/feeds/telephony/baresip/compile V=s Compile.txt Applying ./patches/002-fix-rem-include.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/baresip-1.0.0&amp;#39; CC [M] build-mips/modules/account/account.o CC [M] build-mips/modules/auloop/auloop.o CC [M] build-mips/modules/b2bua/b2bua.o CC [M] build-mips/modules/contact/contact.o CC [M] build-mips/modules/ctrl_tcp/ctrl_tcp.o CC [M] build-mips/modules/ctrl_tcp/tcp_netstring.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_gsmlib/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:26:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_gsmlib/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libmraa/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:25:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libmraa/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libmraa/compile -j$(nproc) || make package/feeds/packages/libmraa/compile V=s Compile.txt Applying ./patches/010-version.patch using plaintext: patching file CMakeLists.txt Applying ./patches/020-support_v12.patch using plaintext: patching file api/mraa/gpio.hpp Applying ./patches/030-gcc10.patch using plaintext: patching file include/version.h CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libupm/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:25:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libupm/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libupm/compile -j$(nproc) || make package/feeds/packages/libupm/compile V=s Compile.txt Applying ./patches/001-version.patch using plaintext: patching file CMakeLists.txt Applying ./patches/002-at42qt1070-id.patch using plaintext: patching file src/at42qt1070/at42qt1070.cxx Applying ./patches/003-link-atomic.patch using plaintext: patching file src/nmea_gps/CMakeLists.txt Applying ./patches/004-uint8_t.patch using plaintext: patching file src/bma250e/bma250e.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-http/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:25:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-http/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-http/compile -j$(nproc) || make package/feeds/packages/php7-pecl-http/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:67: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/pecl_http-3.2.3/.prepared_1b8207b841453ef4a8c69573db67a9a3_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-propro/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:25:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-propro/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-propro/compile -j$(nproc) || make package/feeds/packages/php7-pecl-propro/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:50: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/propro-2.1.0/.prepared_25520af0cc01a3fda79874760794dff3_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-raphf/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:25:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-raphf/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-raphf/compile -j$(nproc) || make package/feeds/packages/php7-pecl-raphf/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:50: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/raphf-2.0.1/.prepared_04a3d95f6a95a84d08a15da9a235c4bb_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_freeswitch-mod-bcg729/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:25:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_freeswitch-mod-bcg729/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-mips_24kc_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_freeswitch/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:25:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_freeswitch/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_sofia-sip/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:25:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_sofia-sip/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/sofia-sip/compile -j$(nproc) || make package/feeds/telephony/sofia-sip/compile V=s Compile.txt Applying ./patches/01-disable-libcheck.patch using plaintext: patching file configure.ac Applying ./patches/02-NUA_handles-mem-leak-fix.patch using plaintext: patching file libsofia-sip-ua/nua/nua.c patching file libsofia-sip-ua/nua/nua_common.c patching file libsofia-sip-ua/nua/nua_stack.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-imagick/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:24:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-imagick/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-imagick/compile -j$(nproc) || make package/feeds/packages/php7-pecl-imagick/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:44: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/imagick-3.4.4/.prepared_6f314d82a06f7f0883585a08eb58a256_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-krb5/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:24:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-krb5/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-krb5/compile -j$(nproc) || make package/feeds/packages/php7-pecl-krb5/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:46: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/krb5-1.1.4/.prepared_9a71df7e8d1f05dfd2b150dcc5a5dce6_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-mcrypt/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:24:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_php7-pecl-mcrypt/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7-pecl-mcrypt/compile -j$(nproc) || make package/feeds/packages/php7-pecl-mcrypt/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/usr/bin/phpize7: No such file or directory make[3]: *** [Makefile:44: /openwrt/build_dir/target-mips_24kc_musl/pecl-php7/mcrypt-1.0.4/.prepared_249a94ee99f34a5f2714ea0af369e2cb_18f1e190c5d53547fed41a3eaa76e9e9] Error 127 </description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-chan-dongle/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:24:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-chan-dongle/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-chan-sccp/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:24:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-chan-sccp/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-g72x/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:24:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-g72x/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-opus/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:24:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk-opus/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:24:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_asterisk/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_ath10k-ct/smallbuffers/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_ath10k-ct/smallbuffers/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_mt76/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_mt76/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8188eu/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8188eu/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8192du/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8192du/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-mips_24kc_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-mips_24kc_musl/linux-ath79_generic/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8812au-ac/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8812au-ac/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8812au-ct/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8812au-ct/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-mips_24kc_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8821cu/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl8821cu/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl88x2bu/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_base_rtl88x2bu/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_snort3/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_snort3/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/snort3/compile -j$(nproc) || make package/feeds/packages/snort3/compile V=s Compile.txt Applying ./patches/010-update-openssl.patch using plaintext: patching file src/network_inspectors/appid/appid_inspector.cc patching file src/utils/util.cc -- The CXX compiler identification is GNU 8.4.0 -- The C compiler identification is GNU 8.4.0 -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: /openwrt/staging_dir/toolchain-mips_24kc_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_routing_batman-adv/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_routing_batman-adv/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libgpiod/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_libgpiod/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/libgpiod/compile -j$(nproc) || make package/feeds/packages/libgpiod/compile V=s Compile.txt bash: /openwrt/staging_dir/target-mips_24kc_musl/host/bin/python3.9-config: No such file or directory bash: /openwrt/staging_dir/target-mips_24kc_musl/host/bin/python3.9-config: No such file or directory configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/mips checking for a BSD-compatible install.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openocd/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_openocd/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openocd/compile -j$(nproc) || make package/feeds/packages/openocd/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-mips_24kc_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cryptodomex/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-cryptodomex/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-cryptodomex/compile -j$(nproc) || make package/feeds/packages/python-cryptodomex/compile V=s Compile.txt Applying ./patches/001-fix-libgmp-loading.patch using plaintext: patching file lib/Cryptodome/Math/_IntegerGMP.py Applying ./patches/002-omit-tests.patch using plaintext: patching file setup.py Testing support for clang Target does not support clang Testing support for gcc Target does support gcc Testing support for stdint.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-gmpy2/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-gmpy2/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-gmpy2/compile -j$(nproc) || make package/feeds/packages/python-gmpy2/compile V=s Compile.txt running install running build running build_ext building &amp;#39;gmpy2&amp;#39; extension creating build creating build/temp.-3.9 creating build/temp.-3.9/src ccache_cc -Wno-unused-result -Wsign-compare -DNDEBUG -g -O3 -Wall -O2 -I/openwrt/staging_dir/host/include -I/openwrt/staging_dir/hostpkg/include -I/openwrt/staging_dir/target-mips_24kc_musl/host/include -O2 -I/openwrt/staging_dir/host/include -I/openwrt/staging_dir/hostpkg/include -I/openwrt/staging_dir/target-mips_24kc_musl/host/include -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -fmacro-prefix-map=/openwrt/build_dir/target-mips_24kc_musl/pypi/gmpy2-2.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-ubus/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_python-ubus/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/python-ubus/compile -j$(nproc) || make package/feeds/packages/python-ubus/compile V=s Compile.txt WARNING: The wheel package is not available. ERROR: Exception: Traceback (most recent call last): File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.9/site-packages/pip/_internal/cli/base_command.py&amp;#34;, line 180, in _main status = self.run(options, args) File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.9/site-packages/pip/_internal/cli/req_command.py&amp;#34;, line 204, in wrapper return func(self, options, args) File &amp;#34;/openwrt/staging_dir/hostpkg/lib/python3.</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_kamailio/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:23:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_telephony_kamailio/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/kamailio/compile -j$(nproc) || make package/feeds/telephony/kamailio/compile V=s Compile.txt Applying ./patches/050-fix-kamailio-utils.patch using plaintext: patching file utils/kamctl/kamctlrc Applying ./patches/120-libevent-libs.patch using plaintext: patching file src/modules/janssonrpcc/netstring.h Applying ./patches/130-change-snmp-mibs-path.patch using plaintext: patching file src/modules/snmpstats/Makefile Applying ./patches/140-redis_use_pkg-config.patch using plaintext: patching file src/modules/cnxcc/Makefile patching file src/modules/db_redis/Makefile patching file src/modules/ndb_redis/Makefile patching file src/modules/topos_redis/Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.37</title>
      <link>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gst1-plugins-bad/compile.37/</link>
      <pubDate>Sun, 20 Jun 2021 22:22:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ath79/generic/package_feeds_packages_gst1-plugins-bad/compile.37/</guid>
      <description>build number: 37
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/gst1-plugins-bad/compile -j$(nproc) || make package/feeds/packages/gst1-plugins-bad/compile V=s Compile.txt Makefile:425: WARNING: skipping gstreamer1-plugins-bad -- package has no install section Applying ./patches/010-distutils.patch using plaintext: patching file meson.build The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-mips_24kc_musl/gst-plugins-bad-1.18.4 Build dir: /openwrt/build_dir/target-mips_24kc_musl/gst-plugins-bad-1.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_fullconenat/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 17:03:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_fullconenat/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_ksmbd/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 17:03:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_ksmbd/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_mosdns/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 17:01:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_mosdns/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/mosdns/compile -j$(nproc) || make package/feeds/packages/mosdns/compile V=s Compile.txt Copying files from /openwrt/build_dir/target-aarch64_generic_musl/mosdns-1.8.6 into /openwrt/build_dir/target-aarch64_generic_musl/mosdns-1.8.6/.go_work/build/src/github.com/IrineSistiana/mosdns dispatcher/coremain/config.go dispatcher/coremain/run.go dispatcher/handler/config.go dispatcher/handler/config_test.go dispatcher/handler/context.go dispatcher/handler/context_test.go dispatcher/handler/error.go dispatcher/handler/interface.go dispatcher/handler/plugin_wrapper.go dispatcher/handler/register.go dispatcher/handler/register_test.go dispatcher/handler/test_utils.go dispatcher/mlog/logger.go dispatcher/pkg/arbitrary/arbitrary.go dispatcher/pkg/arbitrary/arbitrary_test.go dispatcher/pkg/cache/cache.go dispatcher/pkg/cache/mem_cache/mem_cache.go dispatcher/pkg/cache/mem_cache/mem_cache_test.go dispatcher/pkg/cache/redis_cache/redis_cache.go dispatcher/pkg/cache/redis_cache/redis_cache_test.go dispatcher/pkg/concurrent_limiter/client_limiter.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_pcap-dnsproxy/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 17:01:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_pcap-dnsproxy/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_openvswitch/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 17:00:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_openvswitch/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_ovn/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 17:00:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_ovn/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_shairport-sync/mbedtls/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 17:00:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_shairport-sync/mbedtls/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_shairport-sync/mini/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 17:00:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_shairport-sync/mini/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_shairport-sync/openssl/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 17:00:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_shairport-sync/openssl/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_rtpengine/no-transcode/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 17:00:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_rtpengine/no-transcode/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_rtpengine/transcode/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 17:00:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_rtpengine/transcode/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_fast-classifier/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:57:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_fast-classifier/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/fast-classifier/fast-classifier.o /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_shortcut-fe/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:57:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_shortcut-fe/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_jool/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:57:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_jool/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_ath10k-ct/regular/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:55:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_ath10k-ct/regular/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_mac80211/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:55:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_mac80211/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_elektra/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:55:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_elektra/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-aarch64_generic_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_ffmpeg/custom/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:55:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_ffmpeg/custom/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-aarch64_generic_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/aarch64_generic/packages/ffmpeg-custom_4.3.2-1_aarch64_generic.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_seafile-seahub/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:53:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_seafile-seahub/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-seahub/compile -j$(nproc) || make package/feeds/packages/seafile-seahub/compile V=s Compile.txt Applying ./patches/020-Makefile-fixes.patch using plaintext: patching file Makefile Applying ./patches/030-uci-conf.patch using plaintext: patching file seahub/settings.py Applying ./patches/040-manage-shebang.patch using plaintext: patching file manage.py Collecting Django==2.2.24 Downloading Django-2.2.24.tar.gz (9.2 MB) Collecting pytz==2021.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_coova-chilli/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:51:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_coova-chilli/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_xtables-addons/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:51:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_xtables-addons/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_dahdi-linux/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:51:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_dahdi-linux/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_dahdi-tools/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:51:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_dahdi-tools/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_generic_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_libpri/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:51:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_libpri/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_generic_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -mcpu=generic -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-aarch64_generic_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_gsmlib/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:49:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_telephony_gsmlib/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_ath10k-ct/smallbuffers/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:46:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_ath10k-ct/smallbuffers/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_mt76/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:46:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_mt76/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8188eu/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:46:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8188eu/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8192du/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:46:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8192du/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_generic_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_generic_musl/linux-rockchip_armv8/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8812au-ac/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:46:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8812au-ac/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8812au-ct/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:46:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8812au-ct/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_generic_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8821cu/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:46:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl8821cu/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl88x2bu/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:46:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_base_rtl88x2bu/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_routing_batman-adv/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:46:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_routing_batman-adv/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_node-ejdb2_node/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:45:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_node-ejdb2_node/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.36</title>
      <link>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_node-ffi-napi/compile.36/</link>
      <pubDate>Sun, 20 Jun 2021 16:45:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/rockchip/armv8/package_feeds_packages_node-ffi-napi/compile.36/</guid>
      <description>build number: 36
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_ath10k-ct/regular/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:43:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_ath10k-ct/regular/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_fullconenat/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:43:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_fullconenat/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_mac80211/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:43:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_mac80211/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_elektra/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:43:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_elektra/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-arm_cortex-a7+neon-vfpv4_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_ath10k-ct/smallbuffers/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:42:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_ath10k-ct/smallbuffers/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_mt76/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:42:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_mt76/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_rtl8188eu/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:42:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_rtl8188eu/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_rtl8192du/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:42:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_rtl8192du/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_rtl8812au-ac/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:42:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_rtl8812au-ac/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_rtl8812au-ct/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:42:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_rtl8812au-ct/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_rtl8821cu/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:42:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_rtl8821cu/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_rtl88x2bu/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:42:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_rtl88x2bu/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_pcap-dnsproxy/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:42:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_pcap-dnsproxy/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_routing_batman-adv/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:42:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_routing_batman-adv/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_node-ejdb2_node/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:42:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_node-ejdb2_node/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_dahdi-linux/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:42:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_dahdi-linux/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_yate/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:42:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_yate/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-upstream-crash-fix-r6470.patch using plaintext: patching file modules/ysipchan.cpp Applying ./patches/120-increase-sip-message-size.patch using plaintext: patching file conf.d/ysipchan.conf.sample Applying ./patches/130-fix-ilbc-flags.patch using plaintext: patching file libs/ilbc/Makefile.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_ffmpeg/custom/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:41:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_ffmpeg/custom/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/arm_cortex-a7_neon-vfpv4/packages/ffmpeg-custom_4.3.2-1_arm_cortex-a7_neon-vfpv4.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_fast-classifier/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:40:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_fast-classifier/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/fast-classifier/fast-classifier.o /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_shortcut-fe/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:40:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_shortcut-fe/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_jool/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:40:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_jool/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/arm checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for arm-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_button-hotplug/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:38:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_base_button-hotplug/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/button-hotplug/button-hotplug.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/button-hotplug/button-hotplug.mod.o LD [M] /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/button-hotplug/button-hotplug.ko make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/linux-ipq40xx_generic/linux-5.4.124&amp;#39; Package kmod-button-hotplug is missing dependencies for the following libraries: input-core.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_openvswitch/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:38:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_openvswitch/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_ovn/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:38:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_ovn/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_shairport-sync/openssl/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:38:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_shairport-sync/openssl/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_coova-chilli/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_coova-chilli/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_xtables-addons/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_xtables-addons/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_dahdi-tools/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_dahdi-tools/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_libpri/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:36:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_libpri/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -mfloat-abi=hard -fmacro-prefix-map=/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_node-ffi-napi/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:35:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_node-ffi-napi/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_asterisk-chan-dongle/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:34:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_asterisk-chan-dongle/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_asterisk-chan-sccp/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:34:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_asterisk-chan-sccp/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_asterisk-g72x/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:34:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_asterisk-g72x/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_asterisk-opus/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:34:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_asterisk-opus/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -mfloat-abi=hard -fmacro-prefix-map=/openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-arm_cortex-a7+neon-vfpv4_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_asterisk/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:34:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_asterisk/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_freeswitch-mod-bcg729/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:33:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_freeswitch-mod-bcg729/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_freeswitch/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:33:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_freeswitch/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_rtpengine/no-transcode/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:33:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_rtpengine/no-transcode/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_rtpengine/transcode/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:33:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_rtpengine/transcode/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_seafile-seahub/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:33:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_seafile-seahub/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-seahub/compile -j$(nproc) || make package/feeds/packages/seafile-seahub/compile V=s Compile.txt Applying ./patches/020-Makefile-fixes.patch using plaintext: patching file Makefile Applying ./patches/030-uci-conf.patch using plaintext: patching file seahub/settings.py Applying ./patches/040-manage-shebang.patch using plaintext: patching file manage.py Collecting Django==2.2.24 Downloading Django-2.2.24.tar.gz (9.2 MB) Collecting pytz==2021.</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_shairport-sync/mbedtls/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:31:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_shairport-sync/mbedtls/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_shairport-sync/mini/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:31:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_packages_shairport-sync/mini/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.35</title>
      <link>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_gsmlib/compile.35/</link>
      <pubDate>Sun, 20 Jun 2021 00:31:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/ipq40xx/generic/package_feeds_telephony_gsmlib/compile.35/</guid>
      <description>build number: 35
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:32:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:32:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:32:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:32:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:32:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:32:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:32:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:32:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:32:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:31:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:31:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:31:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/mbedtls/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:30:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/mbedtls/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/mini/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:30:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/mini/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/openssl/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:30:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/openssl/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt Applying ./patches/010-no-cxx.patch using plaintext: patching file Makefile.am patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:29:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:29:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:29:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_seafile-seahub/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:28:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_seafile-seahub/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/seafile-seahub/compile -j$(nproc) || make package/feeds/packages/seafile-seahub/compile V=s Compile.txt Applying ./patches/020-Makefile-fixes.patch using plaintext: patching file Makefile Applying ./patches/030-uci-conf.patch using plaintext: patching file seahub/settings.py Applying ./patches/040-manage-shebang.patch using plaintext: patching file manage.py Collecting Django==2.2.24 Downloading Django-2.2.24.tar.gz (9.2 MB) Collecting pytz==2021.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:28:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:28:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:26:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:26:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:26:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:25:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_uclient/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:24:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_uclient/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/uclient/compile -j$(nproc) || make package/feeds/base/uclient/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_uhttpd/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:24:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_uhttpd/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/uhttpd/compile -j$(nproc) || make package/feeds/base/uhttpd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ustream-ssl/mbedtls/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:24:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ustream-ssl/mbedtls/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ustream-ssl/compile -j$(nproc) || make package/feeds/base/ustream-ssl/compile V=s Compile.txt + curl -f --connect-timeout 20 --retry 5 --location --insecure https://mirror01.download.immortalwrt.eu.org/ustream-ssl-2020-12-10-68d09243.tar.xz % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 curl: (22) The requested URL returned error: 403 Download failed.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:24:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-upstream-crash-fix-r6470.patch using plaintext: patching file modules/ysipchan.cpp Applying ./patches/120-increase-sip-message-size.patch using plaintext: patching file conf.d/ysipchan.conf.sample Applying ./patches/130-fix-ilbc-flags.patch using plaintext: patching file libs/ilbc/Makefile.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:24:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:24:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:24:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:24:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:24:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:24:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:24:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:24:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:24:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:23:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:23:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:23:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:22:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:21:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:21:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.34</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.34/</link>
      <pubDate>Thu, 17 Jun 2021 08:18:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.34/</guid>
      <description>build number: 34
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:20:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:19:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:17:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:16:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:15:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:15:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:13:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:13:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:13:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:13:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-upstream-crash-fix-r6470.patch using plaintext: patching file modules/ysipchan.cpp Applying ./patches/120-increase-sip-message-size.patch using plaintext: patching file conf.d/ysipchan.conf.sample Applying ./patches/130-fix-ilbc-flags.patch using plaintext: patching file libs/ilbc/Makefile.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:12:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:12:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:10:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:10:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:10:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:10:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:10:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.33</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.33/</link>
      <pubDate>Sun, 13 Jun 2021 11:07:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.33/</guid>
      <description>build number: 33
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 18:01:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 18:00:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:58:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:57:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:57:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:57:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:55:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:55:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:54:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:54:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:53:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:53:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-upstream-crash-fix-r6470.patch using plaintext: patching file modules/ysipchan.cpp Applying ./patches/130-fix-ilbc-flags.patch using plaintext: patching file libs/ilbc/Makefile.in Applying ./patches/140-warning-unknown-architecture.patch using plaintext: patching file libs/miniwebrtc/typedefs.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:52:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:52:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:52:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:51:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:51:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:51:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:51:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:51:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.32</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.32/</link>
      <pubDate>Fri, 11 Jun 2021 17:48:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.32/</guid>
      <description>build number: 32
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_ath10k-ct/regular/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:16:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_ath10k-ct/regular/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_fullconenat/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:16:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_fullconenat/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_mac80211/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:16:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_mac80211/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_elektra/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:16:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_elektra/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-aarch64_cortex-a53_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_ksmbd/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:16:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_ksmbd/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_ffmpeg/custom/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:15:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_ffmpeg/custom/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a53_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/aarch64_cortex-a53/packages/ffmpeg-custom_4.3.2-1_aarch64_cortex-a53.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_ath10k-ct/smallbuffers/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_ath10k-ct/smallbuffers/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_mt76/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_mt76/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_rtl8188eu/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_rtl8188eu/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_rtl8192du/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_rtl8192du/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a53_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_rtl8812au-ac/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_rtl8812au-ac/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_rtl8812au-ct/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_rtl8812au-ct/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a53_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_rtl8821cu/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_rtl8821cu/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_rtl88x2bu/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_rtl88x2bu/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_coova-chilli/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_coova-chilli/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_routing_batman-adv/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_routing_batman-adv/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_telephony_dahdi-linux/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_telephony_dahdi-linux/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_telephony_dahdi-tools/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_telephony_dahdi-tools/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a53_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a53_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_telephony_libpri/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_telephony_libpri/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a53_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -mcpu=cortex-a53 -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-aarch64_cortex-a53_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_fast-classifier/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:12:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_fast-classifier/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/fast-classifier/fast-classifier.o /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_shortcut-fe/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:12:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_base_shortcut-fe/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-bcm27xx_bcm2710/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_jool/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:12:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_jool/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_node-socket.io/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:12:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_node-socket.io/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-socket.io/compile -j$(nproc) || make package/feeds/packages/node-socket.io/compile V=s Compile.txt npm info it worked if it ends with ok npm info using npm@6.14.13 npm info using node@v14.17.0 npm info lifecycle socket.io@4.1.2~preinstall: socket.io@4.1.2 npm timing stage:loadCurrentTree Completed in 10ms npm timing stage:loadIdealTree:cloneCurrentTree Completed in 0ms npm timing stage:loadIdealTree:loadShrinkwrap Completed in 2ms npm http fetch GET 200 https://registry.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_telephony_gsmlib/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:10:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_telephony_gsmlib/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_autossh/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:09:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_autossh/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_node-ejdb2_node/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:09:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_node-ejdb2_node/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_openvswitch/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:09:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_openvswitch/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_ovn/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:09:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_ovn/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_xtables-addons/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:07:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_xtables-addons/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_pcap-dnsproxy/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:07:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_pcap-dnsproxy/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_qbittorrent-enhanced-edition/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:07:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_qbittorrent-enhanced-edition/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_node-ffi-napi/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:05:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_packages_node-ffi-napi/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_telephony_rtpengine/no-transcode/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:05:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_telephony_rtpengine/no-transcode/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.31</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_telephony_rtpengine/transcode/compile.31/</link>
      <pubDate>Thu, 10 Jun 2021 17:05:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2710/package_feeds_telephony_rtpengine/transcode/compile.31/</guid>
      <description>build number: 31
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:58:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:58:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:58:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:58:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:58:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:56:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:56:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:56:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.124&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl-device-usb/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:56:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl-device-usb/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-device-usb/compile -j$(nproc) || make package/feeds/packages/perl-device-usb/compile V=s Compile.txt Applying ./patches/100-fix_buildsystem.patch using plaintext: patching file Makefile.PL Applying ./patches/110-just_assume_libusb_is_there.patch using plaintext: patching file Makefile.PL Applying ./patches/120-use_libusb_0_1.patch using plaintext: patching file lib/Device/USB.pm Applying ./patches/130-provide-proper-library-paths.patch using plaintext: patching file lib/Device/USB.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:56:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl/compile -j$(nproc) || make package/feeds/packages/perl/compile V=s Compile.txt Applying ./patches/001-macos_11_support.patch using plaintext: File hints/darwin.sh is read-only; trying to patch anyway patching file hints/darwin.sh Applying ./patches/002-add-Internals-getcwd.patch using plaintext: File MANIFEST is read-only; trying to patch anyway patching file MANIFEST patching file t/io/getcwd.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:56:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:56:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:56:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:56:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:56:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:55:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:55:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:55:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:54:28 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.10/leds.c patching file ath10k-5.10/leds.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:54:28 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:54:28 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:54:28 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:54:28 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:54:28 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:54:28 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:54:28 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:54:28 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:54:28 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:54:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:54:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:53:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:53:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-red/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:52:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-red/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-red/compile -j$(nproc) || make package/feeds/packages/node-red/compile V=s Compile.txt npm info it worked if it ends with ok npm info using npm@6.14.13 npm info using node@v14.17.0 npm info lifecycle node-red@1.3.5~preinstall: node-red@1.3.5 npm timing stage:loadCurrentTree Completed in 11ms npm timing stage:loadIdealTree:cloneCurrentTree Completed in 1ms npm timing stage:loadIdealTree:loadShrinkwrap Completed in 1ms npm http fetch GET 200 https://registry.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:52:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:52:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-upstream-crash-fix-r6470.patch using plaintext: patching file modules/ysipchan.cpp Applying ./patches/130-fix-ilbc-flags.patch using plaintext: patching file libs/ilbc/Makefile.in Applying ./patches/140-warning-unknown-architecture.patch using plaintext: patching file libs/miniwebrtc/typedefs.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:51:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:51:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:50:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_gsmlib/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:49:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_gsmlib/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:48:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:48:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:48:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:48:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.30</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.30/</link>
      <pubDate>Wed, 09 Jun 2021 21:48:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.30/</guid>
      <description>build number: 30
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:32:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-5.10/mac.c Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:32:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:32:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:32:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:32:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:32:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:32:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Makefile:207: WARNING: skipping yate-collection-basic -- package has no install section Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-no-libnsl.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:31:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:31:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-5.10/mac.c Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_gsmlib/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:30:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_gsmlib/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:28:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:28:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:28:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:28:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:26:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:26:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:26:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:25:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:25:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:24:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:24:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:23:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:23:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:23:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.28</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.28/</link>
      <pubDate>Thu, 03 Jun 2021 14:22:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.28/</guid>
      <description>build number: 28
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/regular/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:43:02 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/regular/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-5.10/mac.c Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fullconenat/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:43:02 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fullconenat/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:41:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_openvswitch/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:41:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_openvswitch/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ovn/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:41:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ovn/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_elektra/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:39:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_elektra/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-aarch64_cortex-a72_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ffmpeg/custom/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:39:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ffmpeg/custom/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/aarch64_cortex-a72/packages/ffmpeg-custom_4.3.2-1_aarch64_cortex-a72.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fast-classifier/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:38:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fast-classifier/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_shortcut-fe/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:38:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_shortcut-fe/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jool/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:38:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jool/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:38:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/smallbuffers/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:37:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/smallbuffers/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-5.10/mac.c Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mac80211/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:37:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mac80211/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mt76/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:37:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mt76/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #1 succeeded at 176 (offset 16 lines). Hunk #2 succeeded at 239 (offset 16 lines). Hunk #3 succeeded at 374 (offset 16 lines).</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8188eu/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:37:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8188eu/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8192du/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:37:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8192du/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ac/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:37:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ac/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ct/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:37:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ct/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8821cu/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:37:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8821cu/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl88x2bu/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:37:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl88x2bu/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_routing_batman-adv/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:37:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_routing_batman-adv/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-linux/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:37:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-linux/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-tools/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:37:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-tools/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_libpri/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:37:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_libpri/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ffi-napi/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:36:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ffi-napi/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_coova-chilli/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:35:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_coova-chilli/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ejdb2_node/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:35:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ejdb2_node/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_xtables-addons/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:35:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_xtables-addons/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/no-transcode/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:35:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/no-transcode/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/transcode/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:35:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/transcode/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pcap-dnsproxy/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:34:42 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pcap-dnsproxy/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_gsmlib/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:34:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_gsmlib/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.27</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_qbittorrent-enhanced-edition/compile.27/</link>
      <pubDate>Thu, 03 Jun 2021 07:33:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_qbittorrent-enhanced-edition/compile.27/</guid>
      <description>build number: 27
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:41:02 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:40:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:40:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:40:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:39:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:39:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:37:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-5.10/mac.c Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:37:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:37:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:37:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:36:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:36:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:36:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:36:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:36:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-5.10/mac.c Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #4 succeeded at 457 (offset 3 lines). make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/mt76-2021-05-15-9d736545/.configured_98efdcd916b181aef82ec860dfcf9dd8&amp;#39;. Stop.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:35:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:34:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:34:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:34:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.123&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:34:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Makefile:207: WARNING: skipping yate-collection-basic -- package has no install section Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-no-libnsl.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:32:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.26</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.26/</link>
      <pubDate>Tue, 01 Jun 2021 17:32:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.26/</guid>
      <description>build number: 26
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:37:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-5.10/mac.c Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:37:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:37:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:37:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:36:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:36:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:34:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:34:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:34:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Makefile:207: WARNING: skipping yate-collection-basic -- package has no install section Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-no-libnsl.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:33:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-5.10/mac.c Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #4 succeeded at 457 (offset 3 lines). make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/mt76-2021-05-15-9d736545/.configured_98efdcd916b181aef82ec860dfcf9dd8&amp;#39;. Stop.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:32:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:31:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:31:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:31:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:31:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:31:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:30:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:29:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:29:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:29:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:29:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:29:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.25</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.25/</link>
      <pubDate>Sun, 30 May 2021 21:29:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.25/</guid>
      <description>build number: 25
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/regular/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:36:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/regular/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-5.10/mac.c Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fullconenat/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:36:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fullconenat/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:36:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_openvswitch/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:34:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_openvswitch/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ovn/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:34:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ovn/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ffmpeg/custom/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:33:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ffmpeg/custom/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/aarch64_cortex-a72/packages/ffmpeg-custom_4.3.2-1_aarch64_cortex-a72.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jool/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:33:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jool/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/no-transcode/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:33:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/no-transcode/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/transcode/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:33:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/transcode/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fast-classifier/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:32:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fast-classifier/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_shortcut-fe/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:32:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_shortcut-fe/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_gsmlib/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:31:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_gsmlib/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:30:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/smallbuffers/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:29:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/smallbuffers/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-5.10/mac.c Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mac80211/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:29:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mac80211/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mt76/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:29:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mt76/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #4 succeeded at 457 (offset 3 lines). make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/mt76-2021-05-15-9d736545/.configured_98efdcd916b181aef82ec860dfcf9dd8&amp;#39;. Stop.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8188eu/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:29:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8188eu/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8192du/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:29:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8192du/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ac/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:29:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ac/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ct/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:29:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ct/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8821cu/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:29:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8821cu/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl88x2bu/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:29:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl88x2bu/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_xtables-addons/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:29:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_xtables-addons/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_routing_batman-adv/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:29:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_routing_batman-adv/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_coova-chilli/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:28:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_coova-chilli/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-linux/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:28:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-linux/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-tools/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:28:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-tools/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_libpri/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:28:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_libpri/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_qbittorrent-enhanced-edition/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:28:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_qbittorrent-enhanced-edition/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pcap-dnsproxy/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:27:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pcap-dnsproxy/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_elektra/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:27:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_elektra/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-aarch64_cortex-a72_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ejdb2_node/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:26:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ejdb2_node/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.24</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ffi-napi/compile.24/</link>
      <pubDate>Sat, 29 May 2021 09:26:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ffi-napi/compile.24/</guid>
      <description>build number: 24
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.23/</link>
      <pubDate>Thu, 27 May 2021 00:03:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.o Building modules, stage 2. MODPOST 1 modules CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fullconenat-2019-10-21-0cf3b48f/xt_FULLCONENAT.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.23/</link>
      <pubDate>Thu, 27 May 2021 00:03:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.23/</link>
      <pubDate>Thu, 27 May 2021 00:02:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.23/</link>
      <pubDate>Thu, 27 May 2021 00:02:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.23/</link>
      <pubDate>Thu, 27 May 2021 00:01:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.23/</link>
      <pubDate>Thu, 27 May 2021 00:00:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.23/</link>
      <pubDate>Thu, 27 May 2021 00:00:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Makefile:207: WARNING: skipping yate-collection-basic -- package has no install section Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-no-libnsl.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.23/</link>
      <pubDate>Thu, 27 May 2021 00:00:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.23/</link>
      <pubDate>Thu, 27 May 2021 00:00:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.23/</link>
      <pubDate>Thu, 27 May 2021 00:00:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.23/</link>
      <pubDate>Thu, 27 May 2021 00:00:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.23/</link>
      <pubDate>Thu, 27 May 2021 00:00:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.23/</link>
      <pubDate>Thu, 27 May 2021 00:00:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.23/</link>
      <pubDate>Thu, 27 May 2021 00:00:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:59:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-5.10/mac.c Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:59:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:59:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/0001-mt76-allow-VHT-rate-on-2.4GHz.patch using plaintext: patching file mac80211.c Hunk #4 succeeded at 457 (offset 3 lines). make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/mt76-2021-05-15-9d736545/.configured_98efdcd916b181aef82ec860dfcf9dd8&amp;#39;. Stop.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:59:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:59:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c Applying ./patches/020-wireless-5.8.patch using plaintext: patching file os_dep/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2020-12-12-331ec03d/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:59:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:59:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:59:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) Applying .</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:59:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:59:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:59:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:58:02 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-5.10/mac.c Applying ./patches/201-ath10k-add-LED-and-GPIO-controlling-support-for-various-chipsets.patch using plaintext: patching file ath10k-5.10/Kconfig patching file ath10k-5.10/Makefile patching file ath10k-5.10/core.c patching file ath10k-5.10/core.h patching file ath10k-5.10/hw.h patching file ath10k-5.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:58:02 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/002-vendor_command_policy.patch using plaintext: patching file os_dep/linux/rtw_cfgvendor.c Applying ./patches/003-wireless-5.8.patch using plaintext: patching file os_dep/linux/ioctl_cfg80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:58:02 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:57:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:57:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:57:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:57:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:57:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:57:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:57:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:57:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:57:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:57:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:56:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_gsmlib/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:55:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_gsmlib/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:54:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:54:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.23</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.23/</link>
      <pubDate>Wed, 26 May 2021 23:54:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.23/</guid>
      <description>build number: 23
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:53:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:53:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:53:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_gsmlib/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:53:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_gsmlib/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/gsmlib/compile -j$(nproc) || make package/feeds/telephony/gsmlib/compile V=s Compile.txt Applying ./patches/01-update-autotools.patch using plaintext: patching file configure.in patching file po/Makevars patching file Makefile.am Applying ./patches/02-fix-cross-compile.patch using plaintext: patching file configure.in Applying ./patches/03-disable-Siemens-specific-code.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:52:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:52:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:52:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:52:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:50:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:50:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:50:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:50:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:50:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:50:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:49:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-button-hotplug/compile -j$(nproc) || make package/feeds/base/gpio-button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:49:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-nct5104d/compile -j$(nproc) || make package/feeds/base/gpio-nct5104d/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:49:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:49:23 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Makefile:207: WARNING: skipping yate-collection-basic -- package has no install section Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-no-libnsl.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:48:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:48:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:47:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:47:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/001-allow-vht-on-2g.patch using plaintext: patching file mac80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/mt76-2021-02-15-5c768dec/.configured_90cfbe17226f457e38768d3d3063649a&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:47:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:47:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8189es/compile -j$(nproc) || make package/feeds/base/rtl8189es/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:47:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2019-06-01-54c95aaa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:47:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:47:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8812au-ct-2020-01-13-e0d586aa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:47:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:47:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:47:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/trelay/compile -j$(nproc) || make package/feeds/base/trelay/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; scripts/Makefile.build:42: arch/x86/entry/syscalls/Makefile: No such file or directory make[5]: *** No rule to make target &amp;#39;arch/x86/entry/syscalls/Makefile&amp;#39;. Stop. make[4]: *** [arch/x86/Makefile:243: archheaders] Error 2 make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:47:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:47:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:46:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:46:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/i2c-gpio-custom/compile -j$(nproc) || make package/feeds/base/i2c-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:46:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/spi-gpio-custom/compile -j$(nproc) || make package/feeds/base/spi-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:46:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:46:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:46:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:46:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:46:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:46:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:46:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_php8/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:46:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_php8/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php8/compile -j$(nproc) || make package/feeds/packages/php8/compile V=s Compile.txt Applying ./patches/0007-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0022-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0025-php-5.4.9-fixheader.patch using plaintext: patching file configure.ac Applying ./patches/0030-Remove-W3C-validation-icon-to-not-expose-the-reader-.patch using plaintext: patching file sapi/fpm/status.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:46:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:45:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.121&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210424/src/main.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210424/src/noise.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210424/src/device.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210424/src/peer.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210424/src/timers.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210424/src/queueing.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210424/src/send.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:45:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:45:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:45:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:45:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:45:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:45:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:45:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:44:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.22</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.22/</link>
      <pubDate>Wed, 26 May 2021 12:44:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.22/</guid>
      <description>build number: 22
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-button-hotplug/compile -j$(nproc) || make package/feeds/base/gpio-button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-nct5104d/compile -j$(nproc) || make package/feeds/base/gpio-nct5104d/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/trelay/compile -j$(nproc) || make package/feeds/base/trelay/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; scripts/Makefile.build:42: arch/x86/entry/syscalls/Makefile: No such file or directory make[5]: *** No rule to make target &amp;#39;arch/x86/entry/syscalls/Makefile&amp;#39;. Stop. make[4]: *** [arch/x86/Makefile:242: archheaders] Error 2 make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:44 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210219/src/main.o In file included from &amp;lt;command-line&amp;gt;: ./../wireguard-linux-compat-1.0.20210219/src/compat/compat.h:1059:22: error: static declaration of &amp;#39;ip_tunnel_parse_protocol&amp;#39; follows non-static declaration static inline __be16 ip_tunnel_parse_protocol(const struct sk_buff *skb) ^~~~~~~~~~~~~~~~~~~~~~~~ In file included from .</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:39:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:37:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Makefile:207: WARNING: skipping yate-collection-basic -- package has no install section Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-no-libnsl.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:37:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:37:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/i2c-gpio-custom/compile -j$(nproc) || make package/feeds/base/i2c-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:37:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:37:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:37:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:37:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:36:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:36:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:36:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_php8/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:36:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_php8/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php8/compile -j$(nproc) || make package/feeds/packages/php8/compile V=s Compile.txt Applying ./patches/0007-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0022-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0025-php-5.4.9-fixheader.patch using plaintext: patching file configure.ac Applying ./patches/0030-Remove-W3C-validation-icon-to-not-expose-the-reader-.patch using plaintext: patching file sapi/fpm/status.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:35:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:35:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/001-allow-vht-on-2g.patch using plaintext: patching file mac80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/mt76-2021-02-15-5c768dec/.configured_90cfbe17226f457e38768d3d3063649a&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:35:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:35:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8189es/compile -j$(nproc) || make package/feeds/base/rtl8189es/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:35:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2019-06-01-54c95aaa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:35:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:35:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8812au-ct-2020-01-13-e0d586aa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:35:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:35:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:35:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/spi-gpio-custom/compile -j$(nproc) || make package/feeds/base/spi-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:35:41 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:35:04 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:34:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:34:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:33:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:33:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:32:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.21</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.21/</link>
      <pubDate>Mon, 17 May 2021 21:31:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.21/</guid>
      <description>build number: 21
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/regular/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:14:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/regular/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fullconenat/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:14:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fullconenat/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mac80211/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:14:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mac80211/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ffi-napi/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:14:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ffi-napi/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ejdb2_node/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:13:51 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ejdb2_node/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/default/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:13:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/default/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/selinux/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:13:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/selinux/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_wireguard/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:13:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_wireguard/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/wireguard-linux-compat-1.0.20210219/src/main.o In file included from &amp;lt;command-line&amp;gt;: ./../wireguard-linux-compat-1.0.20210219/src/compat/compat.h:1059:22: error: static declaration of &amp;#39;ip_tunnel_parse_protocol&amp;#39; follows non-static declaration static inline __be16 ip_tunnel_parse_protocol(const struct sk_buff *skb) ^~~~~~~~~~~~~~~~~~~~~~~~ In file included from .</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_openvswitch/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:13:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_openvswitch/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ovn/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:13:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ovn/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/smallbuffers/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:12:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/smallbuffers/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_gpio-button-hotplug/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:12:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_gpio-button-hotplug/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-button-hotplug/compile -j$(nproc) || make package/feeds/base/gpio-button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_trelay/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:12:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_trelay/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/trelay/compile -j$(nproc) || make package/feeds/base/trelay/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/dtc/dtc.o HOSTCC scripts/dtc/flattree.o HOSTCC scripts/dtc/fstree.o HOSTCC scripts/dtc/data.o HOSTCC scripts/dtc/livetree.o HOSTCC scripts/dtc/treesource.o HOSTCC scripts/dtc/srcpos.o HOSTCC scripts/dtc/checks.o HOSTCC scripts/dtc/util.o HOSTCC scripts/dtc/dtc-lexer.lex.o HOSTCC scripts/dtc/dtc-parser.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:12:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ffmpeg/custom/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:12:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ffmpeg/custom/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/aarch64_cortex-a72/packages/ffmpeg-custom_4.3.2-1_aarch64_cortex-a72.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pcap-dnsproxy/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:11:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pcap-dnsproxy/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_button-hotplug/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_button-hotplug/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_i2c-gpio-custom/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_i2c-gpio-custom/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/i2c-gpio-custom/compile -j$(nproc) || make package/feeds/base/i2c-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_spi-gpio-custom/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_spi-gpio-custom/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/spi-gpio-custom/compile -j$(nproc) || make package/feeds/base/spi-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_uclient/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_uclient/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/uclient/compile -j$(nproc) || make package/feeds/base/uclient/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_uhttpd/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_uhttpd/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/uhttpd/compile -j$(nproc) || make package/feeds/base/uhttpd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ustream-ssl/mbedtls/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ustream-ssl/mbedtls/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ustream-ssl/compile -j$(nproc) || make package/feeds/base/ustream-ssl/compile V=s Compile.txt + curl -f --connect-timeout 20 --retry 5 --location --insecure https://mirror01.download.immortalwrt.eu.org/master/ustream-ssl-2020-12-10-68d09243.tar.xz % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 12704 100 12704 0 0 10657 0 0:00:01 0:00:01 --:--:-- 22484 CMake Deprecation Warning at CMakeLists.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_luci_luci-app-nginx-pingos/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_luci_luci-app-nginx-pingos/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_coova-chilli/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_coova-chilli/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_xtables-addons/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_xtables-addons/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-linux/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-linux/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-tools/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-tools/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_libpri/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_libpri/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_elektra/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_elektra/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-aarch64_cortex-a72_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/no-transcode/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/no-transcode/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/transcode/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:10:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/transcode/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fast-classifier/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:08:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fast-classifier/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_shortcut-fe/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:08:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_shortcut-fe/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jool/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:08:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jool/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:08:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_routing_batman-adv/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:08:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_routing_batman-adv/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mt76/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:08:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mt76/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/001-allow-vht-on-2g.patch using plaintext: patching file mac80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/mt76-2021-02-15-5c768dec/.configured_90cfbe17226f457e38768d3d3063649a&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8188eu/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:08:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8188eu/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8189es/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:08:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8189es/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8189es/compile -j$(nproc) || make package/feeds/base/rtl8189es/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8192du/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:08:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8192du/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8192du-2019-06-01-54c95aaa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ac/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:08:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ac/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ct/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:08:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ct/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8812au-ct-2020-01-13-e0d586aa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8821cu/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:08:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8821cu/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl88x2bu/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:08:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl88x2bu/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.20</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_qbittorrent-enhanced-edition/compile.20/</link>
      <pubDate>Sat, 15 May 2021 12:07:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_qbittorrent-enhanced-edition/compile.20/</guid>
      <description>build number: 20
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:45:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:45:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fullconenat/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fullconenat/compile -j$(nproc) || make package/feeds/base/fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:45:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:45:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:44:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/001-allow-vht-on-2g.patch using plaintext: patching file mac80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/mt76-2021-02-15-5c768dec/.configured_90cfbe17226f457e38768d3d3063649a&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:44:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:44:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8189es/compile -j$(nproc) || make package/feeds/base/rtl8189es/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:44:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2019-06-01-54c95aaa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:44:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:44:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:44:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:44:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:44:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-button-hotplug/compile -j$(nproc) || make package/feeds/base/gpio-button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-nct5104d/compile -j$(nproc) || make package/feeds/base/gpio-nct5104d/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/trelay/compile -j$(nproc) || make package/feeds/base/trelay/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; scripts/Makefile.build:42: arch/x86/entry/syscalls/Makefile: No such file or directory make[5]: *** No rule to make target &amp;#39;arch/x86/entry/syscalls/Makefile&amp;#39;. Stop. make[4]: *** [arch/x86/Makefile:242: archheaders] Error 2 make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_uclient/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_uclient/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/uclient/compile -j$(nproc) || make package/feeds/base/uclient/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_uhttpd/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_uhttpd/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/uhttpd/compile -j$(nproc) || make package/feeds/base/uhttpd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ustream-ssl/mbedtls/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ustream-ssl/mbedtls/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ustream-ssl/compile -j$(nproc) || make package/feeds/base/ustream-ssl/compile V=s Compile.txt + curl -f --connect-timeout 20 --retry 5 --location --insecure https://mirror01.download.immortalwrt.eu.org/master/ustream-ssl-2020-12-10-68d09243.tar.xz % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 100 12704 100 12704 0 0 7694 0 0:00:01 0:00:01 --:--:-- 37922 CMake Deprecation Warning at CMakeLists.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210219/src/main.o In file included from &amp;lt;command-line&amp;gt;: ./../wireguard-linux-compat-1.0.20210219/src/compat/compat.h:1059:22: error: static declaration of &amp;#39;ip_tunnel_parse_protocol&amp;#39; follows non-static declaration static inline __be16 ip_tunnel_parse_protocol(const struct sk_buff *skb) ^~~~~~~~~~~~~~~~~~~~~~~~ In file included from .</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:43:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:42:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:42:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8812au-ct-2020-01-13-e0d586aa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:42:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:41:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:41:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:40:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/i2c-gpio-custom/compile -j$(nproc) || make package/feeds/base/i2c-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:40:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/spi-gpio-custom/compile -j$(nproc) || make package/feeds/base/spi-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:40:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:40:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:40:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:40:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:39:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:39:16 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Makefile:207: WARNING: skipping yate-collection-basic -- package has no install section Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-no-libnsl.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:38:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_qbittorrent-enhanced-edition/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/packages/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:38:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:38:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:38:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:38:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:37:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:37:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.19</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.19/</link>
      <pubDate>Sat, 15 May 2021 01:37:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.19/</guid>
      <description>build number: 19
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/regular/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:48:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/regular/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mac80211/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:48:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mac80211/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt broadcom.mk:398: warning: overriding recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; broadcom.mk:98: warning: ignoring old recipe for target &amp;#39;/openwrt/dl/broadcom-wl-5.100.138.tar.bz2&amp;#39; Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_openwrt-fullconenat/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:48:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_openwrt-fullconenat/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/openwrt-fullconenat/compile -j$(nproc) || make package/feeds/base/openwrt-fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ffmpeg/custom/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:48:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ffmpeg/custom/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/aarch64_cortex-a72/packages/ffmpeg-custom_4.3.2-1_aarch64_cortex-a72.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jool/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:48:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jool/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_routing_batman-adv/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:48:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_routing_batman-adv/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ffi-napi/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:48:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ffi-napi/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_trelay/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:47:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_trelay/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/trelay/compile -j$(nproc) || make package/feeds/base/trelay/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/dtc/dtc.o HOSTCC scripts/dtc/flattree.o HOSTCC scripts/dtc/fstree.o HOSTCC scripts/dtc/data.o HOSTCC scripts/dtc/livetree.o HOSTCC scripts/dtc/treesource.o HOSTCC scripts/dtc/srcpos.o HOSTCC scripts/dtc/checks.o HOSTCC scripts/dtc/util.o HOSTCC scripts/dtc/dtc-lexer.lex.o HOSTCC scripts/dtc/dtc-parser.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_luci_luci-app-nginx-pingos/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:47:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_luci_luci-app-nginx-pingos/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:47:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/smallbuffers/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:46:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/smallbuffers/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ct/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:46:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ct/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8812au-ct-2020-01-13-e0d586aa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-linux/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:46:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-linux/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-tools/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:46:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-tools/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_libpri/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:46:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_libpri/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ejdb2_node/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:46:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ejdb2_node/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pcap-dnsproxy/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:46:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pcap-dnsproxy/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_gpio-button-hotplug/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:45:49 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_gpio-button-hotplug/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-button-hotplug/compile -j$(nproc) || make package/feeds/base/gpio-button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:45:49 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_px5g-mbedtls/mbedtls/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:45:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_px5g-mbedtls/mbedtls/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/px5g-mbedtls/compile -j$(nproc) || make package/feeds/base/px5g-mbedtls/compile V=s Compile.txt Package px5g-mbedtls is missing dependencies for the following libraries: libmbedtls.so.9 make[3]: *** [Makefile:77: /openwrt/bin/packages/aarch64_cortex-a72/base/px5g-mbedtls_9_aarch64_cortex-a72.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ustream-ssl/mbedtls/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:45:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ustream-ssl/mbedtls/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ustream-ssl/compile -j$(nproc) || make package/feeds/base/ustream-ssl/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_wireguard/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:45:34 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_wireguard/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/wireguard-linux-compat-1.0.20210219/src/main.o In file included from &amp;lt;command-line&amp;gt;: ./../wireguard-linux-compat-1.0.20210219/src/compat/compat.h:1059:22: error: static declaration of &amp;#39;ip_tunnel_parse_protocol&amp;#39; follows non-static declaration static inline __be16 ip_tunnel_parse_protocol(const struct sk_buff *skb) ^~~~~~~~~~~~~~~~~~~~~~~~ In file included from .</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_coova-chilli/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:44:49 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_coova-chilli/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_xtables-addons/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:44:49 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_xtables-addons/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_qbittorrent-enhanced-edition/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:44:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_qbittorrent-enhanced-edition/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/base/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_button-hotplug/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:44:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_button-hotplug/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fast-classifier/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:44:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fast-classifier/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_i2c-gpio-custom/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:44:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_i2c-gpio-custom/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/i2c-gpio-custom/compile -j$(nproc) || make package/feeds/base/i2c-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/default/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:44:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/default/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/selinux/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:44:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/selinux/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_shortcut-fe/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:44:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_shortcut-fe/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_spi-gpio-custom/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:44:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_spi-gpio-custom/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/spi-gpio-custom/compile -j$(nproc) || make package/feeds/base/spi-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_openvswitch/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:43:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_openvswitch/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ovn/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:43:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ovn/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/no-transcode/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:42:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/no-transcode/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/transcode/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:42:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/transcode/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mt76/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:42:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mt76/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/001-allow-vht-on-2g.patch using plaintext: patching file mac80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/mt76-2021-02-15-5c768dec/.configured_90cfbe17226f457e38768d3d3063649a&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8188eu/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:42:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8188eu/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8189es/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:42:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8189es/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8189es/compile -j$(nproc) || make package/feeds/base/rtl8189es/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8192du/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:42:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8192du/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8192du-2019-06-01-54c95aaa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ac/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:42:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ac/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8821cu/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:42:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8821cu/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl88x2bu/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:42:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl88x2bu/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.18</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_elektra/compile.18/</link>
      <pubDate>Fri, 14 May 2021 07:41:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_elektra/compile.18/</guid>
      <description>build number: 18
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-aarch64_cortex-a72_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/regular/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:42:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/regular/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mac80211/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:42:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mac80211/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_openwrt-fullconenat/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:42:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_openwrt-fullconenat/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/openwrt-fullconenat/compile -j$(nproc) || make package/feeds/base/openwrt-fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_trelay/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:42:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_trelay/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/trelay/compile -j$(nproc) || make package/feeds/base/trelay/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/dtc/dtc.o HOSTCC scripts/dtc/flattree.o HOSTCC scripts/dtc/fstree.o HOSTCC scripts/dtc/data.o HOSTCC scripts/dtc/livetree.o HOSTCC scripts/dtc/treesource.o HOSTCC scripts/dtc/srcpos.o HOSTCC scripts/dtc/checks.o HOSTCC scripts/dtc/util.o HOSTCC scripts/dtc/dtc-lexer.lex.o HOSTCC scripts/dtc/dtc-parser.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_qbittorrent-enhanced-edition/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:42:12 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_qbittorrent-enhanced-edition/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/base/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_gpio-button-hotplug/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:41:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_gpio-button-hotplug/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-button-hotplug/compile -j$(nproc) || make package/feeds/base/gpio-button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ejdb2_node/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:41:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ejdb2_node/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ffi-napi/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:41:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ffi-napi/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fast-classifier/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:41:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fast-classifier/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_shortcut-fe/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:41:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_shortcut-fe/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jool/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:41:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jool/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/smallbuffers/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:41:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/smallbuffers/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ffmpeg/custom/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:41:10 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ffmpeg/custom/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/aarch64_cortex-a72/packages/ffmpeg-custom_4.3.2-1_aarch64_cortex-a72.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:40:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_button-hotplug/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:40:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_button-hotplug/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_i2c-gpio-custom/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:40:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_i2c-gpio-custom/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/i2c-gpio-custom/compile -j$(nproc) || make package/feeds/base/i2c-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_spi-gpio-custom/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:40:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_spi-gpio-custom/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/spi-gpio-custom/compile -j$(nproc) || make package/feeds/base/spi-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_coova-chilli/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:40:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_coova-chilli/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pcap-dnsproxy/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:40:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pcap-dnsproxy/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-linux/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:40:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-linux/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-tools/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:40:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-tools/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_libpri/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:40:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_libpri/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_wireguard/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:40:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_wireguard/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/wireguard-linux-compat-1.0.20210219/src/main.o In file included from &amp;lt;command-line&amp;gt;: ./../wireguard-linux-compat-1.0.20210219/src/compat/compat.h:1059:22: error: static declaration of &amp;#39;ip_tunnel_parse_protocol&amp;#39; follows non-static declaration static inline __be16 ip_tunnel_parse_protocol(const struct sk_buff *skb) ^~~~~~~~~~~~~~~~~~~~~~~~ In file included from .</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_luci_luci-app-nginx-pingos/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:39:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_luci_luci-app-nginx-pingos/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:39:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_xtables-addons/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:39:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_xtables-addons/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:39:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_routing_batman-adv/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:39:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_routing_batman-adv/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/default/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:38:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/default/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt bash: md5: command not found CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/selinux/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:38:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/selinux/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt bash: md5: command not found CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_openvswitch/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:38:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_openvswitch/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ovn/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:38:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ovn/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/no-transcode/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:37:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/no-transcode/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/transcode/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:37:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/transcode/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mt76/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:37:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mt76/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/001-allow-vht-on-2g.patch using plaintext: patching file mac80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/mt76-2021-02-15-5c768dec/.configured_90cfbe17226f457e38768d3d3063649a&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8188eu/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:37:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8188eu/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8189es/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:37:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8189es/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8189es/compile -j$(nproc) || make package/feeds/base/rtl8189es/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8192du/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:37:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8192du/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8192du-2019-06-01-54c95aaa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ac/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:37:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ac/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ct/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:37:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ct/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8812au-ct-2020-01-13-e0d586aa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8821cu/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:37:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8821cu/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.17</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl88x2bu/compile.17/</link>
      <pubDate>Fri, 14 May 2021 00:37:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl88x2bu/compile.17/</guid>
      <description>build number: 17
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:43:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:43:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_openwrt-fullconenat/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:43:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_openwrt-fullconenat/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/openwrt-fullconenat/compile -j$(nproc) || make package/feeds/base/openwrt-fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:43:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/trelay/compile -j$(nproc) || make package/feeds/base/trelay/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/dtc/dtc.o HOSTCC scripts/dtc/flattree.o HOSTCC scripts/dtc/fstree.o HOSTCC scripts/dtc/data.o HOSTCC scripts/dtc/livetree.o HOSTCC scripts/dtc/treesource.o HOSTCC scripts/dtc/srcpos.o HOSTCC scripts/dtc/checks.o HOSTCC scripts/dtc/util.o HOSTCC scripts/dtc/dtc-lexer.lex.o HOSTCC scripts/dtc/dtc-parser.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_qbittorrent-enhanced-edition/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:43:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_qbittorrent-enhanced-edition/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/base/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:43:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-button-hotplug/compile -j$(nproc) || make package/feeds/base/gpio-button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:43:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:43:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:42:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:42:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:42:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:42:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:42:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/aarch64_cortex-a72/packages/ffmpeg-custom_4.3.2-1_aarch64_cortex-a72.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:42:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:41:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:41:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/i2c-gpio-custom/compile -j$(nproc) || make package/feeds/base/i2c-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:41:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/spi-gpio-custom/compile -j$(nproc) || make package/feeds/base/spi-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:41:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:41:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:41:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:41:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:41:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:41:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/wireguard-linux-compat-1.0.20210219/src/main.o In file included from &amp;lt;command-line&amp;gt;: ./../wireguard-linux-compat-1.0.20210219/src/compat/compat.h:1059:22: error: static declaration of &amp;#39;ip_tunnel_parse_protocol&amp;#39; follows non-static declaration static inline __be16 ip_tunnel_parse_protocol(const struct sk_buff *skb) ^~~~~~~~~~~~~~~~~~~~~~~~ In file included from .</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:40:48 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:40:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:40:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:39:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt bash: md5: command not found CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:39:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt bash: md5: command not found CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:39:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:39:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:38:49 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:38:49 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:38:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/001-allow-vht-on-2g.patch using plaintext: patching file mac80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/mt76-2021-02-15-5c768dec/.configured_90cfbe17226f457e38768d3d3063649a&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:38:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:38:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8189es/compile -j$(nproc) || make package/feeds/base/rtl8189es/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:38:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8192du-2019-06-01-54c95aaa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:38:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:38:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8812au-ct-2020-01-13-e0d586aa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:38:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.16</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.16/</link>
      <pubDate>Thu, 13 May 2021 20:38:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.16/</guid>
      <description>build number: 16
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:20:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:20:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_openwrt-fullconenat/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:20:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_openwrt-fullconenat/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/openwrt-fullconenat/compile -j$(nproc) || make package/feeds/base/openwrt-fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:20:40 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/trelay/compile -j$(nproc) || make package/feeds/base/trelay/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/dtc/dtc.o HOSTCC scripts/dtc/flattree.o HOSTCC scripts/dtc/fstree.o HOSTCC scripts/dtc/data.o HOSTCC scripts/dtc/livetree.o HOSTCC scripts/dtc/treesource.o HOSTCC scripts/dtc/srcpos.o HOSTCC scripts/dtc/checks.o HOSTCC scripts/dtc/util.o HOSTCC scripts/dtc/dtc-lexer.lex.o HOSTCC scripts/dtc/dtc-parser.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_qbittorrent-enhanced-edition/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:20:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_qbittorrent-enhanced-edition/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/base/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:20:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-button-hotplug/compile -j$(nproc) || make package/feeds/base/gpio-button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:20:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:20:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:19:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:19:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:19:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:19:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:19:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/aarch64_cortex-a72/packages/ffmpeg-custom_4.3.2-1_aarch64_cortex-a72.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:19:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:18:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:18:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/i2c-gpio-custom/compile -j$(nproc) || make package/feeds/base/i2c-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:18:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/spi-gpio-custom/compile -j$(nproc) || make package/feeds/base/spi-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:18:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:18:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:18:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:18:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:18:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:18:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/wireguard-linux-compat-1.0.20210219/src/main.o In file included from &amp;lt;command-line&amp;gt;: ./../wireguard-linux-compat-1.0.20210219/src/compat/compat.h:1059:22: error: static declaration of &amp;#39;ip_tunnel_parse_protocol&amp;#39; follows non-static declaration static inline __be16 ip_tunnel_parse_protocol(const struct sk_buff *skb) ^~~~~~~~~~~~~~~~~~~~~~~~ In file included from .</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:18:04 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:18:04 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:18:04 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:17:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:17:53 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:17:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:17:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:17:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:17:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:16:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:16:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:15:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/001-allow-vht-on-2g.patch using plaintext: patching file mac80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/mt76-2021-02-15-5c768dec/.configured_90cfbe17226f457e38768d3d3063649a&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:15:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:15:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8189es/compile -j$(nproc) || make package/feeds/base/rtl8189es/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:15:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8192du-2019-06-01-54c95aaa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:15:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:15:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8812au-ct-2020-01-13-e0d586aa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:15:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.15</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.15/</link>
      <pubDate>Thu, 13 May 2021 06:15:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.15/</guid>
      <description>build number: 15
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:30:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:30:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_openwrt-fullconenat/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:30:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_openwrt-fullconenat/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/openwrt-fullconenat/compile -j$(nproc) || make package/feeds/base/openwrt-fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_qbittorrent-enhanced-edition/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:30:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_qbittorrent-enhanced-edition/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/base/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl/compile -j$(nproc) || make package/feeds/packages/perl/compile V=s Compile.txt Applying ./patches/001-macos_11_support.patch using plaintext: File hints/darwin.sh is read-only; trying to patch anyway patching file hints/darwin.sh Applying ./patches/002-add-Internals-getcwd.patch using plaintext: File MANIFEST is read-only; trying to patch anyway patching file MANIFEST patching file t/io/getcwd.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl-device-usb/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_perl-device-usb/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/perl-device-usb/compile -j$(nproc) || make package/feeds/packages/perl-device-usb/compile V=s Compile.txt Applying ./patches/100-fix_buildsystem.patch using plaintext: patching file Makefile.PL Applying ./patches/110-just_assume_libusb_is_there.patch using plaintext: patching file Makefile.PL Applying ./patches/120-use_libusb_0_1.patch using plaintext: patching file lib/Device/USB.pm Applying ./patches/130-provide-proper-library-paths.patch using plaintext: patching file lib/Device/USB.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/spi-gpio-custom/compile -j$(nproc) || make package/feeds/base/spi-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/trelay/compile -j$(nproc) || make package/feeds/base/trelay/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; scripts/Makefile.build:42: arch/x86/entry/syscalls/Makefile: No such file or directory make[5]: *** No rule to make target &amp;#39;arch/x86/entry/syscalls/Makefile&amp;#39;. Stop. make[4]: *** [arch/x86/Makefile:242: archheaders] Error 2 make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:04 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:29:04 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Makefile:207: WARNING: skipping yate-collection-basic -- package has no install section Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-no-libnsl.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_php8/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_php8/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php8/compile -j$(nproc) || make package/feeds/packages/php8/compile V=s Compile.txt Applying ./patches/0007-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0022-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0025-php-5.4.9-fixheader.patch using plaintext: patching file configure.ac Applying ./patches/0030-Remove-W3C-validation-icon-to-not-expose-the-reader-.patch using plaintext: patching file sapi/fpm/status.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-button-hotplug/compile -j$(nproc) || make package/feeds/base/gpio-button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-nct5104d/compile -j$(nproc) || make package/feeds/base/gpio-nct5104d/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/i2c-gpio-custom/compile -j$(nproc) || make package/feeds/base/i2c-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/001-allow-vht-on-2g.patch using plaintext: patching file mac80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/mt76-2021-02-15-5c768dec/.configured_90cfbe17226f457e38768d3d3063649a&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8189es/compile -j$(nproc) || make package/feeds/base/rtl8189es/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2019-06-01-54c95aaa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8812au-ct-2020-01-13-e0d586aa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:36 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210219/src/main.o In file included from &amp;lt;command-line&amp;gt;: ./../wireguard-linux-compat-1.0.20210219/src/compat/compat.h:1059:22: error: static declaration of &amp;#39;ip_tunnel_parse_protocol&amp;#39; follows non-static declaration static inline __be16 ip_tunnel_parse_protocol(const struct sk_buff *skb) ^~~~~~~~~~~~~~~~~~~~~~~~ In file included from .</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:28:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:27:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:27:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:27:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:27:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:27:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:27:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:27:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:27:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_tang/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:25:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_tang/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tang/compile -j$(nproc) || make package/feeds/packages/tang/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-x86_64_musl/tang-8 Build dir: /openwrt/build_dir/target-x86_64_musl/tang-8/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:25:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:25:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.14/</link>
      <pubDate>Thu, 13 May 2021 00:25:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/regular/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:09:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/regular/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mac80211/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:09:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mac80211/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_openwrt-fullconenat/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:09:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_openwrt-fullconenat/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/openwrt-fullconenat/compile -j$(nproc) || make package/feeds/base/openwrt-fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:09:15 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_autossh/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_button-hotplug/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:09:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_button-hotplug/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_gpio-button-hotplug/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:09:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_gpio-button-hotplug/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-button-hotplug/compile -j$(nproc) || make package/feeds/base/gpio-button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_i2c-gpio-custom/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:09:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_i2c-gpio-custom/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/i2c-gpio-custom/compile -j$(nproc) || make package/feeds/base/i2c-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_spi-gpio-custom/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:09:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_spi-gpio-custom/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/spi-gpio-custom/compile -j$(nproc) || make package/feeds/base/spi-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_trelay/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:09:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_trelay/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/trelay/compile -j$(nproc) || make package/feeds/base/trelay/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/dtc/dtc.o HOSTCC scripts/dtc/flattree.o HOSTCC scripts/dtc/fstree.o HOSTCC scripts/dtc/data.o HOSTCC scripts/dtc/livetree.o HOSTCC scripts/dtc/treesource.o HOSTCC scripts/dtc/srcpos.o HOSTCC scripts/dtc/checks.o HOSTCC scripts/dtc/util.o HOSTCC scripts/dtc/dtc-lexer.lex.o HOSTCC scripts/dtc/dtc-parser.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_uclient/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:09:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_uclient/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/uclient/compile -j$(nproc) || make package/feeds/base/uclient/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_uhttpd/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:09:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_uhttpd/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/uhttpd/compile -j$(nproc) || make package/feeds/base/uhttpd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ustream-ssl/mbedtls/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:09:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ustream-ssl/mbedtls/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ustream-ssl/compile -j$(nproc) || make package/feeds/base/ustream-ssl/compile V=s Compile.txt + curl -f --connect-timeout 20 --retry 5 --location --insecure https://mirror01.download.immortalwrt.eu.org/master/ustream-ssl-2020-12-10-68d09243.tar.xz % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 96 12704 96 12288 0 0 10022 0 0:00:01 0:00:01 --:--:-- 10022 100 12704 100 12704 0 0 10362 0 0:00:01 0:00:01 --:--:-- 406k CMake Deprecation Warning at CMakeLists.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_luci_luci-app-nginx-pingos/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:08:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_luci_luci-app-nginx-pingos/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_coova-chilli/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:08:56 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_coova-chilli/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/smallbuffers/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:08:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_ath10k-ct/smallbuffers/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8189es/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:08:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8189es/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8189es/compile -j$(nproc) || make package/feeds/base/rtl8189es/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8192du/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:08:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8192du/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8192du-2019-06-01-54c95aaa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ct/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:08:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ct/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/rtl8812au-ct-2020-01-13-e0d586aa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl88x2bu/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:08:24 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl88x2bu/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ffmpeg/custom/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:08:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ffmpeg/custom/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/aarch64_cortex-a72/packages/ffmpeg-custom_4.3.2-1_aarch64_cortex-a72.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:08:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ksmbd/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_openvswitch/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:08:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_openvswitch/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ovn/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:08:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_ovn/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_xtables-addons/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:08:01 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_xtables-addons/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_tang/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:07:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_tang/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tang/compile -j$(nproc) || make package/feeds/packages/tang/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/tang-8 Build dir: /openwrt/build_dir/target-aarch64_cortex-a72_musl/tang-8/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/default/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:07:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/default/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/selinux/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:07:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_procd/selinux/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ffi-napi/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:07:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ffi-napi/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pcap-dnsproxy/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:07:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_pcap-dnsproxy/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jool/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:06:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_jool/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for aarch64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-linux/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:06:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-linux/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-tools/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:06:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_dahdi-tools/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_libpri/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:06:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_libpri/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-aarch64_cortex-a72_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mt76/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:06:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_mt76/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/001-allow-vht-on-2g.patch using plaintext: patching file mac80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-aarch64_cortex-a72_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/mt76-2021-02-15-5c768dec/.configured_90cfbe17226f457e38768d3d3063649a&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_qbittorrent-enhanced-edition/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:06:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_qbittorrent-enhanced-edition/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/base/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/aarch64 checking for aarch64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8188eu/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:06:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8188eu/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ac/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:06:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8812au-ac/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8821cu/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:06:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_rtl8821cu/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ejdb2_node/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:06:35 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-ejdb2_node/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_routing_batman-adv/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:06:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_routing_batman-adv/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_wireguard/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:06:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_wireguard/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/wireguard-linux-compat-1.0.20210219/src/main.o In file included from &amp;lt;command-line&amp;gt;: ./../wireguard-linux-compat-1.0.20210219/src/compat/compat.h:1059:22: error: static declaration of &amp;#39;ip_tunnel_parse_protocol&amp;#39; follows non-static declaration static inline __be16 ip_tunnel_parse_protocol(const struct sk_buff *skb) ^~~~~~~~~~~~~~~~~~~~~~~~ In file included from .</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:06:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_php7/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fast-classifier/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:05:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_fast-classifier/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_shortcut-fe/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:05:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_base_shortcut-fe/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/linux-5.4.117&amp;#39; CC [M] /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-aarch64_cortex-a72_musl/linux-bcm27xx_bcm2711/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_adguardhome/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:05:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_adguardhome/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/adguardhome/compile -j$(nproc) || make package/feeds/packages/adguardhome/compile V=s Compile.txt Copying files from /openwrt/build_dir/target-aarch64_cortex-a72_musl/adguardhome-0.106.1 into /openwrt/build_dir/target-aarch64_cortex-a72_musl/adguardhome-0.106.1/.go_work/build/src/github.com/AdguardTeam/AdGuardHome go.mod go.sum internal/agherr/agherr.go internal/agherr/agherr_test.go internal/aghio/limitedreadcloser.go internal/aghio/limitedreadcloser_test.go internal/aghnet/addr.go internal/aghnet/addr_test.go internal/aghnet/etchostscontainer.go internal/aghnet/etshostscontainer_test.go internal/aghnet/net.go internal/aghnet/net_darwin.go internal/aghnet/net_linux.go internal/aghnet/net_linux_test.go internal/aghnet/net_others.go internal/aghnet/net_test.go internal/aghnet/subnetdetector.go internal/aghnet/subnetdetector_test.go internal/aghnet/systemresolvers.go internal/aghnet/systemresolvers_others.go internal/aghnet/systemresolvers_others_test.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_filebrowser/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:05:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_filebrowser/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/filebrowser/compile -j$(nproc) || make package/feeds/packages/filebrowser/compile V=s Compile.txt Copying files from /openwrt/build_dir/target-aarch64_cortex-a72_musl/filebrowser-2.13.0 into /openwrt/build_dir/target-aarch64_cortex-a72_musl/filebrowser-2.13.0/.go_work/build/src/github.com/filebrowser/filebrowser auth/auth.go auth/json.go auth/none.go auth/proxy.go auth/storage.go cmd/cmd.go cmd/cmds.go cmd/cmds_add.go cmd/cmds_ls.go cmd/cmds_rm.go cmd/config.go cmd/config_cat.go cmd/config_export.go cmd/config_import.go cmd/config_init.go cmd/config_set.go cmd/docs.go cmd/hash.go cmd/root.go cmd/rule_rm.go cmd/rules.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-alexa-app/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:05:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-alexa-app/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-alexa-app/compile -j$(nproc) || make package/feeds/packages/node-alexa-app/compile V=s Compile.txt npm info it worked if it ends with ok npm info using npm@6.14.12 npm info using node@v14.16.1 npm timing stage:loadCurrentTree Completed in 21ms npm timing stage:loadIdealTree:cloneCurrentTree Completed in 1ms npm timing stage:loadIdealTree:loadShrinkwrap Completed in 1ms npm timing stage:rollbackFailedOptional Completed in 1ms npm timing stage:runTopLevelLifecycles Completed in 190729ms npm ERR!</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-epoll/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:05:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-epoll/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-epoll/compile -j$(nproc) || make package/feeds/packages/node-epoll/compile V=s Compile.txt npm info it worked if it ends with ok npm info using npm@6.14.12 npm info using node@v14.16.1 npm timing stage:loadCurrentTree Completed in 15ms npm timing stage:loadIdealTree:cloneCurrentTree Completed in 0ms npm timing stage:loadIdealTree:loadShrinkwrap Completed in 1ms npm timing stage:rollbackFailedOptional Completed in 0ms npm timing stage:runTopLevelLifecycles Completed in 190812ms npm ERR!</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-leveldown/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:05:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-leveldown/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-leveldown/compile -j$(nproc) || make package/feeds/packages/node-leveldown/compile V=s Compile.txt npm info it worked if it ends with ok npm info using npm@6.14.12 npm info using node@v14.16.1 npm timing stage:loadCurrentTree Completed in 15ms npm timing stage:loadIdealTree:cloneCurrentTree Completed in 0ms npm timing stage:loadIdealTree:loadShrinkwrap Completed in 1ms npm timing stage:rollbackFailedOptional Completed in 1ms npm timing stage:runTopLevelLifecycles Completed in 190748ms npm ERR!</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-openzwave-shared/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:05:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_packages_node-openzwave-shared/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-openzwave-shared/compile -j$(nproc) || make package/feeds/packages/node-openzwave-shared/compile V=s Compile.txt Applying ./patches/999-node_v16_support.patch using plaintext: patching file binding.gyp npm info it worked if it ends with ok npm info using npm@6.14.12 npm info using node@v14.16.1 npm timing stage:loadCurrentTree Completed in 16ms npm timing stage:loadIdealTree:cloneCurrentTree Completed in 0ms npm timing stage:loadIdealTree:loadShrinkwrap Completed in 1ms npm timing stage:rollbackFailedOptional Completed in 1ms npm timing stage:runTopLevelLifecycles Completed in 190811ms npm ERR!</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/no-transcode/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:05:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/no-transcode/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.14</title>
      <link>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/transcode/compile.14/</link>
      <pubDate>Wed, 12 May 2021 23:05:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/bcm27xx/bcm2711/package_feeds_telephony_rtpengine/transcode/compile.14/</guid>
      <description>build number: 14
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_openwrt-fullconenat/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:55 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_openwrt-fullconenat/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/openwrt-fullconenat/compile -j$(nproc) || make package/feeds/base/openwrt-fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-button-hotplug/compile -j$(nproc) || make package/feeds/base/gpio-button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-nct5104d/compile -j$(nproc) || make package/feeds/base/gpio-nct5104d/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/trelay/compile -j$(nproc) || make package/feeds/base/trelay/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/Makefile.build:42: arch/x86/entry/syscalls/Makefile: No such file or directory make[5]: *** No rule to make target &amp;#39;arch/x86/entry/syscalls/Makefile&amp;#39;. Stop. make[4]: *** [arch/x86/Makefile:242: archheaders] Error 2 make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Makefile:207: WARNING: skipping yate-collection-basic -- package has no install section Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-no-libnsl.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/001-allow-vht-on-2g.patch using plaintext: patching file mac80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/mt76-2021-02-15-5c768dec/.configured_90cfbe17226f457e38768d3d3063649a&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8189es/compile -j$(nproc) || make package/feeds/base/rtl8189es/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2019-06-01-54c95aaa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8812au-ct-2020-01-13-e0d586aa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:14 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:02 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:17:02 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:16:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:16:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/i2c-gpio-custom/compile -j$(nproc) || make package/feeds/base/i2c-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:16:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/spi-gpio-custom/compile -j$(nproc) || make package/feeds/base/spi-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:16:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:16:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:16:39 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:16:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:16:32 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:16:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210219/src/main.o In file included from &amp;lt;command-line&amp;gt;: ./../wireguard-linux-compat-1.0.20210219/src/compat/compat.h:1059:22: error: static declaration of &amp;#39;ip_tunnel_parse_protocol&amp;#39; follows non-static declaration static inline __be16 ip_tunnel_parse_protocol(const struct sk_buff *skb) ^~~~~~~~~~~~~~~~~~~~~~~~ In file included from .</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:16:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:16:25 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:15:42 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:15:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:15:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:15:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:15:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:15:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:15:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:15:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:14:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_qbittorrent-enhanced-edition/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:14:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_qbittorrent-enhanced-edition/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/base/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:14:19 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:14:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:14:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.13</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.13/</link>
      <pubDate>Tue, 11 May 2021 22:14:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.13/</guid>
      <description>build number: 13
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_openwrt-fullconenat/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_openwrt-fullconenat/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/openwrt-fullconenat/compile -j$(nproc) || make package/feeds/base/openwrt-fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_px5g-mbedtls/mbedtls/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_px5g-mbedtls/mbedtls/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/px5g-mbedtls/compile -j$(nproc) || make package/feeds/base/px5g-mbedtls/compile V=s Compile.txt Package px5g-mbedtls is missing dependencies for the following libraries: libmbedtls.so.9 make[3]: *** [Makefile:77: /openwrt/bin/packages/x86_64/base/px5g-mbedtls_9_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvpn/mbedtls/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvpn/mbedtls/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvpn/compile -j$(nproc) || make package/feeds/packages/openvpn/compile V=s Compile.txt Applying ./patches/001-reproducible-remove_DATE.patch using plaintext: patching file src/openvpn/options.c Applying ./patches/100-mbedtls-disable-runtime-version-check.patch using plaintext: patching file src/openvpn/ssl_mbedtls.c Applying ./patches/115-fix-mbedtls-without-renegotiation.patch using plaintext: patching file src/openvpn/ssl_mbedtls.c Applying ./patches/210-build_always_use_internal_lz4.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pianod/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pianod/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pianod/compile -j$(nproc) || make package/feeds/packages/pianod/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/mbedtls/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/mbedtls/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/mini/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_shairport-sync/mini/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/shairport-sync/compile -j$(nproc) || make package/feeds/packages/shairport-sync/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force autoreconf: configure.ac: tracing autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:52 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:30 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_tang/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_tang/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/tang/compile -j$(nproc) || make package/feeds/packages/tang/compile V=s Compile.txt The Meson build system Version: 0.57.2 Source dir: /openwrt/build_dir/target-x86_64_musl/tang-8 Build dir: /openwrt/build_dir/target-x86_64_musl/tang-8/openwrt-build Build type: cross build WARNING: Unknown options: &amp;#34;build.libdir, build.prefix, build.sbindir&amp;#34; The value of new options can be set with: meson setup &amp;lt;builddir&amp;gt; --reconfigure -Dnew_option=new_value .</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:21 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/i2c-gpio-custom/compile -j$(nproc) || make package/feeds/base/i2c-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/spi-gpio-custom/compile -j$(nproc) || make package/feeds/base/spi-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:31:06 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210219/src/main.o In file included from &amp;lt;command-line&amp;gt;: ./../wireguard-linux-compat-1.0.20210219/src/compat/compat.h:1059:22: error: static declaration of &amp;#39;ip_tunnel_parse_protocol&amp;#39; follows non-static declaration static inline __be16 ip_tunnel_parse_protocol(const struct sk_buff *skb) ^~~~~~~~~~~~~~~~~~~~~~~~ In file included from .</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/001-allow-vht-on-2g.patch using plaintext: patching file mac80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/mt76-2020-03-10-08054d5a/.configured_90cfbe17226f457e38768d3d3063649a&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8189es/compile -j$(nproc) || make package/feeds/base/rtl8189es/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2019-06-01-54c95aaa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:26 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_keepalived/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_keepalived/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/keepalived/compile -j$(nproc) || make package/feeds/packages/keepalived/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:30:05 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8812au-ct-2020-01-13-e0d586aa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:29:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/trelay/compile -j$(nproc) || make package/feeds/base/trelay/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/Makefile.build:42: arch/x86/entry/syscalls/Makefile: No such file or directory make[5]: *** No rule to make target &amp;#39;arch/x86/entry/syscalls/Makefile&amp;#39;. Stop. make[4]: *** [arch/x86/Makefile:242: archheaders] Error 2 make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:29:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:29:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:29:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:29:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:29:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Makefile:207: WARNING: skipping yate-collection-basic -- package has no install section Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-no-libnsl.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:29:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:29:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:29:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:29:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-button-hotplug/compile -j$(nproc) || make package/feeds/base/gpio-button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:29:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-nct5104d/compile -j$(nproc) || make package/feeds/base/gpio-nct5104d/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:29:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:29:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:29:00 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_qbittorrent-enhanced-edition/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:28:50 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_qbittorrent-enhanced-edition/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/base/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:28:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_elektra/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/elektra/compile -j$(nproc) || make package/feeds/packages/elektra/compile V=s Compile.txt -- The C compiler identification is GNU 8.4.0 -- The CXX compiler identification is GNU 8.4.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:28:43 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:28:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:28:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:28:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.12</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.12/</link>
      <pubDate>Sun, 09 May 2021 11:28:13 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.12/</guid>
      <description>build number: 12
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_openwrt-fullconenat/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:58 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_openwrt-fullconenat/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/openwrt-fullconenat/compile -j$(nproc) || make package/feeds/base/openwrt-fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/i2c-gpio-custom/compile -j$(nproc) || make package/feeds/base/i2c-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/spi-gpio-custom/compile -j$(nproc) || make package/feeds/base/spi-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:47 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/trelay/compile -j$(nproc) || make package/feeds/base/trelay/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/Makefile.build:42: arch/x86/entry/syscalls/Makefile: No such file or directory make[5]: *** No rule to make target &amp;#39;arch/x86/entry/syscalls/Makefile&amp;#39;. Stop. make[4]: *** [arch/x86/Makefile:242: archheaders] Error 2 make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:37 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Makefile:207: WARNING: skipping yate-collection-basic -- package has no install section Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-no-libnsl.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:09 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:29:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-button-hotplug/compile -j$(nproc) || make package/feeds/base/gpio-button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-nct5104d/compile -j$(nproc) || make package/feeds/base/gpio-nct5104d/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:45 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_qbittorrent-enhanced-edition/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:29 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_qbittorrent-enhanced-edition/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/base/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210219/src/main.o In file included from &amp;lt;command-line&amp;gt;: ./../wireguard-linux-compat-1.0.20210219/src/compat/compat.h:1059:22: error: static declaration of &amp;#39;ip_tunnel_parse_protocol&amp;#39; follows non-static declaration static inline __be16 ip_tunnel_parse_protocol(const struct sk_buff *skb) ^~~~~~~~~~~~~~~~~~~~~~~~ In file included from .</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:28:11 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:38 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:27 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/001-allow-vht-on-2g.patch using plaintext: patching file mac80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/mt76-2020-03-10-08054d5a/.configured_90cfbe17226f457e38768d3d3063649a&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8189es/compile -j$(nproc) || make package/feeds/base/rtl8189es/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2019-06-01-54c95aaa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8812au-ct-2020-01-13-e0d586aa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.11</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.11/</link>
      <pubDate>Fri, 07 May 2021 23:27:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.11/</guid>
      <description>build number: 11
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:48:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/regular/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:48:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mac80211/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mac80211/compile -j$(nproc) || make package/feeds/base/mac80211/compile V=s Compile.txt Applying ./patches/build/000-fix_kconfig.patch using plaintext: patching file kconf/Makefile Applying ./patches/build/001-fix_build.patch using plaintext: patching file Makefile patching file Makefile.real Applying ./patches/build/002-change_allconfig.patch using plaintext: patching file kconf/conf.c patching file kconf/confdata.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_openwrt-fullconenat/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:48:17 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_openwrt-fullconenat/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/openwrt-fullconenat/compile -j$(nproc) || make package/feeds/base/openwrt-fullconenat/compile V=s Compile.txt Applying ./patches/000-printk.patch using plaintext: patching file xt_FULLCONENAT.c Hunk #1 succeeded at 702 (offset 5 lines). make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:47:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_fast-classifier/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/fast-classifier/compile -j$(nproc) || make package/feeds/base/fast-classifier/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c: In function &amp;#39;fast_classifier_init&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.c:1888:1: warning: label &amp;#39;exit4&amp;#39; defined but not used [-Wunused-label] exit4: ^~~~~ Building modules, stage 2. MODPOST 1 modules ERROR: &amp;#34;sfe_ipv6_register_sync_rule_callback&amp;#34; [/openwrt/build_dir/target-x86_64_musl/linux-x86_64/fast-classifier/fast-classifier.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:47:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_shortcut-fe/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/shortcut-fe/compile -j$(nproc) || make package/feeds/base/shortcut-fe/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.o /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_udp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c:1478:5: error: &amp;#39;struct sk_buff&amp;#39; has no member named &amp;#39;fast_forwarded&amp;#39; skb-&amp;gt;fast_forwarded = 1; ^~ /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.c: In function &amp;#39;sfe_ipv4_recv_tcp&amp;#39;: /openwrt/build_dir/target-x86_64_musl/linux-x86_64/shortcut-fe/sfe_ipv4.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:47:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_trelay/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/trelay/compile -j$(nproc) || make package/feeds/base/trelay/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/Makefile.build:42: arch/x86/entry/syscalls/Makefile: No such file or directory make[5]: *** No rule to make target &amp;#39;arch/x86/entry/syscalls/Makefile&amp;#39;. Stop. make[4]: *** [arch/x86/Makefile:242: archheaders] Error 2 make[4]: Leaving directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:47:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_autossh/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/autossh/compile -j$(nproc) || make package/feeds/packages/autossh/compile V=s Compile.txt configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking for C compiler default output file name... a.out checking whether the C compiler works... yes checking whether we are cross compiling.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:47:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ffi-napi/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ffi-napi/compile -j$(nproc) || make package/feeds/packages/node-ffi-napi/compile V=s Compile.txt Applying ./patches/0001-do_not_build_libffi.patch using plaintext: patching file binding.gyp Applying ./patches/0002-support_mips.patch using plaintext: patching file src/ffi.cc npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:47:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_pcap-dnsproxy/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/pcap-dnsproxy/compile -j$(nproc) || make package/feeds/packages/pcap-dnsproxy/compile V=s Compile.txt Applying ./patches/002-cmake-dependency-scanner-workaround.patch using plaintext: patching file Source/Pcap_DNSProxy/Platform.h Hunk #1 succeeded at 380 with fuzz 1 (offset 1 line). Hunk #2 succeeded at 394 (offset 1 line). Hunk #3 succeeded at 572 (offset -3 lines).</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:47:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-linux/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-linux/compile -j$(nproc) || make package/feeds/telephony/dahdi-linux/compile V=s Compile.txt Applying ./patches/003-fix-oslec-build.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/050-re-enable-ztdummy.patch using plaintext: patching file drivers/dahdi/Kbuild Applying ./patches/070-no-firmware-blob-download.patch using plaintext: patching file Makefile Applying ./patches/100-add-support-for-hfc-s-pci.patch using plaintext: patching file drivers/dahdi/Kbuild patching file drivers/dahdi/Kconfig patching file drivers/dahdi/hfcs/base.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:47:46 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_yate/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/yate/compile -j$(nproc) || make package/feeds/telephony/yate/compile V=s Compile.txt Makefile:207: WARNING: skipping yate-collection-basic -- package has no install section Applying ./patches/100-non-gnu-mutex-type.patch using plaintext: patching file engine/Mutex.cpp patching file configure.ac Applying ./patches/110-no-libnsl.patch using plaintext: patching file configure.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:47:03 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ffmpeg/custom/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ffmpeg/compile -j$(nproc) || make package/feeds/packages/ffmpeg/compile V=s Compile.txt cp: cannot stat &amp;#39;/openwrt/build_dir/target-x86_64_musl/ffmpeg-custom/ffmpeg-4.3.2/ipkg-install/usr/bin/ffmpeg&amp;#39;: No such file or directory make[3]: *** [Makefile:755: /openwrt/bin/packages/x86_64/packages/ffmpeg-custom_4.3.2-1_x86_64.ipk] Error 1 </description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:46:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-button-hotplug/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-button-hotplug/compile -j$(nproc) || make package/feeds/base/gpio-button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:46:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_gpio-nct5104d/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/gpio-nct5104d/compile -j$(nproc) || make package/feeds/base/gpio-nct5104d/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:46:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/default/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:46:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_procd/selinux/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/procd/compile -j$(nproc) || make package/feeds/base/procd/compile V=s Compile.txt CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required): Compatibility with CMake &amp;lt; 2.8.12 will be removed from a future version of CMake. Update the VERSION argument &amp;lt;min&amp;gt; value or use a .</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:46:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_coova-chilli/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/coova-chilli/compile -j$(nproc) || make package/feeds/packages/coova-chilli/compile V=s Compile.txt Applying ./patches/010-kernel510.patch using plaintext: patching file src/linux/xt_coova.c Applying ./patches/100-fix_compile_kmod.patch using plaintext: patching file src/linux/Makefile OpenWrt-libtoolize: putting auxiliary files in `.&amp;#39;. OpenWrt-libtoolize: copying file `./ltmain.sh&amp;#39; OpenWrt-libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4&amp;#39;.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:46:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_xtables-addons/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/xtables-addons/compile -j$(nproc) || make package/feeds/packages/xtables-addons/compile V=s Compile.txt Applying ./patches/001-fix-kernel-version-detection.patch using plaintext: patching file configure.ac Applying ./patches/100-add-rtsp-conntrack.patch using plaintext: patching file extensions/rtsp/Kbuild patching file extensions/rtsp/netfilter_helpers.h patching file extensions/rtsp/netfilter_mime.h patching file extensions/rtsp/nf_conntrack_rtsp.c patching file extensions/rtsp/nf_conntrack_rtsp.h patching file extensions/rtsp/nf_nat_rtsp.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:46:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_dahdi-tools/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/dahdi-tools/compile -j$(nproc) || make package/feeds/telephony/dahdi-tools/compile V=s Compile.txt Applying ./patches/020-fix-undefined-reference-to-get_ver.patch using plaintext: patching file xpp/echo_loader.c autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:46:33 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_libpri/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/libpri/compile -j$(nproc) || make package/feeds/telephony/libpri/compile V=s Compile.txt Applying ./patches/001-fix-include-signal-h-warning.patch using plaintext: patching file pritest.c patching file testprilib.c Applying ./patches/010-no-werror.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/libpri-1.6.0&amp;#39; ccache_cc -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/libpri-1.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_ath10k-ct/smallbuffers/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/ath10k-ct/compile -j$(nproc) || make package/feeds/base/ath10k-ct/compile V=s Compile.txt Applying ./patches/161-ath10k-add-support-for-configuring-management-packet.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/162-ath10k-fix-possible-out-of-bound-access-of-ath10k_ra.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/163-ath10k-fix-incorrect-multicast-broadcast-rate-settin.patch using plaintext: patching file ath10k-4.19/mac.c Applying ./patches/164-ath10k-commit-rates-from-mac80211.patch using plaintext: patching file ath10k-4.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_mt76/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/mt76/compile -j$(nproc) || make package/feeds/base/mt76/compile V=s Compile.txt Applying ./patches/001-allow-vht-on-2g.patch using plaintext: patching file mac80211.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/mt76-2020-03-10-08054d5a/.configured_90cfbe17226f457e38768d3d3063649a&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8188eu/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8188eu/compile -j$(nproc) || make package/feeds/base/rtl8188eu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8189es/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8189es/compile -j$(nproc) || make package/feeds/base/rtl8189es/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8192du/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8192du/compile -j$(nproc) || make package/feeds/base/rtl8192du/compile V=s Compile.txt Applying ./patches/010-missing-header-in-ipv6.patch using plaintext: patching file core/rtw_br_ext.c make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8192du-2019-06-01-54c95aaa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ac/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ac/compile -j$(nproc) || make package/feeds/base/rtl8812au-ac/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-disable-default-build-x86.patch using plaintext: patching file Makefile Applying ./patches/020-change-value-of-vht-enable-and-usb-mode.patch using plaintext: patching file os_dep/linux/os_intfs.c Applying ./patches/030-add-missing-code-for-concurrent-mode.patch using plaintext: patching file os_dep/linux/os_intfs.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8812au-ct/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8812au-ct/compile -j$(nproc) || make package/feeds/base/rtl8812au-ct/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.h&amp;#39;, needed by &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/rtl8812au-ct-2020-01-13-e0d586aa/.configured_68b329da9893e34099c7d8ad5cb9c940&amp;#39;. Stop. </description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl8821cu/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl8821cu/compile -j$(nproc) || make package/feeds/base/rtl8821cu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-extra-cflags.patch using plaintext: patching file Makefile Applying ./patches/020-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_rtl88x2bu/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/rtl88x2bu/compile -j$(nproc) || make package/feeds/base/rtl88x2bu/compile V=s Compile.txt Applying ./patches/001-use-kernel-byteorder.patch using plaintext: patching file include/drv_types.h Applying ./patches/010-remove-repeat-flies.patch using plaintext: patching file include/drv_conf.h patching file include/linux/old_unused_rtl_wireless.h (renamed from include/linux/wireless.h) patching file include/rtl_autoconf.h (renamed from include/autoconf.h) make[3]: *** No rule to make target &amp;#39;/openwrt/staging_dir/target-x86_64_musl/usr/include/mac80211-backport/backport/autoconf.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch-mod-bcg729/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch-mod-bcg729/compile -j$(nproc) || make package/feeds/telephony/freeswitch-mod-bcg729/compile V=s Compile.txt mod_bcg729.c:30:10: fatal error: switch.h: No such file or directory #include &amp;#34;switch.h&amp;#34; ^~~~~~~~~~ compilation terminated. make[3]: *** [Makefile:82: /openwrt/build_dir/target-x86_64_musl/freeswitch-mod-bcg729-2017-06-29-686eb06d/.built] Error 1 </description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:54 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_freeswitch/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/freeswitch/compile -j$(nproc) || make package/feeds/telephony/freeswitch/compile V=s Compile.txt Applying ./patches/003-modmake-fix.patch using plaintext: patching file build/modmake.rulesam Applying ./patches/010-fix-zrtp-cflags.patch using plaintext: patching file libs/libzrtp/configure.ac Applying ./patches/030-fix-configure-ac.patch using plaintext: patching file configure.ac Applying ./patches/110-apr-add-cache-for-strerror_r.patch using plaintext: patching file libs/apr-util/build/apr_common.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_button-hotplug/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/button-hotplug/compile -j$(nproc) || make package/feeds/base/button-hotplug/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; HOSTCC scripts/basic/fixdep HOSTCC scripts/kconfig/conf.o HOSTCC scripts/kconfig/confdata.o HOSTCC scripts/kconfig/expr.o HOSTCC scripts/kconfig/lexer.lex.o HOSTCC scripts/kconfig/parser.tab.o HOSTCC scripts/kconfig/preprocess.o HOSTCC scripts/kconfig/symbol.o HOSTLD scripts/kconfig/conf scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_i2c-gpio-custom/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/i2c-gpio-custom/compile -j$(nproc) || make package/feeds/base/i2c-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_spi-gpio-custom/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/spi-gpio-custom/compile -j$(nproc) || make package/feeds/base/spi-gpio-custom/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; scripts/kconfig/conf --syncconfig Kconfig can&amp;#39;t find file Kconfig make[6]: *** [scripts/kconfig/Makefile:73: syncconfig] Error 1 make[5]: *** [Makefile:590: syncconfig] Error 2 make[4]: *** [Makefile:696: include/config/auto.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:45:31 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_luci_luci-app-nginx-pingos/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/luci/luci-app-nginx-pingos/compile -j$(nproc) || make package/feeds/luci/luci-app-nginx-pingos/compile V=s Compile.txt nginx-1.19.6/ nginx-1.19.6/auto/ nginx-1.19.6/conf/ nginx-1.19.6/contrib/ nginx-1.19.6/src/ nginx-1.19.6/configure nginx-1.19.6/LICENSE nginx-1.19.6/README nginx-1.19.6/html/ nginx-1.19.6/man/ nginx-1.19.6/CHANGES.ru nginx-1.19.6/CHANGES nginx-1.19.6/man/nginx.8 nginx-1.19.6/html/50x.html nginx-1.19.6/html/index.html nginx-1.19.6/src/core/ nginx-1.19.6/src/event/ nginx-1.19.6/src/http/ nginx-1.19.6/src/mail/ nginx-1.19.6/src/misc/ nginx-1.19.6/src/os/ nginx-1.19.6/src/stream/ nginx-1.19.6/src/stream/ngx_stream.c nginx-1.19.6/src/stream/ngx_stream.h nginx-1.19.6/src/stream/ngx_stream_access_module.c nginx-1.19.6/src/stream/ngx_stream_core_module.c nginx-1.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:44:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-g72x/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-g72x/compile -j$(nproc) || make package/feeds/telephony/asterisk-g72x/compile V=s Compile.txt autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I . --force -I m4 autoreconf: configure.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:44:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk/compile -j$(nproc) || make package/feeds/telephony/asterisk/compile V=s Compile.txt Applying ./patches/030-GNU-GLOB-exts-only-on-glibc.patch using plaintext: patching file res/ael/ael.flex patching file res/ael/ael_lex.c Applying ./patches/053-musl-mutex-init.patch using plaintext: patching file include/asterisk/lock.h Applying ./patches/100-build-reproducibly.patch using plaintext: patching file build_tools/make_build_h patching file Makefile Applying .</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:44:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/no-transcode/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:44:59 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_rtpengine/transcode/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/rtpengine/compile -j$(nproc) || make package/feeds/telephony/rtpengine/compile V=s Compile.txt Applying ./patches/01-cflags.patch using plaintext: patching file lib/lib.Makefile patching file daemon/Makefile patching file recording-daemon/Makefile patching file iptables-extension/Makefile Applying ./patches/04-prevent-systemd-detection.patch using plaintext: patching file lib/lib.Makefile Applying ./patches/200-openssl-deprecated.patch using plaintext: patching file daemon/dtls.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:44:28 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_node-ejdb2_node/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/node-ejdb2_node/compile -j$(nproc) || make package/feeds/packages/node-ejdb2_node/compile V=s Compile.txt Applying ./patches/999-fix_install_js.patch using plaintext: patching file install.js Applying ./patches/999-fix_strip_issue.patch using plaintext: patching file install.js Applying ./patches/999-mips_support.patch using plaintext: patching file package.json npm info it worked if it ends with ok npm info using npm@6.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_qbittorrent-enhanced-edition/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:43:18 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_qbittorrent-enhanced-edition/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/qBittorrent-Enhanced-Edition/compile -j$(nproc) || make package/feeds/base/qBittorrent-Enhanced-Edition/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for x86_64-openwrt-linux-gcc... ccache_cc checking whether the C compiler works... yes checking for C compiler default output file name.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:42:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_jool/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/jool/compile -j$(nproc) || make package/feeds/packages/jool/compile V=s Compile.txt configure: WARNING: unrecognized options: --disable-nls configure: loading site script /openwrt/include/site/x86_64 checking for a BSD-compatible install... /openwrt/staging_dir/host/bin/install -c checking whether build environment is sane... yes checking for x86_64-openwrt-linux-strip.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:42:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ksmbd/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ksmbd/compile -j$(nproc) || make package/feeds/packages/ksmbd/compile V=s Compile.txt Applying ./patches/01-keep_kmod_metadata.patch using plaintext: patching file glob.h make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/unicode.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/auth.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/vfs_cache.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.3.9/connection.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/ksmbd-3.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:42:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-dongle/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-dongle/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-dongle/compile V=s Compile.txt Applying ./patches/200-fix-iconv-detection.patch using plaintext: patching file configure.ac Applying ./patches/300-use-openwrt-flags.patch using plaintext: patching file configure.ac autoreconf: Entering directory `.&amp;#39; autoreconf: configure.ac: not using Gettext autoreconf: running: /openwrt/staging_dir/host/bin/aclocal -I /openwrt/staging_dir/target-x86_64_musl/host/share/aclocal -I /openwrt/staging_dir/hostpkg/share/aclocal -I /openwrt/staging_dir/target-x86_64_musl/usr/share/aclocal -I m4 -I .</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:42:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-chan-sccp/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-chan-sccp/compile -j$(nproc) || make package/feeds/telephony/asterisk-chan-sccp/compile V=s Compile.txt Applying ./patches/01-prevent-extra-optimization.patch using plaintext: patching file autoconf/extra.m4 Hunk #1 succeeded at 516 with fuzz 2 (offset 25 lines). Applying ./patches/100-reproducible-builds.patch using plaintext: patching file src/chan_sccp.c Hunk #1 succeeded at 198 (offset 12 lines).</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:42:57 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_telephony_asterisk-opus/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/telephony/asterisk-opus/compile -j$(nproc) || make package/feeds/telephony/asterisk-opus/compile V=s Compile.txt Applying ./patches/01-Makefile.patch using plaintext: patching file Makefile make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458&amp;#39; ccache_cc -o codecs/codec_opus_open_source.so -DAST_MODULE=\&amp;#34;codec_opus_open_source\&amp;#34; -Os -pipe -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -fmacro-prefix-map=/openwrt/build_dir/target-x86_64_musl/asterisk-opus-2017-10-09-83e1b458=asterisk-opus-2017-10-09-83e1b458 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro -DAST_MODULE_SELF_SYM=__internal_codec_opus_open_source_self -DPIC -fpic -I/openwrt/staging_dir/toolchain-x86_64_gcc-8.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:42:07 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_routing_batman-adv/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/routing/batman-adv/compile -j$(nproc) || make package/feeds/routing/batman-adv/compile V=s Compile.txt Applying ./patches/0001-Revert-batman-adv-genetlink-move-to-smaller-ops-wher.patch using plaintext: patching file compat-include/net/genetlink.h patching file net/batman-adv/netlink.c Applying ./patches/0002-Revert-batman-adv-Add-new-include-for-min-max-helper.patch using plaintext: patching file compat-include/linux/minmax.h patching file net/batman-adv/bat_v.c patching file net/batman-adv/bat_v_elp.c patching file net/batman-adv/bat_v_ogm.c patching file net/batman-adv/fragmentation.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:41:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.115&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210219/src/main.o In file included from &amp;lt;command-line&amp;gt;: ./../wireguard-linux-compat-1.0.20210219/src/compat/compat.h:1059:22: error: static declaration of &amp;#39;ip_tunnel_parse_protocol&amp;#39; follows non-static declaration static inline __be16 ip_tunnel_parse_protocol(const struct sk_buff *skb) ^~~~~~~~~~~~~~~~~~~~~~~~ In file included from .</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:41:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_openvswitch/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/openvswitch/compile -j$(nproc) || make package/feeds/packages/openvswitch/compile V=s Compile.txt WARNING: kmod-openvswitch is not available in the kernel config - generating empty package Applying ./patches/0001-netdev-linux-Let-interface-flag-survive-internal-por.patch using plaintext: patching file lib/netdev-linux.c Applying ./patches/0002-python-separate-host-target-python-for-cross-compile.patch using plaintext: patching file Makefile.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:41:22 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_ovn/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/ovn/compile -j$(nproc) || make package/feeds/packages/ovn/compile V=s Compile.txt Applying ./patches/0001-build-skip-check-and-use-of-libunbound.patch using plaintext: patching file configure.ac Applying ./patches/0002-build-skip-tests-and-docs.patch using plaintext: patching file Makefile.am Hunk #1 succeeded at 479 (offset -4 lines). Applying ./patches/0003-ovn-lib-fix-install_dir.patch using plaintext: patching file utilities/ovn-lib.</description>
    </item>
    
    <item>
      <title>compile.10</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.10/</link>
      <pubDate>Fri, 07 May 2021 12:39:20 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_packages_php7/compile.10/</guid>
      <description>build number: 10
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/packages/php7/compile -j$(nproc) || make package/feeds/packages/php7/compile V=s Compile.txt Applying ./patches/0013-Add-support-for-use-of-the-system-timezone-database.patch using plaintext: patching file ext/date/config0.m4 patching file ext/date/lib/parse_tz.c Applying ./patches/0032-Use-system-timezone.patch using plaintext: patching file ext/date/php_date.c Applying ./patches/0041-Add-patch-to-remove-build-timestamps-from-generated-.patch using plaintext: patching file ext/standard/info.c patching file sapi/apache2handler/config.</description>
    </item>
    
  </channel>
</rss>